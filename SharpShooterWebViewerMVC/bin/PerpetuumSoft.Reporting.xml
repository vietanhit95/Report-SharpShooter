<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PerpetuumSoft.Reporting</name>
  </assembly>
  <members>
    <member name="T:PerpetuumSoft.Reporting.CommandModel.Command">
      <summary>Base class for all report designer commands.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.Command.Undo">
      <summary>When overriden in derived class undo result of this command.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.Command.Redo">
      <summary>When overriden in derived class restore result of command.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.CommandModel.CommandCollection">
      <summary>Represents the collection of Command objects.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.RemoveRange(System.Int32,System.Int32)">
      <summary>Removes the range of commands.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.IndexOf(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Returns the specified object's index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.#ctor">
      <summary>Creates a new instance of CommandCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Insert(System.Int32,PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Inserts the specified object to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Remove(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Removes the specified Command from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Add(PerpetuumSoft.Reporting.CommandModel.Command[])">
      <summary>Adds the specified array Command objects to the end of the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Item(System.Int32)">
      <summary>Gets the object at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Contains(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Returns whether the object already exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.CommandModel.CommandCollection.Add(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Adds the specified Command to the end of the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.Design.FileReportSlotFileNameEditor">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.Design.ReportManagerDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.Design.ReportSlotCollectionEditor">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.Design.ReportSlotDocumentTypeConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.EmptyRenderSite">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ErrorEventArgs">
      <summary>Provides data for ShowError and HandleException events.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ErrorEventArgs.Handled">
      <summary>Gets or sets a value indicating whether the exception should be handled.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ErrorEventArgs.ExceptionMode">
      <summary>Gets or sets mode of exception handling</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ErrorEventArgs.Exception">
      <summary>Gets thrown exception.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ErrorEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ErrorEventHandler">
      <summary>Represents method that will handle ShowError and HandleException events.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.FileReportSlot">
      <summary>Represents report source saved in a file.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.FileReportSlot.SupportsSaving">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Components.ReportSlot.SupportsSaving" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.FileReportSlot.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.FileReportSlot" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.FileReportSlot.LoadReport">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.LoadReport" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.FileReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.FileReportSlot.FilePath">
      <summary>Gets or sets path to a file containing report source.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.FileReportSlot.Dispose(System.Boolean)">
      <exclude>
      </exclude>
      <summary>'Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.FileReportSlot.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.FileReportSlot" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.GetAvailableTemplateNamesEventArgs">
      <summary>Represents names of available templates</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.GetAvailableTemplateNamesEventArgs.TemplateNames">
      <summary>Gets collection  template names</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.GetAvailableTemplateNamesEventArgs.#ctor(System.Collections.Specialized.StringCollection)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.GetAvailableTemplateNamesEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.GetAvailableTemplateNamesEventHandler">
      <summary>Occurs when it is necessary to get names of available templates</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs">
      <summary>Provides data for the GetReportParameter event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs.#ctor(System.String,PerpetuumSoft.Reporting.DOM.ParameterCollection)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs.TemplateName">
      <summary>Gets template name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs.Parameters">
      <summary>Gets parameters collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.GetReportParameterEventHandler">
      <summary>Represents method that will handle the GetReportParameter event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.HyperlinkEventArgs">
      <summary>Provides data for Hyperlink click events.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.HyperlinkEventArgs.Hyperlink">
      <summary>Gets the hyperlink string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.HyperlinkEventArgs.#ctor(System.String)">
      <summary>Constructor for HyperlinkEventArgs object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.HyperlinkEventArgs.Handled">
      <summary>Gets or sets the value indicating whether the hyperlink event was handled.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.HyperlinkEventHandler">
      <summary>Represents method that will handle the HyperlinkClick event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.InlineReportSlot">
      <summary>Represents report source saved in a string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.InlineReportSlot.Dispose(System.Boolean)">
      <exclude>
      </exclude>
      <summary>'Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.InlineReportSlot.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.InlineReportSlot" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.InlineReportSlot.DocumentStream">
      <summary>Gets or sets serialized document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.InlineReportSlot.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.InlineReportSlot" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.InlineReportSlot.SupportsSaving">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Components.ReportSlot.SupportsSaving" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.InlineReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.InlineReportSlot.LoadReport">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.LoadReport" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.IReportSource">
      <summary>Provides functionality to report sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCompleted">
      <summary>Performs additional custom processes when rendering is complete.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.IReportSource.HyperlinkClick">
      <summary>Occurs when hyperlink is clicked.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderCompleted">
      <summary>Occurs when rendering is complete.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderingError(PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderingError" /> event. </summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.RenderDocument">
      <summary>Renders document.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderingError">
      <summary>Occurs when the rendering is completed with an error.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.OnHyperlinkClick(PerpetuumSoft.Reporting.Components.HyperlinkEventArgs)">
      <summary>Performs additional custom processes when clicking on a hyperlink.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.Prepare">
      <summary>Prepares document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCanceled(System.EventArgs)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderCanceled" /> event. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.IReportSource.Document">
      <summary>Gets or sets document.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.IReportSource.GetReportParameter">
      <summary>Occurs when report parameters are received.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.IReportSource.OnGetReportParameter(PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs)">
      <summary>Performs additional custom processes when receiving report parameters.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderCanceled">
      <summary>Occurs when rendering has been canceled</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.IResolveDataSource">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ObjectPointerCollection">
      <summary>Represents a collection of associated String keys and Object values. Manages the list of data sources in report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Clone">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Item(System.Int32)">
      <summary>Gets an element by the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Clear">
      <summary>Clears the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.PerpetuumSoft#Reporting#Data#IDataSourceManager#GetKnownDataSourceNames">
      <summary>Returns list of all known data sources names.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Remove(System.String)">
      <summary>Removes an object from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.PerpetuumSoft#Reporting#Data#IDataSourceManager#GetDataSources">
      <summary>Returns array of all known data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.#ctor">
      <summary>Creates an empty collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.PerpetuumSoft#Reporting#Data#IDataSourceManager#GetDataSource(System.String)">
      <summary>Returns data source associated with specified name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Item(System.String)">
      <summary>Gets the element associated with the specified key.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.Add(System.String,System.Object)">
      <summary>Adds an object to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ObjectPointerCollection.#ctor(System.String[],System.Object[])">
      <summary>Creates collection and fills it with the specified keys and objects.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs">
      <summary>Represents the information on the rendering error.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs.Exception">
      <summary>Gets Exceptions which include the information on the error.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs.#ctor(System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs.Handled">
      <summary>Gets or sets a value that indicates if an error is handled.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportBase">
      <summary>Base class for all Report components in the library. Provides basic logic for working with final documents.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.SaveDocument(System.IO.Stream)">
      <summary>Saves the final document to the specified stream.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportBase.RenderCompleted">
      <summary>Occurs when the rendering process is finished.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.OnRenderCompleted">
      <summary>Raises the RenderComplited event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportBase.IsPrepared">
      <summary>Gets whether the final document is already prepared.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.OnHyperlinkClick(PerpetuumSoft.Reporting.Components.HyperlinkEventArgs)">
      <summary>Raises the HyperlinkClick event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportBase.Document">
      <summary>Gets or sets the document handled by the report component.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.LoadDocument(System.String)">
      <summary>Loads a document from the specified file.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportBase.HyperlinkClick">
      <summary>Occurs when user clicks on a hyperlink in report preview.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.Prepare(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Renders the final document using the specified RenderSite.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.Prepare">
      <summary>Renders the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ReportBase class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.SaveDocument(System.String)">
      <summary>Saves the final document to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.RenderDocument(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Renders the final document using the specified RenderSite.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.RenderDocument">
      <summary>Renders the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportBase.About">
      <summary>Gets the copyright string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.#ctor">
      <summary>Initializes a new instance of the ReportBase class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportBase.LoadDocument(System.IO.Stream)">
      <summary>Loads a document from the specified stream.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportGenerator">
      <summary>Defines the central component that provides interaction between all parts of Report Sharp-Shooter. It integrates the report template, rendering of the final document, runs the report template designer etc.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.OnRenderingError(PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderingError(PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.OnGetReportParameter(PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnGetReportParameter(PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.RenderCanceled">
      <summary>Occurs when rendering has been canceled</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Components#IReportSource#OnRenderCompleted">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCompleted" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.SaveTemplate(System.String)">
      <summary>Saves the template to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#ShowError(System.Exception)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ShowError(System.Exception)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.OwnerForm">
      <summary>Gets or sets owner form for the rendering progress dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.OnRenderCanceled(System.EventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCanceled(System.EventArgs)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.IsPrepared">
      <summary>Gets whether the final document is already prepared.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IResolveSubReport#GetSubReportTemplate(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetSubReportTemplate(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#ShowProgress(System.String,System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ShowProgress(System.String,System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.StringRegKey">
      <exclude>Возвращает или устанавливает <see cref="T:System.String" /></exclude>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#CancelRender">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.CancelRender" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.Print(System.Drawing.Printing.PrinterSettings)">
      <summary>Prints the final document with the given printer settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.Prepare(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Renders the final document using the specified RenderSite.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.SaveTemplate(System.IO.Stream)">
      <summary>Saves the template to the specified stream.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.LoadTemplate(System.String)">
      <summary>Loads a template from the specified file.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.DataSources">
      <summary>Gets and sets a collection of data sources for the ReportGenerator.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.ExceptionMode">
      <summary>Gets and sets exception handling mode for rendering.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.CancelPrepare(System.Object,System.EventArgs)">
      <summary>Cancels preparing document.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.GetReportParameter">
      <summary>Occurs when report parameters are received.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#ProgressEnd">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ProgressEnd" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.GetAvailableTemplateNames">
      <exclude>
      </exclude>
      <summary>Gets list of available template names.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#HandleRenderingException(System.Exception)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.HandleRenderingException(System.Exception)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.Template">
      <summary>Gets and sets the Template for the ReportGenerator.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IResolveSubReport#GetAvailableTemplateNames">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetAvailableTemplateNames" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#ProgressStart">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ProgressStart" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.Prepare">
      <summary>Renders the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.DesignTemplate(System.String)">
      <summary>Runs report template designer for the end-user session.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.LoadTemplate(System.IO.Stream)">
      <summary>Loads a template from the specified stream.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportGenerator.ModalProgressForm">
      <summary>Gets or sets dialog progress mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.#ctor">
      <summary>Initializes a new instance of the ReportBase class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#NotifyCancelRendering">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.NotifyCancelRendering" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.RenderingError">
      <summary>Occurs when the rendering is completed with an error.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#HandleException(System.Exception)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.HandleException(System.Exception)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the ReportGenerator class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.RenderDocument(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Renders the final document using the specified RenderSite.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.PerpetuumSoft#Reporting#Rendering#IRenderSite#DocumentCompleted(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.DocumentCompleted(PerpetuumSoft.Reporting.DOM.Document)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportGenerator.ResolveSubReport">
      <summary>Occurs when subreport is resolved.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportGenerator.DesignTemplate">
      <summary>Runs report template designer for the end-user session.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportManager">
      <summary>Contains reports collection and datasources collection.  </summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportManager.ResolveSubReport">
      <summary>Occurs when subreport is resolved.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.OnResolveDataSource(PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs)">
      <exclude>
      </exclude>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportManager.ResolveDataSource">
      <summary>Occurs when DataSource is resolved.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.StringRegKey">
      <exclude>
      </exclude>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportManager.GetAvailableTemplateNames">
      <summary>Represents the method for getting names of the avalable templates</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.ReportScriptType">
      <summary>Gets or sets the type used as a basic one for the dynamically generated type of the document template scripts</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.GetKnownDataSourceNames">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetKnownDataSourceNames" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.About">
      <exclude>
      </exclude>
      <summary>Gets data about the programm</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ReportManager" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.Reports">
      <summary>Gets a set of documents templates.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.GetDataSources">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetDataSources" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.PerpetuumSoft#Reporting#Components#IResolveDataSource#ResolveDataSource(PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs)">
      <exclude>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IResolveDataSource.ResolveDataSource(PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs)" />.</exclude>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportManager.HyperlinkClick">
      <summary>Occurs when hyperlink is clicked.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.GetSubReportTemplate(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetSubReportTemplate(System.String)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportManager.GetReportParameter">
      <summary>Occurs when report parameters are received.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.GetDataSource(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetDataSource(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ReportManager" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.Dispose(System.Boolean)">
      <exclude>
      </exclude>
      <summary>'Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.OwnerForm">
      <summary>Gets or sets owner form for the rendering progress dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportManager.PerpetuumSoft#Reporting#Rendering#IResolveSubReport#GetAvailableTemplateNames">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetAvailableTemplateNames" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.DataSources">
      <summary>Gets or sets DataSource collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportManager.IsCloneDataSource">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportPrintDocument">
      <summary>Provides document printing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportPrintDocument.PrintedPage">
      <summary>Gets a page currently printed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.Reset">
      <summary>Sets ReportPrintDocument in its initial state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.GoNextPage">
      <summary>Sets the next page as a current one.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportPrintDocument.Source">
      <summary>Gets or sets reports source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportPrintDocument.PrintedPageNumber">
      <summary>Gets a page number currently printed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>Overridden. See <see cref="M:System.Drawing.Printing.PrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportPrintDocument.Document">
      <summary>Gets a document from source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportPrintDocument.LastPageNumber">
      <summary>Gets a number of the last page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>Overridden. See <see cref="M:System.Drawing.Printing.PrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.OnQueryPageSettings(System.Drawing.Printing.QueryPageSettingsEventArgs)">
      <summary>Overridden. See <see cref="M:System.Drawing.Printing.PrintDocument.OnQueryPageSettings( System.Drawing.Printing.QueryPageSettingsEventArgs)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ReportPrintDocument" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportPrintDocument.HasMorePages">
      <summary>Returns value indicating that the current page is the last one in a document.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportSlot">
      <summary>Represents base class for report sources.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportSlot.RenderCompleted">
      <summary>Implements <see cref="E:PerpetuumSoft.Reporting.Components.IReportSource.RenderCompleted" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.Prepare(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Implements <see cref="'M:PerpetuumSoft.Reporting.Components.IReportSource.Prepare()" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.Manager">
      <summary>Gets manager for ReportSlot.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.PerpetuumSoft#Reporting#Components#IReportSource#OnRenderCompleted">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCompleted" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportSlot.RenderCanceled">
      <summary>Occurs when rendering has been canceled</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.Prepare">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.Prepare" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportSlot.HyperlinkClick">
      <summary>Implements <see cref="E:PerpetuumSoft.Reporting.Components.IReportSource.HyperlinkClick" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.OnGetReportParameter(PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnGetReportParameter(PerpetuumSoft.Reporting.Components.GetReportParameterEventArgs)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.Document">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Components.IReportSource.Document" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.SupportsSaving">
      <summary>Gets value indicating whether ReportSlot will save report or not.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.RenderDocument">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.RenderDocument" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Saves the given document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.RenderDocument(PerpetuumSoft.Reporting.Rendering.IRenderSite)">
      <summary>Implements <see cref="'M:PerpetuumSoft.Reporting.Components.IReportSource.RenderDocument(PerpetuumSoft.Reporting.Rendering.IRenderSite)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.OnRenderingError(PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderingError(PerpetuumSoft.Reporting.Components.RenderingErrorEventArgs)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.LoadReport">
      <summary>Returns report corresponding to the given ReportSlot.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.OnRenderCanceled(System.EventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnRenderCanceled(System.EventArgs)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportSlot.GetReportParameter">
      <summary>Implements <see cref="E:PerpetuumSoft.Reporting.Components.IReportSource.GetReportParameter" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.DesignTemplate">
      <summary>Runs report designer and opens a document corresponding to the given ReportSlot in it.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.StyleSheet">
      <summary>Gets or sets ReportSlot styles.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Components.ReportSlot.RenderingError">
      <summary>Occurs when the rendering is completed with an error.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.ReportName">
      <summary>Gets or sets report name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlot.ExceptionMode">
      <summary>Gets or sets exception mode for ReportSlot.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlot.OnHyperlinkClick(PerpetuumSoft.Reporting.Components.HyperlinkEventArgs)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Components.IReportSource.OnHyperlinkClick(PerpetuumSoft.Reporting.Components.HyperlinkEventArgs)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportSlotCollection">
      <summary>Represents collection of ReportSlots.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Components.ReportSlot)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing an element from the ReportSlotCollection instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.AddRange(PerpetuumSoft.Reporting.Components.ReportSlot[])">
      <summary>Adds a report slots to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new element into the ReportSlotCollection instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Contains(PerpetuumSoft.Reporting.Components.ReportSlot)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Add(PerpetuumSoft.Reporting.Components.ReportSlot)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Item(System.String)">
      <summary>Gets a control from the collection by the given name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Remove(PerpetuumSoft.Reporting.Components.ReportSlot)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.IndexOf(PerpetuumSoft.Reporting.Components.ReportSlot)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ReportSlotCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ReportSlotCollection" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ReportSlotCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ReportSlotRenderSite">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs">
      <summary>Provides data for the ResolveDataSource event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs.#ctor(System.String,System.Object)">
      <exclude>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs" /> class.</exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs.DataSource">
      <summary>Gets or sets data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventArgs.DataSourceName">
      <summary>Gets or sets data source name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ResolveDataSourceEventHandler">
      <summary>Represents method that will handle the ResolveDataSource event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ResolveSubReportEventArgs">
      <summary>Provides data for the ResolveSubReport event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.ResolveSubReportEventArgs.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.ResolveSubReportEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ResolveSubReportEventArgs.Template">
      <summary>Gets or sets document template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.ResolveSubReportEventArgs.TemplateName">
      <summary>Gets document template name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ResolveSubReportEventHandler">
      <summary>Represents method that will handle the ResolveSubReport event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.ShowProgressDelegate">
      <summary>Represents method that will handle the ShowProgress event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Components.UrlReportSlot">
      <summary>Represents report source read from a specific URL.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.UrlReportSlot.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.UrlReportSlot" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.UrlReportSlot.SupportsSaving">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Components.ReportSlot.SupportsSaving" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.UrlReportSlot.Dispose(System.Boolean)">
      <exclude>
      </exclude>
      <summary>'Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.UrlReportSlot.LoadReport">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.LoadReport" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.UrlReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Components.ReportSlot.SaveReport(PerpetuumSoft.Reporting.DOM.Document)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Components.UrlReportSlot.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Components.UrlReportSlot" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Components.UrlReportSlot.Url">
      <summary>Gets or sets URL.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.DataNavigationException">
      <summary>The exception that is thrown when data navigation failed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.DataNavigationException" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigationException.DataMember">
      <summary>Gets corresponding data member.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationException.#ctor(System.String,System.String,System.Exception)">
      <summary>Creates new instance of DataNavigationException.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.DataNavigationManager">
      <summary>Controls all data navigators associated with RenderEngine.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.SubPath(System.String[],System.Int32,System.Int32)">
      <summary>Retrieves sub path.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.RetrieveFieldPath(System.String)">
      <summary>Retrieves field name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.StringToPath(System.String)">
      <summary>Converts string to patrh array.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.StartNavigator(System.String,PerpetuumSoft.Reporting.Data.DataNavigator)">
      <summary>Creates new navigator and adds it to the navigators list.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.GetFieldValue(System.String)">
      <summary>Returns field value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.RetrieveNavigatorPath(System.String)">
      <summary>Retrieves navigator path.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.GetNavigator(System.String)">
      <summary>Gets active navigator associated with specified path.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.StartNavigator(System.String)">
      <summary>Creates new navigator and adds it to the navigators list.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.#ctor(PerpetuumSoft.Reporting.Data.IDataSourceManager)">
      <summary>Creates new instance of the DataNavigationManager class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.EndNavigator(PerpetuumSoft.Reporting.Data.DataNavigator)">
      <summary>Removes given navigator from navigator list.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigationManager.PathSeparator">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.PathItemToString(System.String)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.PathToString(System.String[],System.Int32,System.Int32)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.CombinePathItem(System.String,System.String)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigationManager.PathToString(System.String[])">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.DataNavigator">
      <summary>Provides uniform mechanism for data navigation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.CreateNavigator(System.Object)">
      <summary>Creates navigator for the given object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.RecordNumber">
      <summary>Gets current record number.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.FirstRecord">
      <summary>Gets first record.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.Item(System.String)">
      <summary>Gets field value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.PropogateMode">
      <summary>Gets or sets propogate mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.MoveNext">
      <summary>Moves navigator to the next record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.Reset">
      <summary>Resets navigator state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetFieldNavigator(System.String)">
      <summary>Returns navigator for specified field.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.Current">
      <summary>Gets current object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetFieldValue(System.String)">
      <summary>Gets field value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetRecordFieldValue(System.String,System.Object)">
      <summary>Gets property value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.CreateRangeNavigator(System.Int32)">
      <summary>Create mock navigator for given range.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.ValidRecord">
      <summary>Gets any valid record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetTypePropertiesDescriptors(System.Type)">
      <summary>Get properties list.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.HasMoreItems">
      <summary>Gets if navigator has more records.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetChildNavigators">
      <summary>Returns list of nested navigators.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetList">
      <summary>Returns data list.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DataNavigator.GetRecordChildNavigators(System.Object)">
      <summary>Returns list of nested navigators.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DataNavigator.Name">
      <summary>Gets or sets navigator name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.DocumentDataSource">
      <summary>Represents the document template data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DocumentDataSource.Name">
      <summary>Gets or sets имя.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DocumentDataSource.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DocumentDataSource.GetDataNavigator">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSource.GetDataNavigator" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DocumentDataSource.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DocumentDataSource.GetDataSource">
      <summary>Gets data source.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection">
      <summary>Represents the data sources collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection.Item(System.String)">
      <summary>Gets the <see cref="T:PerpetuumSoft.Reporting.Data.DocumentDataSource" /> by its name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.Element">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.Group">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.GroupEngine">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.GroupOrder">
      <exclude>Specifies identifiers to indicate sort order</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.IAggregateDescription">
      <exclude>Defines interface for the aggregate value calculation</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.IDataLayout">
      <exclude>The interface provides methods for data grouping, sorting, and aggregation.</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.IGroupDescription">
      <exclude>Provides methods for groups identification</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.ISortDescription">
      <exclude>Perpesents methods for sorting identification</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Groupping.SortOrder">
      <exclude>Gets sorting type</exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.IDataSource">
      <summary>Provides interface for plug-in data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.IDataSource.GetDataNavigator">
      <summary>Returns DataNavigator for this instance of data source.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.IDataSourceManager">
      <summary>Provides access to data sources collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetDataSources">
      <summary>Returns all data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetKnownDataSourceNames">
      <summary>Returns names of known data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.IDataSourceManager.GetDataSource(System.String)">
      <summary>Returns data source associated with specified name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.OdbcDataSource">
      <summary>Represents data source for the document which gets data from the database supporting work through ODBC.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.OdbcDataSource.FillDataTable(System.Data.DataTable)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.FillDataTable(System.Data.DataTable)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.OdbcDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.OdbcDataSource" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.OdbcDataSource.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory">
      <summary>Represents basic class for all factories of aggregate functions.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Equals(System.Object)">
      <summary>Overridden. See <see cref="M:System.Object.Equals(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent">
      <summary>Gets value which indicates whether the result will be represented as percentage. </summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion">
      <summary>Returns a newly created aggregate function.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetHashCode">
      <summary>Overridden. See <see cref="M:System.Object.GetHashCode" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName">
      <summary>Returns aggregate function symbolic name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg">
      <summary>Average value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Avg.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count">
      <summary>Count of values.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Count.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation">
      <summary>Represents an aggregate function for estimate of the standard deviation calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfStandardDeviation.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance">
      <summary>Represents an aggregate function for calculation of the estimate of the variance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.EstimateOfVariance.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis">
      <summary>Represents an aggregate function for kurtosis calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Kurtosis.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max">
      <summary>Maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Max.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median">
      <summary>Represents an aggregate function for median calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Median.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min">
      <summary>Minimum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Min.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness">
      <summary>Represents an aggregate function for skewness calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Skewness.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation">
      <summary>Represents an aggregate function for the standard deviation calculation.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.StandardDeviation" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum">
      <summary>Sum of values.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Sum.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance">
      <summary>Represents an aggregate function for variance calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance.CreateFuntion">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CreateFuntion" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance.CanGetPercent">
      <summary>Overridden. See <see cref="P:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.CanGetPercent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.Variance.GetName">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory.GetName" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.ByPassRecordDelegate">
      <summary>Represents the method for pivot table data filtering.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.CalculateRecordDelegate">
      <summary>Represents the method for calculating filed values for current data row.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.DataCube">
      <summary>Represents data view of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTable" /> element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.ShowSingleFact">
      <summary>Gets or sets whether a single fact caption should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.Caption">
      <summary>Gets or sets a pivot table title.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.XDimensions">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection" /> that contains fields for building pivot table columns.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.PivotTable">
      <summary>Gets the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable" /> object representing any pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.ShowZeroValues">
      <summary>Gets or sets whether zero values should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataCube.Recalculate">
      <summary>Recalculates a pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.DataSource">
      <summary>Gets or sets a data source for a pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.Facts">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection" /> that contains fields for building pivot table facts.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.YDimensions">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection" /> that contains fields for building pivot table rows.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataCube.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.DataCube" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataCube.Layout">
      <summary>Gets or sets DataCube settings.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.DataCubeDataSite">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.DataCubeLayout">
      <summary>Represents the Pivot table settings.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable">
      <summary>Represents the pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.YRoot">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> which is the root of Y dimension.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.GetTable(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Returns the fact table by the given parameter. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.Error">
      <summary>Gets or sets the object representing an error. If a pivot table was built correctly this property should be NULL.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.GetFactValue(PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Returns the value from the facts table.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.GetFactPercent(PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Returns the value from the facts table in percentage terms.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.AddTable(PerpetuumSoft.Reporting.Data.Olap.Field,PerpetuumSoft.Reporting.Data.Olap.FactTable)">
      <summary>Adds a new fact table to the fact table collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.XRoot">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> which is the root of X dimension.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.DataPivotTable.IsValidFact(PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.FieldItem,PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Gets value indicating whether the fact defined by given parameters has valid result.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.EmptyFilter">
      <summary>Represents an empty filter. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.EmptyFilter.Filter">
      <summary>Gets a single empty filter. </summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.EmptyFilter.IsFiltered(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.Olap.IFilter.IsFiltered(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FactTable">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.Field">
      <summary>Represents a pivot table field.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Expression">
      <summary>Gets or sets the expression for calculating data of this field.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.#ctor(System.String,System.String,PerpetuumSoft.Reporting.Data.Olap.SortOrder)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.ResetAggregate">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.TotalLabel">
      <summary>Gets or sets the total value caption.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.ShouldSerializeAggregate">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.#ctor(System.String,System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Format">
      <summary>Gets or sets string format used for field data printing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.ShowPercent">
      <summary>Gets or sets the value that indicates whether the data will be displayed in percentage terms.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.SortOrder">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Olap.SortOrder" /> indicating the sort order.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.DisplayExpression">
      <summary>Gets or sets the expression for displaying data of the given field.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Caption">
      <summary>Gets or sets field caption.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Width">
      <summary>Gets or sets field column width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.ToString">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Aggregate">
      <summary>Gets or sets the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory" /> object which creates an aggregate function.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.Field.ValueToString(System.Object,System.Boolean)">
      <summary>Returns a fields value string notion.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.Field.Filter">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.IFilter" /> object used for data filtration.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem">
      <summary>Represents a dimension item of a pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.ChildItems">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection" /> containing child items.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.GetSheetCount">
      <summary>Returns the  number of "sheet" items for the given item.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.IsTotal">
      <summary>Gets the value indicating whether this item is the group total.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.GetTreeDepth">
      <summary>Returns the depth of a tree which root is the given item.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.SetCollapsed(System.Boolean,System.Int32,System.Boolean)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object,System.Object,PerpetuumSoft.Reporting.Data.Olap.FieldItem)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.DisplayValue">
      <summary>Gets a value for displaying a field item. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.Index">
      <summary>Gets or sets an index of a pivot table row or column.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object,PerpetuumSoft.Reporting.Data.Olap.FieldItem)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.Parent">
      <summary>Gets a parent item for the given field item.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.Value">
      <summary>Gets a field item value. </summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object,System.Object,System.Int32,PerpetuumSoft.Reporting.Data.Olap.FieldItem)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.#ctor(System.Object,System.Int32,PerpetuumSoft.Reporting.Data.Olap.FieldItem)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItem.Collapsed">
      <summary>Gets or sets the value indicating whether child items will be displayed.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem.ErrorValue">
      <summary>Represents incorrect field item data.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.ErrorValue.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem.ErrorValue" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.ErrorValue.ToString">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem.TotalValue">
      <summary>Represents total item data.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.TotalValue.ToString">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItem.TotalValue.#ctor(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem.TotalValue" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection">
      <summary>Represents the collection of <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.GetEnumerator">
      <summary>Implements <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.Item(System.Object)">
      <summary>Implements <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.Item(System.Int32,System.Boolean)">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItem" /> at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.Add(PerpetuumSoft.Reporting.Data.Olap.FieldItem)">
      <summary>Adds the <see cref="T:PerpetuumSoft.Reporting.data.Olap.FieldItem" /> to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldItemCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IDictionary.Item(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection">
      <summary>Represents the collection of <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Add(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.AddRange(PerpetuumSoft.Reporting.Data.Olap.Field[])">
      <summary>Adds the array of <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.OnInsertComplete(System.Int32,System.Object)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.OnRemoveComplete(System.Int32,System.Object)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Remove(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Item(System.String)">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> at the specified index.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.CollectionChanged">
      <summary>Occurs after collection change.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.IndexOf(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.AddRange(PerpetuumSoft.Reporting.Data.Olap.FieldsCollection)">
      <summary>Adds the collection of <see cref="T:PerpetuumSoft.Reporting.Data.Olap.Field" /> to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Contains(PerpetuumSoft.Reporting.Data.Olap.Field)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FieldsCollection.CollectionChangeEventHandler">
      <summary>Represents the method that will handle CollectionChanged.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.FilterException">
      <summary>Base class for all exceptions thrown from filters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FilterException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FilterException" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FilterException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FilterException" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.FilterException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.FilterException" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.IAggregateFunction">
      <summary>Represents the aggregate function.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.IAggregateFunction.AddValue(System.Double)">
      <summary>Adds a value to the aggregation result.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.IAggregateFunction.ValidResult">
      <summary>Gets value indicating whether the GetResult function result is valid.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.IAggregateFunction.GetResult">
      <summary>Returns the aggregation result.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.IFilter">
      <summary>Represents a data filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.IFilter.IsFiltered(System.Object)">
      <summary>Returns the value indicating whether value is filtered.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode">
      <summary>Represents a tree element discribing nested data sources</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.Navigator">
      <summary>Gets nested data source navigator <see cref="T:PerpetuumSoft.Reporting.Data.DataNavigator" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.Parent">
      <summary>Gets or sets parent node <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.#ctor(PerpetuumSoft.Reporting.Data.DataNavigator)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.ChildNodes">
      <summary>Gets child site <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.#ctor(PerpetuumSoft.Reporting.Data.DataNavigator,PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode.Neighbor">
      <summary>Gets or sets neighbour node <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode" /></summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection">
      <summary>Represents the tree node collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection.Add(PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNodeCollection.IndexOf(PerpetuumSoft.Reporting.Data.Olap.JointPassTreeNode)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.NestedField">
      <summary>Represetnts a data source nested field for data navigation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedField.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.NestedField" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.NestedField.Path">
      <summary>Gets or sets nested field path.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.NestedField.Caption">
      <summary>Gets or sets nested field caption.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedField.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedField.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.NestedField" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedField.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.NestedFieldCollection">
      <summary>Represents the collection of <see cref="T:PerpetuumSoft.Reporting.Data.Olap.NestedField" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.Olap.NestedFieldCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedFieldCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.Olap.NestedFieldCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.Olap.NestedFieldCollection.Add(PerpetuumSoft.Reporting.Data.Olap.NestedField)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.RecordItem">
      <exclude>
      </exclude>
      <summary>Provides data corresponding to the source data</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.Olap.SortOrder">
      <summary>Enumerates the sort order.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Data.Olap.SortOrder.Descending">
      <summary>Descending sorting.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Data.Olap.SortOrder.Ascending">
      <summary>Ascending sotring.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.SqlBaseDataSource">
      <summary>Represents data source for the document which gets data from the database.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.FillDataTable(System.Data.DataTable)">
      <summary>Fills DataTable with data in accordance with SQL query and connection string.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.ConnectionString">
      <summary>Gets or sets database connection string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.GetDataNavigator">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSource.GetDataNavigator" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.SelectQuery">
      <summary>Gets or sets SQL query for getting data from the database.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.SqlDataSource">
      <summary>Represents data source for the document which gets data from the MS SQL database.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.SqlDataSource.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.SqlDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.SqlDataSource" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.SqlDataSource.FillDataTable(System.Data.DataTable)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Data.SqlBaseDataSource.FillDataTable(System.Data.DataTable)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Data.XmlDataSource">
      <summary>Represents data source for the document which gets data from the XML document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.XmlDataSource.XPath">
      <summary>Gets or sets the initial path used for getting data in XML document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.XmlDataSource.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.XmlDataSource.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Data.XmlDataSource" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Data.XmlDataSource.DataFile">
      <summary>Gets or sets XML document location.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Data.XmlDataSource.GetDataNavigator">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.IDataSource.GetDataNavigator" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.AlignAction">
      <summary>Align modes.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignAction.None">
      <summary>Do not align.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignAction.Near">
      <summary>Align to top/left.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignAction.Center">
      <summary>Align to center.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignAction.Far">
      <summary>Align to bottom/right.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignAction.Justify">
      <summary>Justify.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.AlignBoundKind">
      <summary>Align modes.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignBoundKind.Page">
      <summary>Whole page.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignBoundKind.Selection">
      <summary>Selection bounds.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Designer.AlignBoundKind.Band">
      <summary>Current band bounds.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.Aligner">
      <summary>Incapsulates align logic.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.Aligner.Align(PerpetuumSoft.Framework.Drawing.VectorRectangle[],PerpetuumSoft.Reporting.Designer.AlignAction,PerpetuumSoft.Reporting.Designer.AlignAction,PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Returns specified rectangles vertically and horizontally aligned according to align actions and align bounds.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.AlignForm">
      <summary>Represents a dialog window for assigning alingment</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.AlignForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.AlignForm.#ctor(PerpetuumSoft.Reporting.Designer.ReportDesigner)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Designer.AlignForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.AlignForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerDataSourcesTree">
      <summary>Contains TreeView with available data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDataSourcesTree.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDataSourcesTree.#ctor">
      <summary>Creates new instance of DesignerDataSourcesTree control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDataSourcesTree.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDataSourcesTree.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree">
      <summary>Contains TreeView with Document objects tree.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree.#ctor">
      <summary>Creates new instance of DesignerDocumentTree control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerDocumentTree.Caption">
      <summary>Get or sets caption text for the control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerErrorList">
      <summary>Contains list of errors in report scripts.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerErrorList.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerErrorList.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool states.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerErrorList.#ctor">
      <summary>Creates a new instance of DesignerErrorList class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerErrorList.Caption">
      <summary>Gets or sets caption list for the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerErrorList.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerForm">
      <summary>Represents assembled report designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
      <summary>Raises the FormClosed event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.#ctor">
      <summary>Creates new instance of DesignerForm.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerForm.ShowErrorList">
      <summary>Gets and sets if ErrorList visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerForm.IgnoreObsoleteWarning">
      <summary>Gets or sets a value that indicates if the warning about the use of obsolete report elements should be ignored.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerForm.ShowToolWindow">
      <summary>Gets and sets if tool windows are visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.SetDesignerCaption">
      <summary>Gets or sets a header for the designer form.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerForm.Designer">
      <summary>Gets internal ReportDesigner instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerForm.PerpetuumSoft#Reporting#Designer#IDesignerTool#SetStatusText(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Designer.IDesignerTool.SetStatusText(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerForm.ToolButtonsDisplayMode">
      <summary>Gets or sets image displaying mode in the elements palette.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs">
      <summary>'Provides data for DesignerMouseUp, DesignerMouseDown events.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl,System.String,System.Windows.Forms.MouseEventArgs)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs.MouseMode">
      <summary>Gets mouse mode name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs.Handled">
      <summary>Gets or sets a value indicating whether the event should be handled.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs.Control">
      <summary>Gets specified ReportControl.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerMouseEventHandler">
      <summary>Represents the method that will handle DesignerMouseUp, DesignerMouseDown events.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerMouseMode">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid">
      <summary>Contains PropertyGrid for ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid.#ctor">
      <summary>Creates new instance of DesignerPropertyGrid control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid.Designer">
      <summary>Gets and sets associated ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerPropertyGrid.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerStatusBar">
      <summary>Contains StatusBar for ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerStatusBar.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerStatusBar.SetStatusText(System.String)">
      <summary>Updates current status text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerStatusBar.#ctor">
      <summary>Creates new instance of DesignerStatusBar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerStatusBar.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerToolArgs">
      <summary>Provides information for UpdateTool methods.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.UpdateScrolls">
      <summary>Gets and sets if scroll bars need to be updated.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.UpdateErrorList">
      <summary>Gets and sets if Error list need to be updated.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.UpdateActions">
      <summary>Gets and sets if actions need to be updated.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.Init">
      <summary>Gets and sets if new design session was initialized.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.UpdateView">
      <summary>Gets and sets if report designer view box need to be updated.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.#ctor">
      <summary>Creates a new instance of DesignerToolArgs class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.SelectionChange">
      <summary>Gets and sets if selection was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolArgs.DocumentChanged">
      <summary>Gets and sets if document was changed.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerToolBar">
      <summary>Contains ToolBar for ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBar.BindControls">
      <summary>Binds control to actions.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBar.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBar.#ctor">
      <summary>Creates new instance of the DesignerToolBar control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerToolBox">
      <summary>Contains ToolBox for ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBox.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBox.#ctor">
      <summary>Creates new instance of DesignerToolBox control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolBox.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DesignerToolControl">
      <summary>Base class for all ReportDesigner tools.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.BindControl(System.String,System.Object)">
      <summary>Binds control to designer's action.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.InternalBindControls">
      <summary>Runs controls binding.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.#ctor">
      <summary>Creates new instance of DesignerToolControl.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolControl.Designer">
      <summary>Gets and sets associated ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.BindControls">
      <summary>Performs actual controls binding.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.InternalUnbindControls">
      <summary>Runs controls unbind operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.UnbindControls">
      <summary>Performs actual unbind operations.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.DesignerToolControl.About">
      <summary>Gets the copyright string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.DesignerToolControl.SetStatusText(System.String)">
      <summary>Updates text in status bar.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.DocumentConverter">
      <exclude>
      </exclude>
      <summary>Provides methods of converting from NineRays to PerpetuumSoft</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ElementAddedEventArgs">
      <summary>Provides data for the ElementAdding event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ElementAddedEventArgs.Control">
      <summary>Gets added control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ElementAddedEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Designer.ElementAddedEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ElementAddedEventHandler">
      <summary>Represents the method that will handle the ElementAdded event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ElementAddingEventArgs">
      <summary>Provides data for the ElementAdded event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ElementAddingEventArgs.Handled">
      <summary>Gets or sets a value indicating whether the event should be handled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ElementAddingEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Designer.ElementAddingEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ElementAddingEventHandler">
      <summary>Represents the method that will handle the ElementAdding event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.IDesignerTool">
      <summary>Common interface for all ReportDesigner tools.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerTool.UpdateTool(PerpetuumSoft.Reporting.Designer.DesignerToolArgs)">
      <summary>Updates Tool state.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerTool.SetStatusText(System.String)">
      <summary>Updates text in StatusBar.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection">
      <summary>Represents the collection of IDesignerTool objects.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Designer.IDesignerTool)">
      <summary>Inserts the specified object to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.#ctor">
      <summary>Creates a new instance of IDesignerToolCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Remove(PerpetuumSoft.Reporting.Designer.IDesignerTool)">
      <summary>Removes the specified IDesignerTool from the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Item(System.Int32)">
      <summary>Gets the object at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Add(PerpetuumSoft.Reporting.Designer.IDesignerTool)">
      <summary>Adds the specified IDesignerTool to the end of the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Contains(PerpetuumSoft.Reporting.Designer.IDesignerTool)">
      <summary>Returns whether the object already exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.IndexOf(PerpetuumSoft.Reporting.Designer.IDesignerTool)">
      <summary>Returns the specified object's index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IDesignerToolCollection.Add(PerpetuumSoft.Reporting.Designer.IDesignerTool[])">
      <summary>Adds the specified array IDesignerTool objects to the end of the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.IReportDesignerService">
      <summary>Provides common interface for access to the report designer environment.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.DataSourceManager">
      <summary>Gets a DataObject collection associated with the current design session.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ReportSource">
      <summary>Gets report source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ReportControl">
      <summary>Gets the ReportControl that is currently edited.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ObjectPropertyChanged(System.Object,System.String,System.Object,System.Object)">
      <summary>Handles property changes.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.AddCommand(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Add command in command stack.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.Document">
      <summary>Gets the document that is currently edited.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ObjectBindingChanged(System.Object,System.String,System.String,System.String)">
      <summary>Handles binding's changes.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.CurrentPage">
      <summary>Gets the Page that is currently edited.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.MouseModeArgs">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ReportClipboard">
      <summary>This type supports the Report Sharp-Shooter infrastructure and is not intended to be used directly from your code.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportClipboard.Controls">
      <summary>Gets a controls collection associated with the ReportClipboard.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportClipboard.#ctor">
      <summary>Initializes a new instance of ReportClipboard.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ReportDesigner">
      <summary>Report Designer control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.System#IServiceProvider#GetService(System.Type)">
      <summary>Implements <see cref="M:System.IServiceProvider.GetService(System.Type)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SendSelectionToBack">
      <summary>Sends selected objects to back.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.CheckScript">
      <summary>Checks script in the current document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.OnElementAdding(PerpetuumSoft.Reporting.Designer.ElementAddingEventArgs)">
      <summary>Raises the ElementAdding event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Reporting#Designer#IReportDesignerService#ReportControl">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ReportControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.Redo">
      <summary>Redo last operation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ShowGotoPageDialog">
      <summary>Shows pages dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.OnDesignerMouseDown(PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs)">
      <summary>Raises the DesignerMouseUp event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.LayoutBands">
      <summary>Performs bands auto-layout.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.ReportDesigner.DesignerMouseUp">
      <summary>Occurs when the mouse pointer is over the designer and a mouse button is released.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.AddPage">
      <summary>Adds new page to current document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.Actions">
      <summary>Gets collection of all actions of the ReportDesigner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.GetSelectionPropertyBindingNames">
      <summary>Gets a list of property names the Binding cab be assigned to for all selected document elements</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.GetSelectionMergablePropertyValue(System.Object,System.String,System.Type)">
      <summary>Gets merged properties' value of the selected document element</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.AutoLayoutBands">
      <summary>Gets and sets if auto-layout mode is enabled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.DeletePage">
      <summary>Removes current page from document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.BringSelectionToFront">
      <summary>Brings selected objects to front.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.DeleteSelectedObjects">
      <summary>Deletes selection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.OnDesignerMouseUp(PerpetuumSoft.Reporting.Designer.DesignerMouseEventArgs)">
      <summary>Raises the DesignerMouseDown event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.NewDocument">
      <summary>Creates new document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.InsertControl(System.Type)">
      <summary>Allows to insert control given type.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.ZoomMenu">
      <summary>Gets the contextual menu for assigning zoom <see cref="T:System.Windows.Forms.ContextMenuStrip" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ResetContextMenu">
      <summary>Resets comtextual menu.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.Selection">
      <summary>Gets selection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.GetSelectionMergablePropertyBinding(System.String)">
      <summary>Gets a list of property names the Binding cab be assigned to.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.GetSelectionMergablePropertyValue(System.Object,System.String,System.Type,System.String,System.Type)">
      <summary>Gets merged properties' value of the selected document element</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Reporting#Designer#IReportDesignerService#ObjectPropertyChanged(System.Object,System.String,System.Object,System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ObjectPropertyChanged(System.Object,System.String,System.Object,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ClearCommandStack">
      <summary>Clears command stack.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.CheckScript(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Checks scripts in the given document and returns value indicating that scripts have errors.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.UpdateTools">
      <summary>Updates all attached designer tools.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ResetSelectionProperty(System.String,System.Type)">
      <summary>Resets property value to default for all selected document elements</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SaveDocumentAs">
      <summary>Shows "Save As..." dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Reporting#Designer#IReportDesignerService#ObjectBindingChanged(System.Object,System.String,System.String,System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ObjectBindingChanged(System.Object,System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.CanResetSelectionProperty(System.String,System.Type)">
      <summary>Indicates if it is possible to reset property value to default for all selected document elements</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.PageNumber">
      <summary>Gets and sets edited page number.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.AttachDocument(PerpetuumSoft.Reporting.Components.ReportSlot,PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Assigns document and report slot. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MetricUnitMenu">
      <summary>Gets the contextual menu for assigning measure units <see cref="T:System.Windows.Forms.ContextMenuStrip" /></summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.ReportDesigner.ElementAdded">
      <summary>Occurs when a new element is added to a document being edited.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SetSelectionPropertyValue(System.String,System.Type,PerpetuumSoft.Reporting.Designer.ReportDesigner.GetNewValueMethod,System.Object)">
      <summary>Sets new property value of all selected document elements</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.About">
      <summary>Gets the copyright string.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MouseModeContextMenu">
      <summary>Gets the contextual menu for assigning mouse display mode <see cref="T:System.Windows.Forms.ContextMenuStrip" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.Zoom">
      <summary>Gets and sets zoom for the report designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SaveDocument">
      <summary>Saves document to file.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.Document">
      <summary>Gets and sets edited document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.MoveSelectionForward">
      <summary>Moves selected objects forward.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.StringRegKey">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.AttachDocument(System.String,PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Assigns document and default path.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.Tools">
      <summary>Gets collection of currently registered tools.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.ReportDesigner.ElementAdding">
      <summary>Occurs when a new element is added to a document being edited.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.DataSourceResolver">
      <exclude>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Components.IResolveDataSource" /></exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.IsModified">
      <summary>Gets whether report was modified by user.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Framework#Drawing#Design#IMeasureUnitService#MeasureUnit">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Drawing.Design.IMeasureUnitService.MeasureUnit" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.ReportDesigner.RequestCodeSnippets">
      <summary>Occures to get the code snippets by the specified script language.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.ReportDesigner.DesignerMouseDown">
      <summary>Occurs when the mouse pointer is over the designer and a mouse button is pressed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.DataSourceManager">
      <summary>Gets or sets data source manager assigned withy this designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.Undo">
      <summary>Undo last operation.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.CompilerResults">
      <summary>Gets results of the report scripts compilation <see cref="T:System.CodeDom.Compiler.CompilerResults" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.SubReportsResolver">
      <summary>Gets or sets SubReportResolver.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ShowDataSourcesEditor">
      <summary>Invokes the document data sources editor dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.MoveSelectionBack">
      <summary>Moves selected objects to back.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.#ctor">
      <summary>Creates new instance of the ReportDesigner control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.PageTabContextMenu">
      <summary>Gets the contextual menu for assigning page tabs <see cref="T:System.Windows.Forms.ContextMenuStrip" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SetSelectionPropertyBinding(System.String,System.String)">
      <summary>Sets a new property value for all selected document elements</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.ShowCustomZoomDialog">
      <summary>Shows zoom dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.CurrentPage">
      <summary>Get currently edited page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Reporting#Designer#IReportDesignerService#ReportSource">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Designer.IReportDesignerService.ReportSource" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.ShowRulers">
      <summary>Gets or sets if rulers should be displayed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SetContextMenu(System.Windows.Forms.ContextMenuStrip)">
      <summary>Sets a contextual menu in the designer</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MouseMode">
      <summary>Gets or sets mouse pointer in the designer <see cref="T:PerpetuumSoft.Reporting.Designer.DesignerMouseMode" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.SetSelectionPropertyValue(System.String,System.Type,System.Object)">
      <summary>Sets a new Binding property for all selected documents elements</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.OnElementAdded(PerpetuumSoft.Reporting.Designer.ElementAddedEventArgs)">
      <summary>Raises the ElementAdded event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.ReportDesigner.PerpetuumSoft#Reporting#Designer#IReportDesignerService#AddCommand(PerpetuumSoft.Reporting.CommandModel.Command)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Designer.IReportDesignerService.AddCommand(PerpetuumSoft.Reporting.CommandModel.Command)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ReportDesigner.GetNewValueMethod">
      <summary>Defines method of getting a new value depending on the previous one</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.ReportDesigner.MergablePropertyValue">
      <summary>Represents data about the merged properties value of multiple objects</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MergablePropertyValue.IsSingle">
      <summary>Indicates that the current value corresponds to the single object</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MergablePropertyValue.Value">
      <summary>Gets object property value</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.ReportDesigner.MergablePropertyValue.IsEmpty">
      <summary>Gets value indicating if the property is empty <see cref="T:System.Boolean" /></summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.RequestCodeSnippetsEventArgs">
      <summary>Represents data about the code snippets for the specified script language.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.RequestCodeSnippetsEventArgs.Language">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.ScriptLanguage" /> that sets scripts programming language.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.RequestCodeSnippetsEventArgs.Stream">
      <summary>Gets or sets the stream that contains the code snipets description.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.RequestCodeSnippetsEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.ScriptLanguage)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Designer.RequestCodeSnippetsEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Designer.SelectionGroup">
      <summary>Represents collection of selected objects in ReportDesigner.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.SelectedObjects">
      <summary>Gets selected objects collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.RaiseSelectedChanged">
      <summary>Raises Chanded event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Move(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Moves all controls in selection to the given position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.Selection">
      <summary>Gets collection contained all selected controls.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.MainSelection">
      <summary>Gets selected objects that belongs to the same container as primary selection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Add(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Adds control to selection.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Designer.SelectionGroup.Changed">
      <summary>Occurs when selection changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Clear">
      <summary>Clears selection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.IsEmpty">
      <summary>Gets if selection is empty.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Select(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Selects specified control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.Single">
      <summary>Gets selected object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Remove(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Removes control from selection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.SelectedObject">
      <summary>Gets selected object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.Main">
      <summary>Gets primary selected object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Select(PerpetuumSoft.Reporting.DOM.ReportControl[])">
      <summary>Selects specified controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.#ctor">
      <summary>Creates a new instance of SelectionGroup class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.AddRange(PerpetuumSoft.Reporting.DOM.ReportControl[])">
      <summary>Add array of controls to selection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Designer.SelectionGroup.Select(PerpetuumSoft.Reporting.DOM.ReportControl,System.Boolean)">
      <summary>Selects specified control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.SelectionBounds">
      <summary>Gets bounds on selection reletive to the page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Designer.SelectionGroup.IsSingle">
      <summary>Gets if selection contains single object.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AdvancedText">
      <summary>Represents a boxed text control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.CanBreak">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.DOM.IBreakable.CanBreak" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnTextFillChanged">
      <summary>Executes if text fill was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.Prepare">
      <summary>Overridded. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Prepare" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.PerpetuumSoft#Reporting#DOM#IBreakable#Rendered">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.DOM.IBreakable.Rendered" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.AdvancedText.CalculateValues">
      <summary>Occurs when a Values recalculated.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnTextAlignmentChanged">
      <summary>Executes if text alignment was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.PerpetuumSoft#Reporting#DOM#IBreakable#RenderSlice(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IBreakable.RenderSlice(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.CalculateTextHeight(System.Drawing.Graphics)">
      <summary>Returns text height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.FindText(System.String,PerpetuumSoft.Reporting.DOM.FindTextOptions)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.FindText(System.String,PerpetuumSoft.Reporting.DOM.FindTextOptions)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.PaintText(System.Drawing.Graphics,System.Drawing.Brush,PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Paints control text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.FieldMatchEvaluator(System.Text.RegularExpressions.Match)">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.PerpetuumSoft#Reporting#DOM#IBreakable#SliceCount">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.DOM.IBreakable.SliceCount" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnSizeChanged">
      <summary>Is called after the Size property is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.Values">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnFontChanged">
      <summary>Executes if font was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnStyleNameChanged">
      <summary>Executes if style name was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.GetFormattedText">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.#ctor">
      <summary>Creates a new instance of AdvancedText class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.Text">
      <summary>Gets or sets HTML formatted text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.RaiseCalculateValues">
      <summary>Invokes OnCalculateValues method.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.OnCalculateValues(System.EventArgs)">
      <summary>Raises the CalculateValues event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.RenderLocation(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Calculates location of the control in the rendered report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.PerpetuumSoft#Reporting#DOM#IBreakable#GetSliceHeight(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IBreakable.GetSliceHeight(System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AdvancedText.Rtf">
      <summary>Sets RTF formatted text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AdvancedText.ExpressionMatchEvaluator(System.Text.RegularExpressions.Match)">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AdvancedText.ExpValue">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Aggregate">
      <summary>Summary description for Aggregate.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.Expression">
      <summary>Gets and sets aggregate expression.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Aggregate.ClearRecords">
      <summary>Clear all records in aggregate.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.Running">
      <summary>Returns a value indicating whether the agrregate should be calculated on the second pass.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Aggregate.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Aggregate.#ctor">
      <summary>Creates a new instance of Aggregate class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.Groups">
      <summary>Gets a aggrgate groups collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.Value">
      <summary>Gets and sets aggregated value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.Name">
      <summary>Gets and sets the name of the aggregate.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Aggregate.ToString">
      <summary>Returns aggregate name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Aggregate.DataType">
      <summary>Gets and sets type of the aggregate.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AggregateCollection">
      <summary>Represents the collection of Aggregate objects.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregateCollection.Item(System.String)">
      <summary>Gets the object with the specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.Add(PerpetuumSoft.Reporting.DOM.Aggregate)">
      <summary>Adds the specified Aggregate to the end of the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.Remove(PerpetuumSoft.Reporting.DOM.Aggregate)">
      <summary>Removes the specified Aggregate from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.IndexOf(PerpetuumSoft.Reporting.DOM.Aggregate)">
      <summary>Returns the specified object's index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.Contains(PerpetuumSoft.Reporting.DOM.Aggregate)">
      <summary>Returns whether the object already exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.Aggregate)">
      <summary>Inserts the specified object to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.#ctor">
      <summary>Creates a new instance of AggregateCollection class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregateCollection.Item(System.Int32)">
      <summary>Gets the object at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateCollection.AddRange(PerpetuumSoft.Reporting.DOM.Aggregate[])">
      <summary>Adds the specified array Aggregate objects to the end of the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AggregateDataType">
      <summary>Enumerates aggregeted data type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.AggregateDataType.Integer">
      <summary>Aggregate as integer.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.AggregateDataType.Decimal">
      <summary>Aggregate as decimal.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.AggregateDataType.Double">
      <summary>Aggregate as double.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AggregateGroup">
      <summary>Summary description for AggregateGroup.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregateGroup.Expression">
      <summary>Gets and sets group expression.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroup.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregateGroup.Value">
      <summary>Gets and sets group value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroup.ToString">
      <exclude>
      </exclude>
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroup.#ctor">
      <summary>Creates a new instance of AggregateGroup class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection">
      <summary>Represents the collection of AggregateGroup objects.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.Add(PerpetuumSoft.Reporting.DOM.AggregateGroup)">
      <summary>Adds the specified AggregateGroup to the end of the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.Item(System.Int32)">
      <summary>Gets the object at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.Contains(PerpetuumSoft.Reporting.DOM.AggregateGroup)">
      <summary>Returns whether the object already exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.#ctor">
      <summary>Creates a new instance of AggregateGroupCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.Remove(PerpetuumSoft.Reporting.DOM.AggregateGroup)">
      <summary>Removes the specified AggregateGroup from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.IndexOf(PerpetuumSoft.Reporting.DOM.AggregateGroup)">
      <summary>Returns the specified object's index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.AddRange(PerpetuumSoft.Reporting.DOM.AggregateGroup[])">
      <summary>Adds the specified array AggregateGroup objects to the end of the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregateGroupCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.AggregateGroup)">
      <summary>Inserts the specified object to the collection at the specified index.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand">
      <summary>Base class for regular bands supporting aggregation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Aggregates">
      <summary>Gets a collection of the aggregates associated with the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Min(System.Int32,System.String)">
      <summary>Returns minimum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Sum(System.Int32,System.String,System.Object[])">
      <summary>Returns sum.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.CalculateAggregates">
      <summary>Occurs when aggregates are recalculated.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Min(System.String,System.Object[])">
      <summary>Returns minimum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Sum(System.String,System.Object[])">
      <summary>Returns sum.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Min(System.Int32,System.String,System.Object[])">
      <summary>Returns minimum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Max(System.String)">
      <summary>Returns maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Count(System.String)">
      <summary>Returns records count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Avg(System.String,System.Object[])">
      <summary>Returns average value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Min(System.String)">
      <summary>Returns minimum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Sum(System.String)">
      <summary>Returns sum.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Count(System.Int32,System.String)">
      <summary>Returns records count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Count(System.String,System.Object[])">
      <summary>Returns records count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Max(System.Int32,System.String,System.Object[])">
      <summary>Returns maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.OnCalculateAggregates(System.EventArgs)">
      <summary>Raises the CalculateAggregates event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Count(System.Int32,System.String,System.Object[])">
      <summary>Returns records count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Avg(System.Int32,System.String)">
      <summary>Returns average value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Sum(System.Int32,System.String)">
      <summary>Returns sum.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Avg(System.String)">
      <summary>Returns average value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Max(System.Int32,System.String)">
      <summary>Returns maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.RaiseCalculateAggregates">
      <summary>Invokes the OnCalculateAggregates method.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.ProcessAggregates">
      <summary>Forces aggregates calculation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Max(System.String,System.Object[])">
      <summary>Returns maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.AggregatesRegularBand.Avg(System.Int32,System.String,System.Object[])">
      <summary>Returns average value.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.BandBase">
      <summary>The base class for all band classes in the report generator.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs drawing of the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.GrowControls">
      <summary>Resizes controls within the current band that have the GrowToBottom property set to true.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.ControlAt(System.Drawing.PointF)">
      <summary>Returns a ReportControl object that is found in the location specified by the given PointF.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.#ctor">
      <summary>Initializes a new instance of the BandBase class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BandBase.ShowCaption">
      <summary>Gets or sets whether the title line should be drawn for the current band object in design mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BandBase.CanGrow">
      <summary>Gets and sets whether the current band can grow in size during rendering to match a bigger size of its rendered content regardless of the band's size in the report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.GetSectionCaption">
      <summary>Returns the title string of the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.CalculateRenderHeight">
      <summary>Calculates the height of the current band's content in the final report.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BandBase.CanShrink">
      <summary>Gets and sets whether the current band can shrink in size during rendering to match a smaller size of its rendered content regardless of the band's size in the report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandBase.ReCalculateBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Recalculates the bounds of the current band object using all environment constraints and specified current state.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.BandContainer">
      <summary>Represents the BandContainer element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandContainer.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandContainer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.BandContainer" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BandContainer.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.BarCode">
      <summary>Defines a barcode object in report generator.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.CalcCheckSumm">
      <summary>Gets or sets whether a check sum should be calculated for this BarCode object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.Code">
      <summary>Gets and sets the code for the BarCode control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ResetBarColor">
      <summary>Resets the BarColor property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.ShowLabel">
      <summary>Gets or sets whether the label should be drawn for this BarCode object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.InitNew">
      <summary>Sets the predefined values for the properties of a Shape object created with visual tools such as Report Designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ShouldSerializeBarColor">
      <summary>Returns whether the BarColor property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.BarPoint">
      <summary>Detepmines the bar point for japanese postal bar code.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.Pdf417Settings">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Pdf417Settings" /> class that represent the PDF417 barcode settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ResetLabelPosition">
      <summary>Resets the BarCodeLabelPosition property to its default value (bottom-center).</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ResetBackColor">
      <summary>Resets the BackColor property to its default value (transparent).</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.BarRatio">
      <summary>Gets and sets the bar ratio.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.#ctor">
      <summary>Creates a new instance of BarCode class.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.BarCode.DefaultFont">
      <summary>Default font for bar code label.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ResetFont">
      <summary>Resets the Font property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ShouldSerializeTextColor">
      <summary>Returns whether the TextColor property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.Font">
      <summary>Gets and sets the font.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.CodeType">
      <summary>Defines the type of barcode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ResetTextColor">
      <summary>Resets the BarColor property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.LabelPosition">
      <summary>Gets and sets the label position.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ShouldSerializeLabelPosition">
      <summary>Returns whether the BarCodeLabelPosition property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ShouldSerializeBackColor">
      <summary>Returns whether the BackColor property should be persisted.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.BackColor">
      <summary>Gets and sets color of spaces between the bars (the backround color).</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.TextColor">
      <summary>Gets and sets the color of the text label.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.ShowCheckDigit">
      <summary>Gets or sets whether the check sum digits should be shown in the barcode label.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Paints bar code content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.BarCode.BarColor">
      <summary>Defines the color of bars (the foreground color).</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.ShouldSerializeFont">
      <summary>Returns whether the Font property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.BarCode.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Box">
      <summary>Defines a boxed control with borders and fills.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ResetFill">
      <summary>Resets the Fill property to its default value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ShouldSerializeFill">
      <summary>Returns whether the Fill property should be persisted.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ResetMargins">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.PaintBackground(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Paints the background of the box using the current background fill.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.GetRotatedContentRectangle(System.Drawing.RectangleF)">
      <summary>Returns a given rectangle, rotated on box angle. </summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Box.ContentRectangle">
      <summary>Gets the internal rectangle in the box based on the box's Margins settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ShouldSerializeBorder">
      <summary>Returns whether the Border property should be persisted.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.PaintBorder(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Paints a border around the box.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Box.Border">
      <summary>Gets and sets the control's border.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Box.Fill">
      <summary>Gets and sets the control's background fill.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Paint box content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Box.Margins">
      <summary>Gets and sets the control's margins.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ResetBorder">
      <summary>Resets the Border property to its default value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Box.Angle">
      <summary>Gets or sets the angle of box rotation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.OnFillChanged">
      <summary>Is called after the Fill property is changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.#ctor">
      <summary>Creates a new instance of Box class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.ShouldSerializeMargins">
      <summary>Returns whether the Margins property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Box.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Paints the box.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs">
      <summary>Represents the data for the CalulateParameter event contained in the sub report element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs.Add(System.String,System.Object)">
      <summary>Adds new parameter with specified value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs.ParameterValues">
      <summary>Returns <see cref="T:System.Collections.Hashtable" />. Key of the hashtable is a parameter name, value is a parameter value.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventHandler">
      <summary>Represents the method that will handle the CalculateParameters event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ChartControl">
      <summary>Provides report element for creating a chart.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ChartControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ChartControl.Chart">
      <summary>Gets or sets the <see cref="T:PerpetuumSoft.Charts.Chart" /> object representing the chart.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ChartControl.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ChartControl.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Draws element's content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ChartControl.DataSource">
      <summary>Gets or sets name of a data source for building the chart.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ChartControl.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ChartControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.ChartControl" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ContainerControl">
      <summary>Base class for all container controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs drawing of the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.#ctor">
      <summary>Initializes a new instance of the ContainerControl class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.ControlAt(System.Drawing.PointF)">
      <summary>Returns a ReportControl object that is found in the location specified by the given PointF.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.ControlByName(System.String)">
      <summary>Finds a nested ReportControl object with the specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.FindParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Finds the ReportControl's parent.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ContainerControl.Controls">
      <summary>Gets the collection of the nested controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the specified ReportControl can be placed to the controls collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Content">
      <summary>Used for Master Report. Outputs bands from a report related to this master.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Content.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Content" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Content.GetTemplate">
      <summary>Returns template.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.CrossBand">
      <summary>Represents a vertical band for 2-dimensional reports.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.RaiseGetData">
      <summary>Invokes OnGetData method.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.#ctor">
      <summary>Creates a new instance of CrossBand class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.GetDataScript">
      <summary>Gets and sets the code of the script that will be invoked when the band obtains data from the data source.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.UpdatePageArea">
      <summary>Calculates the remaining free page area after the band is rendered.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.CrossBand.GetData">
      <summary>Occurs when a data item is obtained from the data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.Item(System.String)">
      <summary>Gets a value of the specified field from the current record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.ControlAt(System.Drawing.PointF)">
      <summary>Returns a ReportControl object that is found on the in the location specified by the given PointF.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.DataItem">
      <summary>Gets the current record data.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.ReCalculateBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Recalculates band bounds.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.GetSectionCaption">
      <summary>Returns the title string for the band.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.InstanceCount">
      <summary>Gets and sets the total records count for unbound reports.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.LineNumber">
      <summary>Gets the number of the currently rendered line.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.CheckConditions">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.Section.CheckConditions" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.DataSource">
      <summary>Gets and sets the DataSource name for the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.OnGetData(System.EventArgs)">
      <summary>Raises the GetData event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs drawing of the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.CrossBand.Count">
      <summary>Gets the number of the current record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.CrossBand.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns if the band can be placed into the specified container.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBand">
      <summary>Creates instances of the nested controls for each record in the data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBand.Sort">
      <summary>Gets sorting settings collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.OnProcessRecord(PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs)">
      <summary>Raises the ProcessRecord event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.DataBand.ProcessRecord">
      <summary>Data change event during source data processing</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetSectionCaption">
      <summary>Returns the band's title string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.CreateNavigator">
      <summary>Creates grouped data navigator</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.#ctor">
      <summary>Creates a new instance of DataBand class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBand.Totals">
      <summary>Gets totals calculation settings collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetTotals">
      <summary>Gets total</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBand.InstanceCount">
      <summary>Gets and sets the total records count for unbound reports.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBand.DataSource">
      <summary>Gets and sets the name of the data source assigned to the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetGroup">
      <summary>Gets group</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBand.FilterExpression">
      <summary>Gets or sets the expression for filtering data from the data source<see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetPageTotal(System.String)">
      <summary>Gets totals by collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBand.GetPageTotal(System.String,System.Int32)">
      <summary>Gets total by page.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBandBase">
      <summary>Represents the base class for all bands</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetSectionCaptionColor">
      <summary>Gets section caption color</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetRunningTotal(System.String)">
      <summary>Gets the running total by its name</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.IsLastLine">
      <summary>Gets if the last line is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.StopPropagate">
      <summary>Resets value by the PropagateMode</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.LineNumber">
      <summary>Gets the number of the currently rendered line.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.Item(System.String)">
      <summary>Gets a value of the specified field from the current record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetLevel">
      <summary>Gets the level of the current band.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.ShowBottom">
      <summary>Gets and sets whether the bottom bar of the band should be displayed in the design mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.ColumnsGap">
      <summary>Gets or sets gap between columns</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetTotals">
      <summary>Gets total value</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.RecordNumber">
      <summary>Gets the number of the current record.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.OnGetData(System.EventArgs)">
      <summary>Raises the GetData event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs drawing of the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.GetDataScript">
      <summary>Gets and sets the code of the script that will be invoked when the band obtains data from the data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.ColumnsCount">
      <summary>Gets or sets columns count</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.StartPropagate">
      <summary>Switches the band to propagate mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.IsFirstLine">
      <summary>Gets if the first line is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetGroup">
      <summary>Gets Group</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.GetTotal(System.String)">
      <summary>Gets field total</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.RaiseGetData">
      <summary>Invokes OnGetData method.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandBase.DataItem">
      <summary>Gets the current record data.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandBase.CreateNavigator">
      <summary>Creates grouped data navigator</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.DataBandBase.GetData">
      <summary>Occurs when a data item is obtained from the data source.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBandSort">
      <summary>The type representing data sorting settings</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandSort.Calculate(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.Groupping.ISortDescription.Calculate(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandSort.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandSort" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandSort.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandSort.Order">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Data.Groupping.ISortDescription.Order" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandSort.Expression">
      <summary>Gets and sets sort expression.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandSort.Value">
      <summary>Gets or sets sorting expression value</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandSort.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBandSortCollection">
      <summary>Represents the data sorting settings collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandSortCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandSortCollection" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBandTotal">
      <summary>Determines totals calculation settings collection</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandTotal.Value">
      <summary>Gets or sets values totals are calculated by</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandTotal.PerpetuumSoft#Reporting#Data#Groupping#IAggregateDescription#Function">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Data.Groupping.IAggregateDescription.Function" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandTotal.Name">
      <summary>Gets or sets Name</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandTotal.Calculate(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.Groupping.IAggregateDescription.Calculate(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandTotal.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandTotal" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandTotal.AggregateFunction">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Data.Olap.AggregateFunctionFactory" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandTotal.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandTotal.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DataBandTotal.Expression">
      <summary>Gets or sets aggregate expression.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DataBandTotalCollection">
      <summary>Determines totals calculation settings collection</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DataBandTotalCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.DataFieldTreeViewForm">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.DataSourceEditor">
      <summary>Represents editor for data source.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.DataSourceEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.DataSourceEditor.#ctor">
      <summary>Creates a new instance of DataSourceEditor class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.DataSourceEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.DataSourceTreeType">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.DataSourceTreeView">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.DesignerCollectionEditor">
      <exclude>
      </exclude>
      <summary>Collection designer</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm">
      <summary>Text editing dialog form</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.FormattedText">
      <summary>Gets or sets formated text</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.Title">
      <summary>Gets and sets text title.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
      <summary>Raises the FormClosed event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.#ctor(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.FormattedTextEditorForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.ParameterTypeConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm">
      <summary>RichText editing dialog form</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.RtfText">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.SimpleText">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.RichTextEditorForm.OnClosed(System.EventArgs)">
      <summary>Raises the Closed event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.ScriptEditor">
      <summary>Represents editor for script.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.ScriptEditor.#ctor">
      <summary>Creates a new instance of ScriptEditor class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.ScriptEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.ScriptEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.TextEditor">
      <summary>Represents editor for text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Overridded. See <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditor.#ctor">
      <summary>Creates a new instance of TextEditor class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm">
      <summary>Text editing dialog form</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm.ResultText">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Design.TextEditorForm" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Detail">
      <summary>Defines a detail band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Detail.#ctor">
      <summary>Creates a new instance of Detail class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Detail.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.DetailBase">
      <summary>Base class for all detail bands.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.Render">
      <summary>Renders the control to final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DetailBase.MinSpaceAfter">
      <summary>Gets and sets minimum space beetween bands bottom and page bottom margins.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.DetailBase.CanBreak">
      <summary>Indicates whether the breakable elements will break.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.GetSectionCaption">
      <summary>Returns the title string for the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.UpdatePageArea">
      <summary>Calculates free page area after the band is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.DetailBase.#ctor">
      <summary>Creates a new instance of DetailBase class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Document">
      <summary>Represents both report templates and final reports.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.SnapToGrid">
      <summary>Gets and sets whether objects should be snapped to grid in the design mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.RenderInstance">
      <summary>Renders the final document from the report template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Description">
      <summary>Gets and sets document description.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.OnGenerate(System.EventArgs)">
      <summary>Raises Generate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.IsTemplate">
      <summary>Gets and sets whether the document is report template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.ShowObjectBounds">
      <summary>Gets and sets a value indicating whether the object bounds should be displayed in the design mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Imports">
      <summary>Gets and sets collection of the used namespaces. Allows to use any namespaces available in the current application.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Pages">
      <summary>Gets the collection of pages in the document.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.Document.Generate">
      <summary>Occurs before the document is rendered.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.GraphicsSettings">
      <summary>Gets or sets graphics settings to display controls in this document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.ShowGrid">
      <summary>Gets and sets whether the grid should be displayed in the design mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.ImportsString">
      <summary>Gets and sets comma-separated list of the used namespaces. Allows to use any namespaces available in the current application.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.CustomLanguageProvider">
      <summary>Gets and sets full name of the custom script language provider. Allows to use any .NET language as a script language for the Report Sharp-Shooter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Title">
      <summary>Gets and sets document title.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.GridStep">
      <summary>Gets and sets the step of the grid.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.MasterReport">
      <summary>Gets or sets master report name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.DoublePass">
      <summary>Gets and sets whether second render pass should be done.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.StyleSheet">
      <summary>Gets and sets StyleSheet for the document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.MetricUnit">
      <summary>Gets and sets the measure unit for the document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.#ctor">
      <summary>Initializes a new instance of the Document class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.CommonScript">
      <summary>Gets and sets code of the main script sections. Allows you to declare global script variables as well as functions and procedures.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Parameters">
      <summary>Gets document parameters collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.ScriptLanguage">
      <summary>Gets and sets script language for the report template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.Engine">
      <summary>Gets and sets RenderEngine.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.GenerateScript">
      <summary>Gets and sets code of the script that will be invoked before document is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.Assign(System.Object)">
      <summary>Assigns to all properties of this Document the corresponding values of the specified source document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.ControlByName(System.String)">
      <summary>Finds a nested ReportControl object with the specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Populates a SerializationInfo with the data needed to serialize the document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Document.DataSources">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Data.DocumentDataSourceCollection" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.ShouldSerializeGraphicsSettings">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.ResetGraphicsSettings">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Document.RaiseGenerate">
      <summary>Invokes OnGenerate method.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.FindDirection">
      <summary>Specifies search direction for FindText operations.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.FindDirection.Up">
      <summary>Backward search.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.FindDirection.Down">
      <summary>Forward search.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.FindScope">
      <summary>Specifies the scope for FindText operations.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.FindScope.FromCurrent">
      <summary>Start search from the current position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.FindScope.FromBegin">
      <summary>Start search form the document beginning.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.FindScope.FromEnd">
      <summary>Enumerates text location types.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.FindTextArgument">
      <summary>Defines arguments for FindText operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.FindTextArgument.#ctor">
      <summary>Creates a new instance of FindTextArgument class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.FindTextArgument.FindScope">
      <summary>Gets and sets search scope.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.FindTextArgument.FindText">
      <summary>Gets and sets the text string for search.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.FindTextArgument.FindDirection">
      <summary>Gets and sets search direction.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.FindTextArgument.Options">
      <summary>Gets and sets the options object.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.FindTextOptions">
      <summary>Specifies the options for FindText operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.FindTextOptions.#ctor">
      <summary>Creates a new instance of FindTextOptions class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.FindTextOptions.MatchCase">
      <summary>Gets or sets whether match case.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Footer">
      <summary>Defines a footer band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Footer.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the band can be placed into the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Footer.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Footer.#ctor">
      <summary>Creates a new instance of Footer class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Footer.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.GraphicsSettings">
      <summary>Represents graphics settings.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GraphicsSettings.SmoothingMode">
      <summary>Gets or sets the rendering quality.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GraphicsSettings.InterpolationMode">
      <summary>Gets or sets the interpolation mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GraphicsSettings.#ctor(PerpetuumSoft.Reporting.DOM.GraphicsSettings)">
      <summary>Creates a new instance of GraphicsSettings class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GraphicsSettings.#ctor">
      <summary>Creates a new instance of GraphicsSettings class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GraphicsSettings.TextRenderingHint">
      <summary>Gets or sets the rendering mode for text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GraphicsSettings.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GraphicsSettings.CompositingQuality">
      <summary>Gets or sets the rendering quality of composited images.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.GroupBand">
      <summary>Base class for group bands.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.PerpetuumSoft#Reporting#Data#Groupping#IGroupDescription#CalculateGroup(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.Groupping.IGroupDescription.CalculateGroup(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBand.Order">
      <summary>Implements <see cref="P:PerpetuumSoft.Reporting.Data.Groupping.IGroupDescription.Order" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.GetMainBand(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Gets root DataBand the element is located in</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.#ctor">
      <summary>Creates a new instance of GroupBand class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.PerpetuumSoft#Reporting#Data#Groupping#IGroupDescription#CalculateSort(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.Data.Groupping.IGroupDescription.CalculateSort(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBand.GroupExpression">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.GetTotals">
      <summary>Gets total value</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.GetSectionCaption">
      <summary>Gets section caption</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBand.Sort">
      <summary>Gets or sets sorting settings</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the band can be placed into the specified container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBand.SortExpression">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBand.Group">
      <summary>Gets and sets the current group.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.GetGroup">
      <summary>Gets group</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBand.CreateNavigator">
      <summary>Creates grouped data navigator</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.GroupBandBase">
      <summary>Represents base class for all group bands</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBandBase.GetSectionCaptionColor">
      <summary>Gets section caption color</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBandBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.GroupBandBase" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupBandBase.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupBandBase.Group">
      <summary>Gets or sets the group</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.GroupFooter">
      <summary>Defines a group footer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupFooter.CheckConditions">
      <summary>Checks the band's condition.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupFooter.#ctor">
      <summary>Creates a new instance of GroupFooter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupFooter.RenderControls">
      <summary>Renders control for output.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupFooter.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupFooter.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.GroupHeader">
      <summary>Defines a group header.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupHeader.RepeatEveryColumn">
      <summary>Gets and sets whether the band content should be repeated at the beginning of every column.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupHeader.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupHeader.#ctor">
      <summary>Creates a new instance of GroupHeader class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupHeader.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupHeader.CheckConditions">
      <summary>Checks the band's condition.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.GroupHeader.RenderControls">
      <summary>Renders control for output.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.GroupHeader.RepeatEveryPage">
      <summary>Gets and sets whether the band content should be repeated at the top of every page.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Header">
      <summary>Represents header band.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Header.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Header.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Header.#ctor">
      <summary>Creates a new instance of Header class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Header.RepeatEveryColumn">
      <summary>Gets and sets whether the band content should be repeated at the beginning of every column.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Header.RepeatEveryPage">
      <summary>Gets and sets whether the band content should be repeated at the top of every page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Header.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the band can be placed into the specified container.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.IBreakable">
      <exclude>
      </exclude>
      <summary>Provides methods for breaking report element into parts when proceeding to the next page.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.IContainerControl">
      <summary>Defines common interface for all container controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the specified control can be placed into the container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.IContainerControl.Controls">
      <summary>Gets the collection of nested controls.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.IDataBand">
      <summary>Defines common interface for all data-aware bands.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.IDataBand.DataItem">
      <summary>Gets the current record.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.IDataBand.Source">
      <summary>Gets the data source object.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.IRegularBand">
      <summary>Defines common interface for all standard bands.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.IRegularBand.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.IRegularBand.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs">
      <summary>Provides data for the Pivot table calculate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs.FieldValues">
      <summary>Gets a set of all field values.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs.AddFieldValue(System.Object,System.Object)">
      <summary>Adds a new field value.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventHandler">
      <summary>Represents the method that calculates values of the pivot table fields.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs">
      <summary>Provides data for the pivot table CellCreating event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.XItem">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo" /> that contains data corresponding to the X dimension.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.Text">
      <summary>Gets or sets current cell text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.Value">
      <summary>Gets a current cell value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.YItem">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo" /> that contains data corresponding to the X dimension.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.CellType,System.String,System.String,PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo,PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo,PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.Type">
      <summary>Gets current cell type.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.Fact">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo" /> that contains data corresponding to the fact cell.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.Style">
      <summary>Gets or sets current cell style.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.CellType">
      <summary>Represents pivot table cell type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.CellType.YDimension">
      <summary>Ydimension cell type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.CellType.Fact">
      <summary>Fact cell type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.CellType.XDimension">
      <summary>X dimension cell type.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo">
      <summary>Represents information about pivot table item.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo.Field">
      <summary>Gets a current item field.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo.IsTotal">
      <summary>Gets a value indicating whether the current item has Total value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo.Value">
      <summary>Gets a current item value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo.#ctor(PerpetuumSoft.Reporting.Data.Olap.Field,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs.ItemInfo" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventHandler">
      <summary>Represents the method that is called before cell creating.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventArgs">
      <summary>Represents data for the PivotFilter event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventArgs.PassBy">
      <summary>Gets the value indicating wether the data row is filtered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventArgs.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventArgs" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventHandler">
      <summary>Represents the method that calculates a condition for pivot table filtering.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTable">
      <summary>Provides report element for building a pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.Layout">
      <summary>Gets or sets pivot table layout settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <exclude>
      </exclude>
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.Filter">
      <exclude>
      </exclude>
      <summary>Is raised when it is necessary to filter data</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.RowHeight">
      <summary>Gets or sets default row height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.OnFilter(PerpetuumSoft.Reporting.DOM.Olap.PivotFilterEventArgs)">
      <summary>Raises the Filter event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.Styles">
      <summary>Gets or sets styles for each part of a resulting table.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.OnCellCreating(PerpetuumSoft.Reporting.DOM.Olap.CellCreatingEventArgs)">
      <summary>Raises the CellCreating event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.OnCalculateFields(PerpetuumSoft.Reporting.DOM.Olap.CalculateFieldsEventArgs)">
      <summary>Raises the CalculateFields event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.InitNew">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.InitNew" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Raises the Paint event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.ShowRepeatText">
      <summary>Gets or sets a value indicating whether the endurable text was displayed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.ShowSingleFact">
      <summary>Gets or sets whether a single fact caption should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoColumnWidth">
      <summary>Gets or sets a value indicating whether the column width was aligned by cell content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.ShowTableCaption">
      <summary>Gets or sets a value indicating whether the pivot table caption will be displayed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.Shift">
      <summary>Determines the shift on x-axis.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTable" /> class.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.CellCreating">
      <summary>Is raised when a cell is created</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoRowHeight">
      <summary>Gets or sets row height aligment mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.FilterExpression">
      <summary>Gets and sets the code for the script that will be invoked during filtering.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.TableCaption">
      <summary>Gets or sets table caption text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.DataSource">
      <summary>Gets or sets name of a data source used to build the pivot table.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.CalculateFields">
      <exclude>
      </exclude>
      <summary>Is raised when the field is calculated</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.DimensionOnEveryPage">
      <summary>Gets or sets a value indicating whether the dimension will be displayed on each page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.NestedFields">
      <summary>Determines the list of nested data sources.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoRowHeightMode">
      <summary>Represents modes of row heights alignment.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoRowHeightMode.Dissimilar">
      <summary>Each row has its own height. </summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoRowHeightMode.Similar">
      <summary>All rows has the same height. </summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.Olap.PivotTable.AutoRowHeightMode.None">
      <summary>Row heights align is not set.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles">
      <summary>Represents styles for pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.OddRowFactStyle">
      <summary>Gets or sets style for fact cells included in odd row.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.EvenRowFactStyle">
      <summary>Gets or sets style for fact cells included in even row.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.XDimensionStyle">
      <summary>Gets or sets style for X dimension cells.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.MainTotalStyle">
      <summary>Gets or sets style for fact cells containing pivot table total.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.FieldCaptionStyle">
      <summary>Gets or sets style for cells representing field caption.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.YDimensionStyle">
      <summary>Gets or sets style for Y dimension cells.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.TotalStyle">
      <summary>Gets or sets style for fact cells containing total by row or column.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.GroupTotalStyle">
      <summary>Gets or sets style for fact cells containing group total.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Olap.PivotTableStyles.TableCaptionStyle">
      <summary>Gets or sets style for cells representing table caption.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Page">
      <summary>Represents a single page in the report document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.GetInternalRectangle">
      <summary>Returns the rectangle delimited by the page margins.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.CustomSize">
      <summary>Gets and sets the size of custom page kind.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.Bounds">
      <summary>Gets and sets the page bounds.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.ShouldSerializeTemplateSize">
      <summary>Returns whether the TemplateSize property should be persisted.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.GetPageSize(PerpetuumSoft.Reporting.DOM.PaperKind)">
      <summary>Returns size for the given paper kind.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.#ctor">
      <summary>Creates a new instance of Page class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.PaperKind">
      <summary>Gets and sets the kind of paper.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.RaiseManualBuild">
      <summary>Invokes OnManualBuildEvent.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.Page.ManualBuild">
      <summary>Occurs when the manual build is performed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.Margins">
      <summary>Gets and sets the page margins.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.Orientation">
      <summary>Gets and sets the page orientation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.FindParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Finds the ReportControl's parent.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.ControlAt(System.Drawing.PointF)">
      <summary>Returns a ReportControl object that is found in the location specified by the given PointF.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.OnManualBuild(System.EventArgs)">
      <summary>Raises ManualBuild event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.TemplateSize">
      <summary>Gets and sets page size for template edit mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.GetSortedBands">
      <summary>Gets the array of nested bands sorted by position.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs drawing of the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Page.ManualBuildScript">
      <summary>Gets and sets the code for the script that must perform the page content rendering. If this script is set then the standard renedering mechanism is disabled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Page.ShouldSerializeCustomSize">
      <summary>Returns whether the CustomSize property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageBand">
      <summary>Base class for those bands that must appear on every page, such as page headers and footer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageBand.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the band can be placed into the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageBand.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageBand.#ctor">
      <summary>Creates a new instance of PageBand class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageBand.Render">
      <summary>Renders the band to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageBand.CheckConditions">
      <summary>Checks the band's condition.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PageBand.Mode">
      <summary>Gets and sets the rendering mode for the current page band.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageBandMode">
      <summary>Specifies rendering modes for PageBand.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PageBandMode.EvenPages">
      <summary>Print on even pages only.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PageBandMode.OddPages">
      <summary>Print on odd pages only.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PageBandMode.AllPages">
      <summary>Print on every page.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageCollection">
      <summary>Represents the collection of pages in the document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.Add(PerpetuumSoft.Reporting.DOM.Page)">
      <summary>Adds the specified page to the end of the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes when inserting pages.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.Page)">
      <summary>Inserts the specified page to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.OnRemove(System.Int32,System.Object)">
      <summary>Performs additional custom processes when removing pages.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.#ctor">
      <summary>Initializes a new instance of the PageCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.Remove(PerpetuumSoft.Reporting.DOM.Page)">
      <summary>Removes the specified page from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.Contains(PerpetuumSoft.Reporting.DOM.Page)">
      <summary>Returns whether the page already exists in the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PageCollection.Item(System.Int32)">
      <summary>Gets the page at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.AddRange(PerpetuumSoft.Reporting.DOM.Page[])">
      <summary>Adds the specified array of pages to the end of the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageCollection.IndexOf(PerpetuumSoft.Reporting.DOM.Page)">
      <summary>Returns the specified page's index in the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageFooter">
      <summary>Represents a page footer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageFooter.UpdatePageArea">
      <summary>Calculates the remaining free area on the page after the band is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageFooter.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageFooter.#ctor">
      <summary>Creates a new instance of PageFooter class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PageFooter.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageHeader">
      <summary>Represents a page header.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PageHeader.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageHeader.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageHeader.#ctor">
      <summary>Creates a new instance of PageHeader class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageHeader.UpdatePageArea">
      <summary>Calculates the remaining free area on the page after the band is rendered.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageOrientation">
      <summary>Specifies page orientation.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PageOrientation.Portrait">
      <summary>Portrauit page.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PageOrientation.Landscape">
      <summary>Landspace page.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PageOverlay">
      <summary>Represents a page overlay band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageOverlay.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageOverlay.UpdatePageArea">
      <summary>Calculates the remaining free area on the page after the band is rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageOverlay.#ctor">
      <summary>Creates a new instance of PageOverlay class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PageOverlay.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PaintArguments">
      <summary>Provides data for painting a control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PaintArguments.ShowBounds">
      <summary>Gets if designer need to show bounds for each report control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PaintArguments.Graphics">
      <summary>Gets the graphics where to paint the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.PaintArguments.Clip">
      <summary>Gets the clip rectangle defining the region where to paint the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PaintArguments.#ctor(System.Drawing.Graphics,PerpetuumSoft.Framework.Drawing.VectorRectangle,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.PaintArguments" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.PaintArguments.#ctor(System.Drawing.Graphics,PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.PaintArguments" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PaperKind">
      <summary>Specifies paper kinds.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.Legal">
      <summary>Legal paper.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.B5">
      <summary>B5 paper.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.A3">
      <summary>A3 paper (297 mm by 420 mm).</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.A5">
      <summary>A5 paper.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.Custom">
      <summary>Custom paper size.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.Folio">
      <summary>Folio paper.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.B4">
      <summary>B4 paer.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.A6">
      <summary>A6 paper.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.A2">
      <summary>A2 paper (420 mm by 594 mm).</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.A4">
      <summary>A4 paper (210 mm by 297 mm).</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PaperKind.Letter">
      <summary>Letter paper.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Parameter">
      <summary>Represents partameter transmitted to a document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Parameter.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Parameter.Value">
      <summary>Gets or sets parameter value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Parameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Parameter" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Parameter.ParameterType">
      <summary>Gets or sets parameter type name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Parameter.Name">
      <summary>Gets or sets parameter name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Parameter.ToString">
      <summary>Returns parameter name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Parameter.GetValue">
      <summary>Returns a parameter value casted to parameter type.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Parameter.System#ICloneable#Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Parameter.DefaultValue">
      <summary>Gets or sets parameter default value. Used when parameter value is null.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ParameterCollection">
      <summary>Represent collection of document parameters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.ParameterCollection" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ParameterCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ParameterCollection.Add(PerpetuumSoft.Reporting.DOM.Parameter)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ParameterCollection.Item(System.String)">
      <summary>Gets parameter for specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ParameterCollection.Add(System.String,System.Object)">
      <summary>Adds a new parameter to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Picture">
      <summary>Represents a picture control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Picture.ImageAlign">
      <summary>Gets and sets the image alignment.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.#ctor">
      <summary>Creates a new instance of Picture class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.GetImagePosition">
      <summary>Returns location of the left-top corner of the image.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Paints picture element content.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.GetImageSize">
      <summary>Returns the size of the image after stretch.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Picture.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Picture.SizeMode">
      <summary>Gets and sets the picture scaling mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Picture.Image">
      <summary>Gets and sets the image.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.PictureSizeMode">
      <summary>Specifies drawing modes for a picture.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PictureSizeMode.Normal">
      <summary>Draw the picture with its actual size.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.PictureSizeMode.Stretch">
      <summary>Stretch the picture to the control's bounds.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs">
      <summary>Represents data about the processing of the source data records</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs.Totals">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandTotalCollection" /> representing settings for totals calculation</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs.Sort">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.DataBandSortCollection" /> representing settings for data sorting</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs.PassBy">
      <summary>Gets or sets value indicating if the data is processed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.DataBand)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ProcessRecordEventArgs.Groups">
      <summary>Gets data grouping settings</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.RegularBand">
      <summary>Base class for standard bands.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RegularBand.GetSortedBands(PerpetuumSoft.Reporting.DOM.ReportControlCollection)">
      <exclude>
      </exclude>
      <summary>Automatic bands positioning on the page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RegularBand.#ctor">
      <summary>Creates a new instance of RegularBand class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.RegularBandBase">
      <summary>Base class for regular bands.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RegularBandBase.NewColumnAfter">
      <summary>Gets or sets value indicating whether a new column should be inserted after the band's content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RegularBandBase.NewPageBefore">
      <summary>Gets and sets whether the band should be rendered on a new page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RegularBandBase.NewColumnBefore">
      <summary>Gets and sets whether a new column should be started for the band's content rendering.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RegularBandBase.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RegularBandBase.NewPageAfter">
      <summary>Gets or sets value indicating whether a new page should be inserted after the band's content.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RegularBandBase.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.RegularBandBase" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute">
      <summary>Marks the properties that can be bound to an expression.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.Yes">
      <summary>Gets predefined instance of ReportBindableAttribute.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.#ctor">
      <summary>Initializes a new instance of the ReportBindableAttribute class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.Match(System.Object)">
      <summary>Returns a value indicating whether this instance equals a specified object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.IsBindable">
      <summary>Gets whether the property supports binding.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the ReportBindableAttribute class with the specified bindability attribute.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportBindableAttribute.Default">
      <summary>Marks the properties that can be bound to an expression.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportComponent">
      <summary>Base class for all components in the Report Sharp-Shooter library.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportComponent.#ctor">
      <summary>Creates a new instance of ReportComponent class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts">
      <summary>Returns the collection of all scripts assigned to the component.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportComponent.Name">
      <summary>Gets and sets the name of the component.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the component.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportControl">
      <summary>Base class for all controls in the Report Sharp-Shooter library.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.OnSizeChanged">
      <summary>Is called after the Size property is changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl">
      <summary>Creates a control for locating in the final document. It is used when element rendering.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.PageLocation">
      <summary>Gets and sets the control's top-left corner position within the page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.ShouldSerializeStyleName">
      <summary>Returns whether the StyleName property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.GenerateScript">
      <summary>Gets and sets the code for the script that will be invoked before rendering.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.ReportControl.ControlTypes">
      <summary>Collection of all registered control types.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.BringToFront">
      <summary>Brings the control to the front of all controls in container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Visible">
      <summary>Gets and sets whether the control should be rendered to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.GetDesignerToolTip">
      <summary>Returns string that will be shown in a control tooltip.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Engine">
      <summary>Gets the RenderEngine used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.RenderLocation(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Calculates location of the control in the rendered report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Fills the specified collection with all scripts assigned to the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <exclude>
      </exclude>
      <summary>Runs property designer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Document">
      <summary>Gets the document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.FindText(System.String,PerpetuumSoft.Reporting.DOM.FindTextOptions)">
      <summary>Returns whether the control contains the specified text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Parent">
      <summary>Gets and sets the parent control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.MoveBackward">
      <summary>Moves the control backward in Z-Buffer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.Prepare">
      <summary>Prepares the control for rendering.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Bookmark">
      <summary>Gets and sets a bookmark for the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.IsValidParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the control can be placed into the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.CalculateRenderHeight">
      <summary>Calculates the height of the control in the rendered report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.OnGenerate(System.EventArgs)">
      <summary>Raises Generate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyBindingDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService,System.String)">
      <summary>Runs designer for the property binding defined by the bindingName parameter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.ResetStyleName">
      <summary>Resets the StyleName property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.DataBindings">
      <summary>Gets the collection of the control's properties data/expressions bindings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.PageBounds">
      <summary>Gets and sets the control's bounds within the page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.OnStyleNameChanged">
      <summary>Executes if style name was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.GetStyle">
      <summary>Returns a style object for the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Tag">
      <summary>Gets and sets an additional information for the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.RaiseGenerate">
      <summary>Invokes OnGenerate method.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.RegisterControlType(System.Type)">
      <summary>Adds the specified control type to the registered controls list.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.StyleName">
      <summary>Gets and sets the name of the style applied to the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.Paint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Invokes OnPaint method.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.ReCalculateBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Recalculates control bounds.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.PutToBack">
      <summary>Puts the control to the back of all controls in container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Size">
      <summary>Gets and sets the size of the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.ToolTip">
      <summary>Gets and sets a tooltip for the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.#ctor">
      <summary>Creates a new instance of ReportControl class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.RenderHeight">
      <summary>Gets and sets the height of the final control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Page">
      <summary>Gets the page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.ControlAt(System.Drawing.PointF)">
      <summary>Returns a ReportControl object that is found in the location specified by the given PointF.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.GrowRenderHeight(System.Double)">
      <exclude>
      </exclude>
      <summary>Increases the control's height.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Bounds">
      <summary>Gets and sets the control's bounds within the parent control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.FindParent(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Finds the control's parent.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.Register">
      <summary>Registers the controls library.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.ReportControl.Generate">
      <summary>Occurs before the control is rendered.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Hyperlink">
      <summary>Gets and sets a hyperlink for the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControl.Location">
      <summary>Gets and sets the control's top-left corner position within the parent control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.MoveForward">
      <summary>Moves the control forward in Z-Buffer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs control drawing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.ControlByName(System.String)">
      <summary>Finds a nested ReportControl object with the specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.InitNew">
      <summary>Sets the predefined values for the properties of the control created with visual tools such as Report Designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControl.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportControlCollection">
      <summary>Defines a collection of controls in the report.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControlCollection.Item(System.Int32)">
      <summary>Gets a control from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.Contains(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the specified control exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.OnRemove(System.Int32,System.Object)">
      <summary>Raises the Remove event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.#ctor">
      <summary>Initializes a new instance of the ReportControlCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.IndexOf(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns the specified control's index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Inserts the specified control to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.OnInsert(System.Int32,System.Object)">
      <summary>Raises the Insert event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.Remove(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Removes the specified control from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.Add(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Adds the specified control to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlCollection.AddRange(PerpetuumSoft.Reporting.DOM.ReportControl[])">
      <summary>Adds the specified array of controls to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportControlException">
      <summary>The exception that is thrown in ReportControl method.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportControlException.Control">
      <summary>Gets associated ReportControl object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.ReportControlException" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlException.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl,System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.ReportControlException" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportControlException.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl,System.String,System.Exception)">
      <summary>Creates new instance of ReportControlException.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportDataBinding">
      <summary>Provides binding a component's property to a data/expression.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBinding.#ctor">
      <summary>Creates new instance of the ReportDataBinding.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportDataBinding.Expression">
      <summary>Gets and sets the string containing the expression to bind the property to.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportDataBinding.PropertyName">
      <summary>Gets and sets the name of the property to bind to the data.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBinding.#ctor(System.String,System.String)">
      <summary>Creates new instance of the ReportDataBinding.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection">
      <summary>Defines a collection of data bindings in the report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.ReportDataBinding)">
      <summary>Inserts the specified binding to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.IndexOf(PerpetuumSoft.Reporting.DOM.ReportDataBinding)">
      <summary>Returns the specified bindingэы index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.AddRange(PerpetuumSoft.Reporting.DOM.ReportDataBinding[])">
      <summary>Adds the specified array of bindings to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.FindBinding(System.String)">
      <summary>Finds a binding in the collection based on the specified property name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Remove(PerpetuumSoft.Reporting.DOM.ReportDataBinding)">
      <summary>Removes the specified binding from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Add(PerpetuumSoft.Reporting.DOM.ReportDataBinding)">
      <summary>Adds the specified binding to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Item(System.String)">
      <summary>Gets <see cref="T:PerpetuumSoft.Reporting.DOM.ReportDataBinding" /> by its name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.#ctor">
      <summary>Creates a new instance of ReportDataBindingCollection class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Item(System.Int32)">
      <summary>Gets a binding from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ReportDataBindingCollection.Contains(PerpetuumSoft.Reporting.DOM.ReportDataBinding)">
      <summary>Returns whether the specified binding exists in the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.RichText">
      <summary>Represents rich text control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RichText.CanGrow">
      <summary>Gets and sets whether the control can grow in size during rendering to match a bigger size of its rendered content regardless of the control's size in the report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.OnFillChanged">
      <summary>Is called after the Fill property is changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.#ctor">
      <summary>Creates a new instance of RichText class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RichText.RTFText">
      <summary>Gets and sets a string that contains the RTF.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RichText.Text">
      <summary>Gets a string that contains the RTF as plain text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.CalculateRenderHeight">
      <summary>Calculates the height of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.Box.PaintContent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.RichText.FindText(System.String,PerpetuumSoft.Reporting.DOM.FindTextOptions)">
      <summary>Searches the text control for the specified text based on the specified search options.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.RichText.CanShrink">
      <summary>Gets and sets whether the control can shrink in size during rendering to match a smaller size of its rendered content regardless of the control's size in the report template.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ScriptLanguage">
      <summary>Specifies the script language for the report template.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.ScriptLanguage.Custom">
      <summary>Custom script language.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.ScriptLanguage.CSharp">
      <summary>C#.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.ScriptLanguage.VisualBasicNET">
      <summary>Visual basic for NET.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Section">
      <summary>The base class for all band controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.#ctor">
      <summary>Creates a new instance of Section class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.UpdatePageArea">
      <summary>Calculates the remaining free page area after the band is rendered.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Section.SortPriority">
      <summary>Gets the band's priority for sorting operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.CalculateCaretPosition">
      <summary>Calculates the current position in the report for placing the current band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.GetSectionCaption">
      <summary>Returns the title string for the band.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Section.MasterBand">
      <summary>Gets the master band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.RenderControls">
      <summary>Renders control for output.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.PrepareControls">
      <summary>Prepares control before displaying.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Returns whether the specified control can be placed into the band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.GetSectionCaptionColor">
      <summary>Returns the color of the title bar.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Section.CheckConditions">
      <summary>Checks the band's condition.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Shape">
      <summary>Defines a shape control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.InitNew">
      <summary>Sets the predefined values for the properties of a Shape object created with visual tools such as Report Designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Shape.Fill">
      <summary>Gets and sets the fill pattern for the shape.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Shape.Shadow">
      <summary>Gets and sets the shape's shadow (see Shadow for more information).</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.ShouldSerializeShadow">
      <summary>Returns whether the Shadow property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Shape.Line">
      <summary>Gets and sets the line style for the shape's border.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Paints the shape.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.ResetShadow">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.ShouldSerializeFill">
      <summary>Returns whether the Fill property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.ResetFill">
      <summary>Resets the Fill property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Shape.ShapeStyle">
      <summary>Gets and sets the style of the shape.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.#ctor">
      <summary>Creates a new instance of Shape class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.Render">
      <summary>Renders the shape to the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Shape.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.SideBySide">
      <summary>Represents the SideBySide elemet.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SideBySide.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SideBySide.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SideBySide.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SideBySide" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Style">
      <summary>Defines a style for using in a style sheet.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.Name">
      <summary>Gets and sets the name of this style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.Font">
      <summary>Gets and sets the font defined by this style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Style.#ctor">
      <summary>Creates a new instance of Style class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Style.ToString">
      <summary>Returns a String that represents the current Style object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.Border">
      <summary>Gets and sets the border defined by this style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.TextAlign">
      <summary>Gets or sets <see cref="T:System.Drawing.ContentAlignment" /> which assignes text alignment.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.TextFill">
      <summary>Gets and sets the text fill pattern defined by this style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Style.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Style.Dispose">
      <summary>Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Style.Fill">
      <summary>Gets and sets the fill pattern defined by this style.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.StyleCollection">
      <summary>Defines the collection of styles for a style sheet.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.Insert(System.Int32,PerpetuumSoft.Reporting.DOM.Style)">
      <summary>Adds the specified style to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.IndexOf(PerpetuumSoft.Reporting.DOM.Style)">
      <summary>Returns the index of the specified style in the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.StyleCollection.Item(System.Int32)">
      <summary>Gets a style from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.#ctor">
      <summary>Creates a new instance of StyleCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.Add(PerpetuumSoft.Reporting.DOM.Style)">
      <summary>Adds the specified style to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.StyleCollection.Item(System.String)">
      <summary>Gets a style with the specified name from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.Remove(PerpetuumSoft.Reporting.DOM.Style)">
      <summary>Removes the specified style from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.Contains(PerpetuumSoft.Reporting.DOM.Style)">
      <summary>Returns whether the specified style exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleCollection.AddRange(PerpetuumSoft.Reporting.DOM.Style[])">
      <summary>Adds the specified array of styles to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.StyleSheet">
      <summary>Defines a style sheet.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.StyleSheet.Description">
      <summary>Gets and sets the string that represents description of the current style sheet.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleSheet.#ctor">
      <summary>Creates a new instance of StyleSheet class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.StyleSheet.Title">
      <summary>Gets and sets the string that represents the title of the current style sheet.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.StyleSheet.StyleSheetExt">
      <summary>Default extension for StyleSheets files.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.StyleSheet.ToString">
      <summary>Returns a String that represents the current StyleSheet object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.StyleSheet.Styles">
      <summary>Gets the collection of styles stored in the current style sheet.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.SubReport">
      <summary>Represents the SubReport elemet.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportComponent.GetScripts(PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.GetSectionCaptionColor">
      <summary>Sets caption color.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReport.Parameters">
      <summary>The transmission of parameters into the sub report template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReport.TemplateName">
      <summary>Gets or sets template name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.GetTemplate">
      <summary>Returns sub report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.OnCalculateParameters(PerpetuumSoft.Reporting.DOM.CalculateSubReportParameterEventArgs)">
      <summary>Performs additional custom processes when calculating parameters.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.DOM.SubReport.CalculateParameters">
      <summary>Оccurs when the calculation of parameters values are calculated.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.OnPaint(PerpetuumSoft.Reporting.DOM.PaintArguments)">
      <summary>Performs additional custom processes when painting subreport.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReport.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SubReport" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.SubReportBase">
      <summary>Base class for sub reports.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportBase.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportBase.CheckConditions">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.Section.CheckConditions" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportBase.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Implements <see cref="M:PerpetuumSoft.Reporting.DOM.IContainerControl.IsValidChild(PerpetuumSoft.Reporting.DOM.ReportControl)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportBase.GetTemplate">
      <summary>Returns document template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportBase.GetSectionCaptionColor">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.Section.GetSectionCaptionColor" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportBase.Shift">
      <summary>Gets or sets shif for sub-report elements.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.SubReportParameter">
      <summary>Represents parameters for <see cref="T:PerpetuumSoft.Reporting.DOM.SubReport" /> element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameter.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportParameter.Name">
      <summary>Gets or sets parameter name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportParameter.Value">
      <summary>Gets or sets parameter value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameter.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameter.#ctor(System.String,System.Object,System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SubReportParameter" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameter.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SubReportParameter" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportParameter.Expression">
      <summary>Gets or sets expression for parameter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection">
      <summary>Represents collection of <see cref="T:PerpetuumSoft.Reporting.DOM.SubReportParameter" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.#ctor(System.String[],System.Object[],System.String[])">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.Add(PerpetuumSoft.Reporting.DOM.SubReportParameter)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.Item(System.String)">
      <summary>Gets SubReportParameter by specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.Add(System.String,System.Object,System.String)">
      <summary>Adds a new parameter to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.SubReportParameterCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.TextBox">
      <summary>Represents a boxed text control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.GetDesignerToolTip">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.GetDesignerToolTip" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextBox.Value">
      <summary>Gets or sets value that will be displayed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.FindText(System.String,PerpetuumSoft.Reporting.DOM.FindTextOptions)">
      <summary>Searches the text control for the specified text based on the specified search options.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.#ctor">
      <summary>Creates a new instance of TextBox class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextBox.StringTrimming">
      <summary>Gets or sets a value indicating how to trim characters from a string that does not completely fit into a TextBox.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.InitNew">
      <summary>Sets the predefined values for the properties of a TextBox object created with visual tools such as Report Designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.PaintText(System.Drawing.Graphics,System.Drawing.Brush,PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.TextControl.PaintText(System.Drawing.Graphics,System.Drawing.Brush,PerpetuumSoft.Framework.Drawing.VectorRectangle)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.CalculateTextHeight(System.Drawing.Graphics)">
      <summary>Returns text height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextBox.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextBox.Text">
      <summary>Gets and sets a string that contains the text.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.TextControl">
      <summary>Base class for text elements.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.CanShrink">
      <summary>Gets and sets whether the control can shrink in size during rendering to match a smaller size of its rendered content regardless of the control's size in the report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.OnTextAlignmentChanged">
      <summary>Executes if text alignment was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.TextFormat">
      <summary>Gets and sets the text format for the text control.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.DOM.TextControl.DefaultFont">
      <summary>Default font.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.OnTextFillChanged">
      <summary>Executes if text fill was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ResetTextFill">
      <summary>Resets the TextFill property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ResetFont">
      <summary>Resets Font property to its default value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.PaintText(System.Drawing.Graphics,System.Drawing.Brush,PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Paints TextControl text on given rectangle with given brush.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.CalculateRenderHeight">
      <summary>Calculates the height of the final rendered control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.TextFill">
      <summary>Gets and sets the pattern for filling the text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ResetTextAlign">
      <summary>Sets alignment for the text in initial value.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.RightToLeft">
      <summary>Indicates whether the control text is printed right-to-left.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Paints text control content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.CanGrow">
      <summary>Gets and sets whether the control can grow in size during rendering to match a bigger size of its rendered content regardless of the control's size in the report template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.CalculateTextHeight(System.Drawing.Graphics)">
      <summary>When overriden in the derived classes returns text height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ShouldSerializeTextAlign">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ShouldSerializeTextFill">
      <summary>Returns whether TextFill property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.ShouldSerializeFont">
      <summary>Returns whether the Font property should be persisted.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.TextAlign">
      <summary>Gets and sets alignment for the text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.TextControl.OnFontChanged">
      <summary>Executes if font was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.TextControl.Font">
      <summary>Gets and sets the font for the text control.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.VisualControl">
      <summary>Base class for all visual controls.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.VisualControl.GrowRenderHeight(System.Double)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.GrowRenderHeight(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.VisualControl.#ctor">
      <summary>Creates a new instance of VisualControl class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.VisualControl.DisplayRectangle">
      <summary>Gets the rectangle for displaying the control on the canvas.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.VisualControl.GrowToBottom">
      <summary>Gets and sets whether the control's rendered size should be extended to the bottom of the parent band regardless of the control's size in the template.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.Widget">
      <summary>Provides report element for displaying an instrument from Instrumentation ModelKit.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.Widget.Instrument">
      <summary>Gets or sets the <see cref="T:PerpetuumSoft.Instrumentation.Model.Instrument" /> object representing the displayed instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Widget.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Draws element's content.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Widget.Render">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.Render" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Widget.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.RunPropertyDesigner(PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.Widget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.DOM.Widget" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.WinFormsControl">
      <summary>Represents a Windows Forms control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.WinFormsControl.Control">
      <summary>Gets control that will displayed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.WinFormsControl.#ctor">
      <summary>Creates a new instance of WinFormsControl class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.WinFormsControl.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.WinFormsControl.InitNew">
      <summary>Paints the content of the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.WinFormsControl.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.WinFormsControl.ControlTypeName">
      <summary>Gets and sets a string that represents the name of the type of the control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.WinFormsControl.Text">
      <summary>Gets and sets a text string for the control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.WinFormsControl.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Overridden. See <see cref="'M:PerpetuumSoft.Reporting.DOM.Box.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.DOM.ZipCode">
      <summary>Represents a ZIP code control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.#ctor">
      <summary>Creates a new instance of ZipCode class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ZipCode.Color">
      <summary>Gets and sets the color of the ZIP code.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.Render">
      <summary>Renders the control to the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.DOM.ZipCode.Code">
      <summary>Gets and sets a string that represents the ZIP code.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.InitNew">
      <summary>Sets the predefined values for the properties of a ZipCode object created with visual tools such as Report Designer.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.CreateBlankControl">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.DOM.ReportControl.CreateBlankControl" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.PopulateProperties(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Fills the properties of the final rendered control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.DOM.ZipCode.PaintContent(PerpetuumSoft.Reporting.DOM.PaintArguments,System.Drawing.RectangleF)">
      <summary>Paints zip code element content.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.CompressionOptions">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.ExportFilter">
      <summary>Provides common behavoior for all export filters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.ExportDocument(PerpetuumSoft.Reporting.DOM.Document,System.IO.Stream)">
      <summary>Exports given document to the stream.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.Export(PerpetuumSoft.Reporting.DOM.Document,System.String,System.Boolean)">
      <summary>Exports the specified report document to the specified file and optionally shows export filter settings dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.ExportDocument(PerpetuumSoft.Reporting.DOM.Document,System.String)">
      <summary>Exports given document to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.ShowDialog">
      <summary>Shows filter settings dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.ExportFilter.ExportFilters">
      <summary>Represents a collection of registered Export Filter Factories.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.GetFactory">
      <summary>Returns FilterFactory for the filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.Export(PerpetuumSoft.Reporting.DOM.Document,System.String)">
      <summary>Exports the specified report document to the specified file.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.ExportFilter.ExtraParameters">
      <exclude>
      </exclude>
      <summary>Gets or sets the <see cref="T:PerpetuumSoft.Reporting.Export.ExtraParameters" /> collection for setting external paramenters of reports export</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.RegisterExportFilter(PerpetuumSoft.Reporting.Export.ExportFilterFactory)">
      <summary>Registers a new export filter factory.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.ExportFilter.PagesRange">
      <summary>Gets or sets pages range for export.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.SelectPages(PerpetuumSoft.Reporting.DOM.PageCollection)">
      <summary>Returns collection of pages for the page range.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.Export(PerpetuumSoft.Reporting.DOM.Document,System.IO.Stream)">
      <summary>Exports the specified report document to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.GetFilterName">
      <summary>Returns the filter name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.GetFilterFormat">
      <summary>Returns export format name for the filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.GetAvailableParametersNames">
      <exclude>
      </exclude>
      <summary>Returns a list of names of the available export parameters</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.GetFilterFileExtension">
      <summary>Returns standard file extension for the filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilter.Register">
      <summary>Registers the standard filters.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.ExportFilterFactory">
      <summary>Provides a uniform mechanism for creating export filters instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the export filter associated with the factory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the export filter associated with the factory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the export filter associated with the factory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.ExportFilterFactory.GetFilterName">
      <summary>Returns the name of the export filter associated with the factory.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.ExtraParameters">
      <exclude>
      </exclude>
      <summary>Represents export parameters</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilter">
      <summary>Allows to export the final documents into Windows Bitmap format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilter.GetFactory">
      <summary>Returns the factory associated with the current Windows Bitmap export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the BitmapExportFilter class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilter.#ctor">
      <summary>Initializes a new instance of the BitmapExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilter.GetImageFormat">
      <summary>Returns the ImageFormat for the Windows Bitmap filter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilterFactory">
      <summary>Provides creation of BitmapExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated BMP export filter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilterFactory.Factory">
      <summary>Gets the default instance of the BitmapExportFilterFactory class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated BMP export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the BitmapExportFilter class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter">
      <summary>Base class for all bitmap-based report export filters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter.GetImageFormat">
      <summary>Returns the ImageFormat for the current filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter.ShowDialog">
      <summary>Shows filter settings dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter.ImageResolution">
      <summary>Gets or sets resolution.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter.ExportPage(PerpetuumSoft.Reporting.DOM.Page,System.String)">
      <summary>Exports the specified page to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter.#ctor">
      <summary>Initializes a new instance of the BitmapImageExportFilter class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilter">
      <summary>Allows to export the final documents into Enhanced Metafile format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilter.GetFactory">
      <summary>Returns the factory associated with the current export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the EmfExportFilter class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilter.#ctor">
      <summary>Initializes a new instance of the EmfExportFilter class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilterFactory">
      <summary>Provides creation of EmfExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated BMP export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the EmfExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated EMF export filter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.EmfExportFilterFactory.Factory">
      <summary>Gets the default instance of the EmfExportFilterFactory class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.GifExportFilter">
      <summary>Allows to export the final documents into GIF format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the GifExportFilter class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilter.GetFactory">
      <summary>Returns the factory associated with the current GIF export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilter.GetImageFormat">
      <summary>Returns ImageFormat for the GIF filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilter.#ctor">
      <summary>Initializes a new instance of the GifExportFilter class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.GifExportFilterFactory">
      <summary>Provides creation of GifExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated GIF export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the GifExportFilter class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.GifExportFilterFactory.Factory">
      <summary>Gets the default instance of the GifFilterFactory class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.GifExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated GIF export filter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.ImageExportFilter">
      <summary>The base class for all image export filters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.ImageExportFilter.#ctor">
      <summary>Initialaze new instance of ImageExportFilter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.ImageExportFilter.ExportPage(PerpetuumSoft.Reporting.DOM.Page,System.String)">
      <summary>Exports the specified page to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.ImageExportFilter.ExportDocument(PerpetuumSoft.Reporting.DOM.Document,System.String)">
      <summary>Exports document to the specified file.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.JpegOptionsDialog">
      <summary>A dialog window for assigning parameters of export to JPEG</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpegOptionsDialog.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpegOptionsDialog.#ctor(PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Export.Graph.JpegOptionsDialog" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpegOptionsDialog.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter">
      <summary>Allows to export the final documents into JPEG format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.ShowDialog">
      <summary>Shows options dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.#ctor">
      <summary>Initializes a new instance of the JpgExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.GetFactory">
      <summary>Returns the factory associated with the current JPG export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.GetImageFormat">
      <summary>Returns the ImageFormat for the JPG filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.ExportPage(PerpetuumSoft.Reporting.DOM.Page,System.String)">
      <summary>Exports given page to Jpeg.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the JpgExportFilter class with the specified container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilter.Quality">
      <summary>Gets or sets image quality.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilterFactory">
      <summary>Provides creation of JpgExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the JpgExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated JPG export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated JPG export filter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.JpgExportFilterFactory.Factory">
      <summary>Gets the default instance of the JpgExportFilterFactory class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.PictureOptionsDialog">
      <summary>Image export dialod form</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PictureOptionsDialog.#ctor(PerpetuumSoft.Reporting.Export.Graph.BitmapImageExportFilter)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Export.Graph.PictureOptionsDialog" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PictureOptionsDialog.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PictureOptionsDialog.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.PngExportFilter">
      <summary>Allows to export the final documents into Png format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilter.GetFactory">
      <summary>Returns the factory associated with the current Png export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the PngExportFilter class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilter.#ctor">
      <summary>Initializes a new instance of the PngExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilter.GetImageFormat">
      <summary>Returns ImageFormat for the Png filter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.PngExportFilterFactory">
      <summary>Provides creation of PngExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated Png export filter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.PngExportFilterFactory.Factory">
      <summary>Gets the default instance of the PngFilterFactory class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated Png export filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.PngExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the PngExportFilter class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter">
      <summary>Allows to export the final documents into Tiff format.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.#ctor">
      <summary>Initializes a new instance of the TiffExportFilter class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.MultiPage">
      <summary>Gets or sets value indicating that the dociment is exported to images by pages.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.ExportDocument(PerpetuumSoft.Reporting.DOM.Document,System.String)">
      <summary>Exports the document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.GetImageFormat">
      <summary>Returns ImageFormat for the Tiff filter.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.#ctor(System.ComponentModel.IContainer)">
      <summary>Initializes a new instance of the TiffExportFilter class with the specified container.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilter.GetFactory">
      <summary>Returns the factory associated with the current Tiff export filter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilterFactory">
      <summary>Provides creation of TiffExportFilter instances.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilterFactory.CreateFilter">
      <summary>Creates a new instance of the TiffExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilterFactory.GetFilterFormat">
      <summary>Returns the format name for the associated Tiff export filter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilterFactory.Factory">
      <summary>Gets the default instance of the TiffFilterFactory class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.TiffExportFilterFactory.GetFilterFileExtension">
      <summary>Returns the standard file extension for the associated Tiff export filter.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Graph.VectorImageExportFilter">
      <summary>Base class for all raster-image-based report export filters.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.VectorImageExportFilter.ExportPage(PerpetuumSoft.Reporting.DOM.Page,System.String)">
      <summary>Exports the specified page to the specified file.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.VectorImageExportFilter.#ctor">
      <summary>Initializes a new instance of the VectorImageExportFilter class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.Graph.VectorImageExportFilter.ShowDialog">
      <summary>Shows export dialog.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.IXpsExportSettings">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.PageRangeControl">
      <summary>UserControl for editing page range.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.PageRangeControl.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.PageRangeControl.OnLoad(System.EventArgs)">
      <exclude>
      </exclude>
      <summary>Raises the Load event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Export.PageRangeControl.PageRange">
      <summary>Gets or sets pages range.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Export.PageRangeControl.#ctor">
      <summary>Creates new instance of the PageRangeControl.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.Cell">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.CellCollection">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.DoubleCollection">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.TableTracer">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.TableTracer.RenderControlCallback">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Export.Tracing.TableTracer.SupportControlCallback">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Licensing.ReportLicenseHolder">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Licensing.ReportLicenseProvider">
      <exclude>
      </exclude>
    </member>
    <member name="T:QWhale.Common.ColorBox">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.ColorBox.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.ColorBox" />		 class.	</summary></member>
    <member name="M:QWhale.Common.ColorBox.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.ColorBox" />		 class.	</summary></member>
    <member name="P:QWhale.Common.ColorBox.Items">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Common.ColorBox.Text">
      <summary>Overridden. See <see cref="P:System.Windows.Forms.Control.Text" />.</summary>
    </member>
    <member name="P:QWhale.Common.ColorBox.SelectedColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Common.ColorBox.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.ColorBox.OnForeColorChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.ColorBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.Consts">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Common.Consts.DefaultControlBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultControlForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultHotTrackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultWindowFrameColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultPressedBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultHotTrackBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultXPItemsForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.DefaultXPHeaderForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.BlueItemsAreaColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.HomeSteadItemsAreaColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.MetallicItemsAreaColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.crlfArray">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.Space">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.CR">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.LF">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.Tab">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.AveChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.CRLF">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.Consts.TabStr">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.EditBorderStyle">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Common.EditBorderStyle.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.EditBorderStyle.Fixed3D">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.EditBorderStyle.FixedSingle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.EditBorderStyle.System">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Common.ErrorBehavior">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Common.ErrorBehavior.Message">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.ErrorBehavior.Exception">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.ErrorBehavior.None">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.ErrorHandler">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Common.ErrorHandler.ErrorBehavior">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Common.ErrorHandler.Error(System.Exception)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.FontInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.FontInfo.#ctor(System.Drawing.Font,System.IntPtr)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.FontInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Common.FontInfo.Font">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfo.HFont">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfo.FontWidth">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfo.FontHeight">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfo.IsMonoSpaced">
      <summary>Gets</summary>
    </member>
    <member name="F:QWhale.Common.FontInfo.dc">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.FontInfo.Finalize">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.FontInfos">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.FontInfos.#ctor(System.Drawing.Font,System.IntPtr)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.FontInfos" />		 class.	</summary></member>
    <member name="P:QWhale.Common.FontInfos.CurrentInfo">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfos.IsMonoSpaced">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.FontInfos.FontHeight">
      <summary>Gets</summary>
    </member>
    <member name="F:QWhale.Common.FontInfos.dc">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.FontInfos.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.FontInfos.CreateFontInfo(System.Drawing.Font)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.FontInfos.SelectFontInfo(QWhale.Common.FontInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.FontInfos.InitStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.GdiFontInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.GdiFontInfo.#ctor(System.Drawing.Font,System.IntPtr)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.GdiFontInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Common.GdiFontInfo.IsFontMonoSpaced">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiFontInfo.GetCharWidth(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiFontInfo.InitChartable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiFontInfo.CharWidth(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.GdiFontInfos">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.GdiFontInfos.#ctor(System.Drawing.Font,System.IntPtr)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.GdiFontInfos" />		 class.	</summary></member>
    <member name="M:QWhale.Common.GdiFontInfos.CreateFontInfo(System.Drawing.Font)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiFontInfos.SelectFontInfo(QWhale.Common.FontInfo)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.GdiPainter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.GdiPainter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.GdiPainter" />		 class.	</summary></member>
    <member name="QWhale.Common.GdiPainter.Transformation">
      <summary>Implements <see cref="P:QWhale.Common.IPainter.Transformation" />.</summary>
    </member>
    <member name="QWhale.Common.GdiPainter.Graphics">
      <summary>Implements <see cref="P:QWhale.Common.IPainter.Graphics" />.</summary>
    </member>
    <member name="P:QWhale.Common.GdiPainter.Handle">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(QWhale.Common.FontInfo,System.String,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(QWhale.Common.FontInfo,System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.IsFontMonoSpaced">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.CreateFontInfos(System.Drawing.Font)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.ClearPens">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.ClearBrushes">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.CreatePen(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.CreateBrush(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectFont(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectFont(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectTextColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectStringFormat(System.Drawing.StringFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectPen(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectBrush(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SelectOpaque(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.Clear">
      <summary>Overridden. See <see cref="M:QWhale.Common.Painter.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.Transform(System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.Transform(System.Int32,System.Int32,System.Single,System.Single)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.EndTransform">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.EndTransform" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.BeginPaint(System.Drawing.Graphics)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.BeginPaint(System.Drawing.Graphics)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.EndPaint">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.EndPaint" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(System.String)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(System.String,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(System.String,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.CharWidth(System.Char,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.CharWidth(System.Char,System.Int32,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillRectangle(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillRectangle(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillPolygon(System.Drawing.Color,System.Drawing.Point[])" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillGradient(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillGradient(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.FillGradient(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillGradient(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawThemeBackground(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawThemeBackground(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawRectangle(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRectangle(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawRoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawFocusRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawFocusRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawFocusRect(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawFocusRect(System.Drawing.Rectangle,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.StretchDrawImage(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Bitmap)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StretchDrawImage(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Bitmap)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawDotLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawDotLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawWave(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawWave(System.Drawing.Rectangle,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawPolygon(System.Drawing.Point[],System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawPolygon(System.Drawing.Point[],System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.DrawText(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawText(System.String,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.IntersectClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.IntersectClipRect(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.ExcludeClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.ExcludeClipRect(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.IntersectClipRect(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.IntersectClipRect(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.ExcludeClipRect(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.ExcludeClipRect(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.SaveClip(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.SaveClip(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPainter.RestoreClip(System.IntPtr)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.RestoreClip(System.IntPtr)" />.</summary>
    </member>
    <member name="T:QWhale.Common.GdiPlusPainter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.GdiPlusPainter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.GdiPlusPainter" />		 class.	</summary></member>
    <member name="QWhale.Common.GdiPlusPainter.Transformation">
      <summary>Implements <see cref="P:QWhale.Common.IPainter.Transformation" />.</summary>
    </member>
    <member name="QWhale.Common.GdiPlusPainter.Graphics">
      <summary>Implements <see cref="P:QWhale.Common.IPainter.Graphics" />.</summary>
    </member>
    <member name="P:QWhale.Common.GdiPlusPainter.Pen">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.GdiPlusPainter.Brush">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.ClearPens">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.ClearBrushes">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.CreatePen(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.CreateBrush(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.SelectPen(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.SelectBrush(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.SelectTextColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.IsFontMonoSpaced">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StringWidth(System.String)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StringWidth(System.String,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StringWidth(System.String,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.CharWidth(System.Char,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.CharWidth(System.Char,System.Int32,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.BeginPaint(System.Drawing.Graphics)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.BeginPaint(System.Drawing.Graphics)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.EndPaint">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.EndPaint" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillRectangle(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillRectangle(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillPolygon(System.Drawing.Color,System.Drawing.Point[])" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillGradient(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillGradient(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.FillGradient(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.FillGradient(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawThemeBackground(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawThemeBackground(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawRectangle(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRectangle(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawFocusRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawFocusRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawFocusRect(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawFocusRect(System.Drawing.Rectangle,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawRoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawRoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawDotLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawDotLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawWave(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawWave(System.Drawing.Rectangle,System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.StretchDrawImage(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Bitmap)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.StretchDrawImage(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Bitmap)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawPolygon(System.Drawing.Point[],System.Drawing.Color)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawPolygon(System.Drawing.Point[],System.Drawing.Color)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.DrawText(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.DrawText(System.String,System.Int32,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.Transform(System.Int32,System.Int32,System.Single,System.Single)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.Transform(System.Int32,System.Int32,System.Single,System.Single)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.EndTransform">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.EndTransform" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.IntersectClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.IntersectClipRect(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.ExcludeClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.ExcludeClipRect(System.Int32,System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.IntersectClipRect(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.IntersectClipRect(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.ExcludeClipRect(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.ExcludeClipRect(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.SaveClip(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.SaveClip(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Common.GdiPlusPainter.RestoreClip(System.IntPtr)">
      <summary>Implements <see cref="M:QWhale.Common.IPainter.RestoreClip(System.IntPtr)" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Common.IControl">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Common.IControl.CanFocus">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Location">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Left">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Top">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Width">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Height">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Bounds">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.ClientRectangle">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.BackgroundImage">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Parent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Focused">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Enabled">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.Handle">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IControl.IsHandleCreated">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Common.IControl.Click">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.IControl.Invalidate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IControl.Invalidate(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IControl.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IControl.PointToClient(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IControl.PointToScreen(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IControl.Focus">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.IPainter">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Common.IPainter.Transformation">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.Graphics">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.TextColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.StringFormat">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.Opaque">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.IsMonoSpaced">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.FontWidth">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.IPainter.FontHeight">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Common.IPainter.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StringWidth(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StringWidth(System.String,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.CharWidth(System.Char,System.Int32,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.BeginPaint(System.Drawing.Graphics)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.EndPaint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillRectangle(System.Drawing.Color,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillPolygon(System.Drawing.Color,System.Drawing.Point[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillGradient(System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.FillGradient(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Drawing.Color,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawThemeBackground(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawRectangle(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawFocusRect(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawFocusRect(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawRoundRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color,System.Int32,System.Drawing.Drawing2D.DashStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawDotLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawWave(System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawImage(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.GraphicsUnit,System.Drawing.Imaging.ImageAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.StretchDrawImage(System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Bitmap)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawEdge(System.Drawing.Rectangle@amp;,System.Windows.Forms.Border3DStyle,System.Windows.Forms.Border3DSide,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawPolygon(System.Drawing.Point[],System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.TextOut(System.String,System.Int32,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.DrawText(System.String,System.Int32,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.Transform(System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.EndTransform">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.IntersectClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.ExcludeClipRect(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.IntersectClipRect(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.ExcludeClipRect(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.SaveClip(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.IPainter.RestoreClip(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.IRange">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Common.IRange.StartPoint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IRange.EndPoint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IRange.Size">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.IRange.IsEmpty">
      <summary>Gets</summary>
    </member>
    <member name="T:QWhale.Common.OSUtils">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.OSUtils.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.OSUtils" />		 class.	</summary></member>
    <member name="F:QWhale.Common.OSUtils.WM_CAPTURECHANGED">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.WM_THEMECHANGED">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_CloseDropped">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_InitDialog">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_NCPaint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_NCActivate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_SetCursor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_VScroll">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_HScroll">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.WindowStyle_Border">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.WindowStyle_ClientEdge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_KeyDown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_SysKeyDown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_LButtonDown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_LButtonUp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_MouseMove">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Cut">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Copy">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Paste">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Clear">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_CanUndo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.Message_Undo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.BorderFlags_Adjust">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.BorderFlags_Mono">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.BorderFlags_Flat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.OSUtils.BorderFlags_Soft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ShowWindowTopMost(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetScreenCaps">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetScrollBar(System.IntPtr,System.Boolean,System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetScrollPos(System.IntPtr,System.Boolean,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetScrollPos(System.IntPtr,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetScrollSize(System.IntPtr,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetScrollSize(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetDoubleClickTime">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.PostMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetMouseHook(QWhale.Common.HookHandler)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetWndProcHook(QWhale.Common.HookHandler)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ReleaseHook(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.CallNextHook(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetMouseHookHandle(System.IntPtr,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.EnumChildWindows(System.IntPtr,QWhale.Common.EnumChildProc,System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.IsMouseMsg(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetText(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetText(System.IntPtr,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetClassName(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetWindowDC(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ReleaseDC(System.IntPtr,System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.CreateCaret(System.IntPtr,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ShowCaret(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.DestroyCaret">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetCaretPos(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.SetCursor(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.LoWord(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.HiWord(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ScrollWindow(System.IntPtr,System.Int32,System.Int32,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.InitCommonControls">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.ExcludeClipRect(System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.GetScrollType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.InitializeFlatSB(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.UninitializeFlatSB(System.IntPtr)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.MessageBeep">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.OSUtils.Beep(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.Painter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.Painter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.Painter" />		 class.	</summary></member>
    <member name="P:QWhale.Common.Painter.CurrentInfo">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.FontTable">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.BrushTable">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.PenTable">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.TextColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.Opaque">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.StringFormat">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.IsMonoSpaced">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.FontWidth">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.Painter.FontHeight">
      <summary>Gets</summary>
    </member>
    <member name="F:QWhale.Common.Painter.measureDC">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.Init">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.GetFontKey(System.Drawing.Font)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.ClearPens">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.ClearBrushes">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.ClearColors">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.ClearFonts">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.CreatePen(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.CreateBrush(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectTextColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectStringFormat(System.Drawing.StringFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectPen(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectBrush(System.Drawing.Color,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectOpaque(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.CreateFontInfos(System.Drawing.Font)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectFont(System.Drawing.Font,System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectFont(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectBrush(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.Painter.SelectPen(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.Range">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.Range.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.Range" />		 class.	</summary></member>
    <member name="M:QWhale.Common.Range.#ctor(System.Drawing.Point,System.Drawing.Point)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.Range" />		 class.	</summary></member>
    <member name="M:QWhale.Common.Range.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.Range" />		 class.	</summary></member>
    <member name="QWhale.Common.Range.StartPoint">
      <summary>Implements <see cref="P:QWhale.Common.IRange.StartPoint" />.</summary>
    </member>
    <member name="QWhale.Common.Range.EndPoint">
      <summary>Implements <see cref="P:QWhale.Common.IRange.EndPoint" />.</summary>
    </member>
    <member name="QWhale.Common.Range.Size">
      <summary>Implements <see cref="P:QWhale.Common.IRange.Size" />.</summary>
    </member>
    <member name="QWhale.Common.Range.IsEmpty">
      <summary>Implements <see cref="P:QWhale.Common.IRange.IsEmpty" />.</summary>
    </member>
    <member name="T:QWhale.Common.RangeList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.RangeList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.RangeList" />		 class.	</summary></member>
    <member name="P:QWhale.Common.RangeList.TopRange">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.RangeList.UpdateCount">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Common.RangeList.SortLevels">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRangeIndex(System.Drawing.Point,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRangeIndex(System.Int32,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRange(System.Drawing.Point,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRange(System.Int32,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.UpdatePosition(QWhale.Common.IRange,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.BlockDeleting(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.Clear">
      <summary>Implements <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Common.RangeList.CopyFrom(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.RemoveAt(System.Int32)">
      <summary>Implements <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Common.RangeList.Add(System.Object)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRange(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindInclusiveRange(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindRange(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindExactRange(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.FindExactRange(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.RemoveRange(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.RemoveRange(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetRanges(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetRanges">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetRanges(System.Collections.IList,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetExactRanges(System.Collections.IList,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.GetRanges(System.Collections.IList,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.Insert(System.Int32,System.Object)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Common.RangeList.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.EndUpdate(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.RangeList.Sort">
      <summary>Overridden. See <see cref="M:System.Collections.ArrayList.Sort" />.</summary>
    </member>
    <member name="T:QWhale.Common.SortList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.SortList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.SortList" />		 class.	</summary></member>
    <member name="F:QWhale.Common.SortList.CompareIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.FindExact(System.Object,System.Int32@amp;,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.FindFirst(System.Object,System.Int32@amp;,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.FindLast(System.Object,System.Int32@amp;,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.UpdatePos(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Point@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.UpdatePos(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.InsideBlock(System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SortList.InsideBlock(System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.SpeedButton">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.SpeedButton.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.SpeedButton" />		 class.	</summary></member>
    <member name="M:QWhale.Common.SpeedButton.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.SpeedButton" />		 class.	</summary></member>
    <member name="P:QWhale.Common.SpeedButton.Hot">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.SpeedButton.Pressed">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Common.SpeedButton.ImageList">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.SpeedButton.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.SpeedButton.BorderStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Common.SpeedButton.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SpeedButton.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SpeedButton.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SpeedButton.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.SpeedButton.OnMouseLeave(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.StringConsts">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Common.StringConsts.EmptyColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DefaultHyperTextHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DefaultDragMarginHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NofMstr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNofMstr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineStr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PageNofMstr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PageStr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidTypeName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidPropName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidTabStop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidMarginColumn">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidReference">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InvalidRange">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.StringNotFound">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SearchReachedStartPos">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrNamespaceDeclaration">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrNamespaceModifiers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrNamespaceModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrArglistParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrArrayParamSpecifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrDefaultParamNotPermitted">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrStackallocExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrInterfaceDeclaration">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrInterfaceMemberDeclaration">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrSyntax">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrIdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrInExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrCatchOrFinallyExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrFixedPointerDeclaration">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrNewExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrWhileExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrTypeExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ErrEndOfFileFound">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MethodOverloads">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeSnippetsEditField">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeSnippetTooltipHeader">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InsertDelegateHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InsertDelegateExtendedHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNumberCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DlgGotoCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.EnterNewLineCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OKCaption_GotoDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CancelCaption_GotoDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PrintOptionsButtonText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DlgPrintOptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FileToPrintCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FileNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PrintSelectionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseHeaderCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseFooterCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNumbersCaption_PrintOptionsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PageNumbersCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WordWrapCaption_PrintOptionsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseSyntaxCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseColorsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DisplayProgressCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OkCaption_PrintOptionsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CancelCaption_PrintOptionsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DlgSearchCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DlgReplaceCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FindWhatCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReplaceWithCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MatchCaseCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MatchWholeWordCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SearchHiddenTextCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SearchUpCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseRegularExpressionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PromptOnReplaceCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SearchCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FromCursorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.EntireScopeCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SelectionOnlyCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FindNextCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReplaceCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReplaceAllCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MarkAllCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CloseCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HelpCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SingleCharCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ZeroOrMoreCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OneOrMoreCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BeginLineCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.EndLineCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OneCharInSetCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OneCharNotInSetCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OrCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.EscapeCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.TagCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FindWhatTextCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.TagExpressionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ConfirmReplaceText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ConfirmReplace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.IdentStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NumberStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReswordStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CommentStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.XmlCommentStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SymbolStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WhitespaceStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.StringStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DirectiveStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SyntaxErrorStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.IdentsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NumbersName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReswordsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CommentsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.StringsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WhiteSpaceName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DirectivesName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.XMLCommentsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HTMLTagsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNumbersName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HyperTextName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MisspelledWordsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SymbolsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BracesName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OperatorsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FunctionsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ObjectsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NewObjectsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SyntaxErrorsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeSnippetsName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineModificatorChangedName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineModificatorSavedName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineSeparatorName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WindowColorName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BraceMatchingName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GutterPenColorName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeOutlinePenColorName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ActiveSelectionName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InactiveSelectionName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.IdentsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NumbersInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ReswordsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CommentsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.StringsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WhiteSpaceInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DirectivesInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.XMLCommentsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HTMLTagsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNumbersInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HyperTextInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MisspelledWordsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SyntaxErrorsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeSnippetsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SymbolsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BracesInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OperatorsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FunctionsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ObjectsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NewObjectsInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineModificatorChangedInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineModificatorSavedInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineSeparatorInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WindowColorInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BraceMatchingInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GutterPenColorInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CodeOutlinePenColorInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ActiveSelectionInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InactiveSelectionInternalName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.EmptyOption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DlgSyntaxSettingsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PropertiesOptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PropertiesGeneralCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PropertiesFontsColorsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PropertiesAdditionalCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.PropertiesKeyboradCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GeneralCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FontsAndColorsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.AdditionalCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DocumentCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GutterMarginCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GroupBoxLineNumbersCaption_SyntaxSettingsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.WordWrapCaption_SyntaxSettingsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HighlightUrlsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DragAndDropCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.VertScrollBarCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.HorzScrollBarCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ForcedCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShowGutterCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShowMarginCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.GutterWidthCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MarginPositionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CheckBoxLineNumbersCaption_SyntaxSettingsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.LineNumbersOnGutterCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FontCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SizeCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DisplayItemsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DescriptionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ForeColorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BackColorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.FontAttributesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BoldCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ItalicCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UnderlineCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SampleCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SampleTextCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.NavigateOptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OutlineOptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.TabOptionsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BeyondEolCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.BeyondEofCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MoveOnRightButtonCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.AllowOutliningCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShowHintsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.TabSizesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.InsertSpacesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.KeepTabsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.OKCaption_SyntaxSettingsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.CancelCaption_SyntaxSettingsDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.AddColorTheme">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DeleteColorTheme">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.KeyboardMappingSchemeCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShowCommandsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShortcutsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.UseShortcutCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShortcutKeysCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.ShortcutCurrentlyUsedCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.SaveSchemeAsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.DeleteSchemeCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.RemoveShortcutCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.AssignShortcutsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuUndoCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuRedoCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuCutCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuCopyCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuPasteCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuDeleteCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.StringConsts.MenuSelectAllCaption">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.StringConsts.Localize(System.Globalization.CultureInfo)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.TrialVersion">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.TrialVersion.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.TrialVersion" />		 class.	</summary></member>
    <member name="M:QWhale.Common.TrialVersion.CheckTrialVersion">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.TrialWarning">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.TrialWarning.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.TrialWarning" />		 class.	</summary></member>
    <member name="M:QWhale.Common.TrialWarning.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.TrialWarning.ShowTrialDialog(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.XPThemeName">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Common.XPThemeName.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.XPThemeName.Blue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.XPThemeName.HomeStead">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.XPThemeName.Metallic">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Common.XPThemeName.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Common.XPThemes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Common.XPThemes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Common.XPThemes" />		 class.	</summary></member>
    <member name="P:QWhale.Common.XPThemes.Offset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Common.XPThemes.CurrentTheme">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.GetGroupCaptionColor(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.GetGroupItemCaptionColor(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawHeaderButton(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawHeaderBackground(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawGroupBackground(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawBackground(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawRect(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DoneTheme">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.InitTheme">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawEditBorder(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Common.XPThemes.DrawEditBorder(System.IntPtr,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Design.Dialogs.DlgFlagEnumeration">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.Dialogs.DlgFlagEnumeration" />		 class.	</summary></member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.#ctor(QWhale.Design.FlagEnumerationEditor)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.Dialogs.DlgFlagEnumeration" />		 class.	</summary></member>
    <member name="P:QWhale.Design.Dialogs.DlgFlagEnumeration.EditValue">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Design.Dialogs.DlgFlagEnumeration.ListBox">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.GetFields(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.listBox_ItemCheckEventHandler(System.Object,System.Windows.Forms.ItemCheckEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.SelectAll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.ClearAll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.UpdateListBox">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.GetOptionValue(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.FromInt(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.DisableOption(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.EnableOption(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.IsOptionEnabled(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgFlagEnumeration.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Design.Dialogs.DlgSyntaxBuilder">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.Dialogs.DlgSyntaxBuilder.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.Dialogs.DlgSyntaxBuilder" />		 class.	</summary></member>
    <member name="M:QWhale.Design.Dialogs.DlgSyntaxBuilder.#ctor(QWhale.Design.SyntaxBuilderEditor)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.Dialogs.DlgSyntaxBuilder" />		 class.	</summary></member>
    <member name="P:QWhale.Design.Dialogs.DlgSyntaxBuilder.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.pnStyles">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.pnSample">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laSample">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.gbStyleProperties">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbPlainText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.clbBkColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.clbForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbStyleName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStyleName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStyleBkColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStyleForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbStyleDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStyleDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.gbFontStyles">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbStrikeout">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbItalic">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbUnderline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbBold">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.pnStates">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.gbSyntaxBlockProperties">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laBlockreswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laBlockExpr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbBlockDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laBlockDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.cbreswordStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.lareswordStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laLeaveState">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.cbLeaveState">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.cbStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.gbStateProperties">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbStateName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laStateDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbStateDesc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.chbCaseSensitive">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.pnGeneral">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laCopyright">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laDescription">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laSchemeName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laAuthor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbCopyright">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbDescription">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbSchemeName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbAuthor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbreswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbExpressions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laFileType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbFileType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.laFileExt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Design.Dialogs.DlgSyntaxBuilder.tbFileExt">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgSyntaxBuilder.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgSyntaxBuilder.GetLexStyle(System.Windows.Forms.TreeNode,QWhale.Syntax.LexScheme)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Design.Dialogs.DlgSyntaxBuilder.GetLexState(System.Windows.Forms.TreeNode,QWhale.Syntax.LexScheme)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Design.FlagEnumerationEditor">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.FlagEnumerationEditor.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.FlagEnumerationEditor" />		 class.	</summary></member>
    <member name="P:QWhale.Design.FlagEnumerationEditor.Service">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Design.FlagEnumerationEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Overridden. See <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Design.FlagEnumerationEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Overridden. See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
    </member>
    <member name="T:QWhale.Design.LineStyleConverter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.LineStyleConverter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.LineStyleConverter" />		 class.	</summary></member>
    <member name="M:QWhale.Design.LineStyleConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Overridden. See <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />.</summary>
    </member>
    <member name="M:QWhale.Design.LineStyleConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Overridden. See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />.</summary>
    </member>
    <member name="T:QWhale.Design.ScrollingButtonConverter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.ScrollingButtonConverter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.ScrollingButtonConverter" />		 class.	</summary></member>
    <member name="M:QWhale.Design.ScrollingButtonConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>Overridden. See <see cref="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />.</summary>
    </member>
    <member name="M:QWhale.Design.ScrollingButtonConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>Overridden. See <see cref="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />.</summary>
    </member>
    <member name="T:QWhale.Design.SyntaxBuilderEditor">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Design.SyntaxBuilderEditor.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Design.SyntaxBuilderEditor" />		 class.	</summary></member>
    <member name="M:QWhale.Design.SyntaxBuilderEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>Overridden. See <see cref="M:System.Drawing.Design.UITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Design.SyntaxBuilderEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>Overridden. See <see cref="M:System.Drawing.Design.UITypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.AllowedSelectionMode">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.AllowedSelectionMode.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.AllowedSelectionMode.Stream">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.AllowedSelectionMode.Block">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.AutoCorrectEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.AutoCorrectEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.AutoCorrectEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.AutoCorrectEventArgs.Word">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.AutoCorrectEventArgs.CorrectWord">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.AutoCorrectEventArgs.HasCorrection">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.BlockDeletingEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.BlockDeletingEventArgs.#ctor(System.Drawing.Rectangle)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BlockDeletingEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.BlockDeletingEventArgs.Rect">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.BookMark">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.BookMark.#ctor(System.Int32,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMark" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.BookMark.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMark" />		 class.	</summary></member>
    <member name="QWhale.Editor.BookMark.Line">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMark.Line" />.</summary>
    </member>
    <member name="QWhale.Editor.BookMark.Pos">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMark.Pos" />.</summary>
    </member>
    <member name="QWhale.Editor.BookMark.Index">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMark.Index" />.</summary>
    </member>
    <member name="QWhale.Editor.BookMark.Position">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMark.Position" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMark.Assign(QWhale.Editor.IBookMark)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMark.Assign(QWhale.Editor.IBookMark)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.BookMarkEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.BookMarkEx.#ctor(System.Int32,System.Int32,System.Int32,System.String,System.String,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMarkEx" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.BookMarkEx.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMarkEx" />		 class.	</summary></member>
    <member name="QWhale.Editor.BookMarkEx.Name">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMarkEx.Name" />.</summary>
    </member>
    <member name="QWhale.Editor.BookMarkEx.Description">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMarkEx.Description" />.</summary>
    </member>
    <member name="QWhale.Editor.BookMarkEx.Url">
      <summary>Implements <see cref="P:QWhale.Editor.IBookMarkEx.Url" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarkEx.Assign(QWhale.Editor.IBookMark)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMark.Assign(QWhale.Editor.IBookMark)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.BookMarkList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.BookMarkList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMarkList" />		 class.	</summary></member>
    <member name="QWhale.Editor.BookMarkList.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="F:QWhale.Editor.BookMarkList.lineComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BookMarkList.pointComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BookMarkList.bookMarkComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BookMarkList.rangeComparer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.BookMarkList.UpdatePosition(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Editor.BookMark)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.BookMarkList.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.IComparer,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.BookMarkList.FindByLine(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.BookMarkList.FindByIndex(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.BookMarks">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.BookMarks.#ctor(QWhale.Editor.ITextSource)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.BookMarks" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.BookMarks.Assign(QWhale.Editor.IBookMarks)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.Assign(QWhale.Editor.IBookMarks)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GetBookMark(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GetBookMark(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GetBookMark(System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GetBookMark(System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GetBookMarks(System.Drawing.Point,System.Drawing.Point,System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GetBookMarks(System.Drawing.Point,System.Drawing.Point,System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.FindBookMark(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.FindBookMark(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.FindBookMark(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.SetBookMark(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.SetBookMark(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.SetBookMark(System.Drawing.Point,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.SetBookMark(System.Drawing.Point,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.SetBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.SetBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.SetBookMark(QWhale.Editor.IBookMark)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.SetBookMark(QWhale.Editor.IBookMark)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.FindBookMark(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.FindBookMark(System.Int32,System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32,System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark(System.Drawing.Point,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Drawing.Point,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark(QWhale.Editor.IBookMark)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark(QWhale.Editor.IBookMark)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ToggleBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ClearBookMark(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ClearBookMark(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ClearBookMark(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ClearBookMark(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ClearBookMarkByIndex(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.Clear">
      <summary>Implements <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ClearBookMarks(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ClearBookMarks(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.ClearAllBookMarks">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.ClearAllBookMarks" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.NextBookMark">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.NextBookMark" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GotoBookMark(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GotoBookMark(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GotoPrevBookMark">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GotoPrevBookMark" />.</summary>
    </member>
    <member name="M:QWhale.Editor.BookMarks.GotoNextBookMark">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMarks.GotoNextBookMark" />.</summary>
    </member>
    <member name="T:QWhale.Editor.Braces">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Braces.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Braces" />		 class.	</summary></member>
    <member name="QWhale.Editor.Braces.OpenBraces">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.OpenBraces" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.ClosingBraces">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.ClosingBraces" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.BracesOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.BracesOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.ForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatchingEx.ForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.BackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatchingEx.BackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.UseRoundRect">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatchingEx.UseRoundRect" />.</summary>
    </member>
    <member name="QWhale.Editor.Braces.Style">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatchingEx.Style" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Braces.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.IsEqualArrays(System.Char[],System.Char[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.Assign(QWhale.Editor.IBraceMatchingEx)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatchingEx.Assign(QWhale.Editor.IBraceMatchingEx)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetBracesOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetBracesOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetClosingBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetClosingBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetOpenBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetOpenBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatchingEx.ResetForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatchingEx.ResetBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetUseRoundRect">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatchingEx.ResetUseRoundRect" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ResetStyle">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatchingEx.ResetStyle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ShouldSerializeForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ShouldSerializeBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ShouldSerializeStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.FindClosingBrace(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.FindClosingBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.FindOpenBrace(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.FindOpenBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.TempHighlightBraces(System.Drawing.Rectangle[])">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.TempHighlightBraces(System.Drawing.Rectangle[])" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.TempUnhighlightBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.TempUnhighlightBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ShouldSerializeOpenBraces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Braces.ShouldSerializeClosingBraces">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.BracesOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.BracesOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BracesOptions.Highlight">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BracesOptions.HighlightBounds">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.BracesOptions.TempHighlight">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionBox">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionBox.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionBox" />		 class.	</summary></member>
    <member name="QWhale.Editor.CodeCompletionBox.DropDownCount">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionBox.DropDownCount" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionBox.Filtered">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionBox.Filtered" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionBox.Filter">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionBox.Filter" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionBox.Sorted">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionBox.Sorted" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionBox.Columns">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionBox.Columns" />.</summary>
    </member>
    <member name="E:QWhale.Editor.CodeCompletionBox.SelectionChanged">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoProcessKeyMessage(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ProcessKeyPreview(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.UpdateAutoSize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoShow(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.CreatePopupControl">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoHide">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.HideCodeHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.HideCodeEdit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoShowCodeHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.UpdateCodeEdit(System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ShowCodeEdit(System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.OnShowCodeHint(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ShowCodeHint(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoSelectionChanged(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.GetSelectedIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.CodeEditKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.SetProvider(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.DoUpdateSize(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ResetContent">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetContent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ClearColumns">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionBox.ClearColumns" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.AddColumn">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionBox.AddColumn" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.InsertColumn(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionBox.InsertColumn(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.RemoveColumnAt(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionBox.RemoveColumnAt(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ResetSizeable">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetSizeable" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionBox.ResetDropDownCount">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionBox.ResetDropDownCount" />.</summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionColumn">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionColumn.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionColumn" />		 class.	</summary></member>
    <member name="QWhale.Editor.CodeCompletionColumn.Name">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionColumn.Name" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionColumn.FontStyle">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionColumn.FontStyle" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionColumn.ForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionColumn.ForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionColumn.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionColumn.Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionColumn.ResetFontStyle">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionColumn.ResetFontStyle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionColumn.ResetForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionColumn.ResetForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionColumn.ResetVisible">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionColumn.ResetVisible" />.</summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionColumns">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionColumns.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionColumns" />		 class.	</summary></member>
    <member name="QWhale.Editor.CodeCompletionColumns.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionEdit">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.#ctor(QWhale.Editor.SyntaxEdit,QWhale.Editor.CodeCompletionWindow)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionEdit" />		 class.	</summary></member>
    <member name="QWhale.Editor.CodeCompletionEdit.EditField">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionEdit.EditField" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionEdit.EditText">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionEdit.EditText" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionEdit.EditPath">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionEdit.EditPath" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.CreatePopupControl">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.WndProc(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.DoTextChanged(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.DoProcessKeyMessage(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.ProcessKeyPreview(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionEdit.IsFocused">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.IsFocused" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.CodeCompletionFlags">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.CloseOnEscape">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnEnter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.CloseOnMouseLeave">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.CloseOnLostFocus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnClick">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnDblClick">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.FeetToScreen">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.KeepActive">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnDelimiter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnTab">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CodeCompletionFlags.AcceptOnSpace">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionHint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionHint.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionHint" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.CodeCompletionHint.CreateParams">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionHint.AutoHide">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionHint.AutoHide" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionHint.AutoHidePause">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionHint.AutoHidePause" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionHint.DisableColorPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableColorPaint" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionHint.DisableSyntaxPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableSyntaxPaint" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionHint.Lexer">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.Lexer" />.</summary>
    </member>
    <member name="E:QWhale.Editor.CodeCompletionHint.CustomDraw">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.UpdateProviderParamIndex(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.UpdateProviderContent(QWhale.Syntax.ICodeCompletionProvider,QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.PositionChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DoUpdateSize(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DoShow(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DoHide">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.OnHideHint(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ProcessKeyPreview(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.CheckPositionValid">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.CreatePopupControl">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.GetSelectedIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.SetProvider(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DoMouseWheel(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ResetContent">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetContent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ResetAutoHide">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionHint.ResetAutoHide" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ResetAutoHidePause">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionHint.ResetAutoHidePause" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.MeasureLine(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ResetDisableColorPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableColorPaint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.ResetDisableSyntaxPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableSyntaxPaint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionHint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.CodeCompletionWindow">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CodeCompletionWindow" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.CodeCompletionWindow.CreateParams">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.Provider">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.Provider" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.AutoSize">
      <summary>Overridden. See <see cref="P:System.Windows.Forms.Control.AutoSize" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.Images">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.Images" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.CompletionFlags">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.CompletionFlags" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.Sizeable">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.Sizeable" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.OwnerControl">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.OwnerControl" />.</summary>
    </member>
    <member name="P:QWhale.Editor.CodeCompletionWindow.PopupControl">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.StartPos">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.StartPos" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.EndPos">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.EndPos" />.</summary>
    </member>
    <member name="QWhale.Editor.CodeCompletionWindow.DisplayPos">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletionWindow.DisplayPos" />.</summary>
    </member>
    <member name="E:QWhale.Editor.CodeCompletionWindow.ClosePopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.CodeCompletionWindow.ShowPopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.CodeCompletionWindow.KeyPreviewEvent">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#Invalidate">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#Invalidate(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#Update">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#PointToClient(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToClient(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#PointToScreen(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToScreen(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#Focus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Focus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.GetSyntaxEdit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.UpdateAutoSize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.SetProvider(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.OnProcessKeyPreview(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.IsPopupControlFocused">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.NeedCloseOnLostFocus">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoProcessKeyMessage(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoLostFocus(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoClick(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.CreatePopupControl">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.GetSelectedIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoDoubleClick(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.ProcessKeyPreview(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.CheckPositionValid">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoShow(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.DoHide">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.WndProc(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.OnShowPopup(QWhale.Syntax.ShowingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.OnClosePopup(QWhale.Syntax.ClosingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.ResetContent">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetContent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.CloseDelayed(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.CloseDelayed(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.Close(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.Close(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.Close(System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.Popup">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.Popup" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.PopupAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.PopupAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.PopupAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.PopupAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.IsFocused">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.IsFocused" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.ResetAutoSize">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetAutoSize" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.ResetCodeCompletionFlags">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetCodeCompletionFlags" />.</summary>
    </member>
    <member name="M:QWhale.Editor.CodeCompletionWindow.ResetSizeable">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletionWindow.ResetSizeable" />.</summary>
    </member>
    <member name="T:QWhale.Editor.ColorFlags">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.ColorFlags.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.WhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.Tabulation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.OutlineSection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.MisSpelledWord">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.HyperText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.Brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.WaveLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ColorFlags.CodeSnippet">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.CompletionEdit">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CompletionEdit.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CompletionEdit" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.CompletionEdit.EditBox">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionEdit.Label">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionEdit.PathLabel">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.CompletionEdit.DoKeyPress(System.Object,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.CompletionHint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CompletionHint.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CompletionHint" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.CompletionHint.Provider">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionHint.SelectedIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionHint.HintSize">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionHint.UpdateSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.OnFontChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.StringChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.ProviderChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.ResetContent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionHint.ChangeSelection(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.CompletionListBox">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CompletionListBox.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CompletionListBox" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.CompletionListBox.Filtered">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.Filter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.ColumnCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.Provider">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.ItemWidth">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.Images">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.NavKeys">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.CompletionListBox.UpdateSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.ProviderChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.OnFontChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.IsFiltered(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.ResetContent(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.ResetContent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.GetColumn(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.ClearColumns">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.AddColumn">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.InsertColumn(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.CompletionListBox.RemoveColumnAt(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.CreatePrintEditEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CreatePrintEditEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CreatePrintEditEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.CreatePrintEditEventArgs.PrintEdit">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.CustomDrawEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.CustomDrawEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.CustomDrawEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.Painter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.DrawStage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.DrawState">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.Rect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.DrawInfo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.CustomDrawEventArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.DlgGoto">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.DlgGoto.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.DlgGoto" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Dialogs.DlgGoto.Line">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.DlgGoto.Lines">
      <summary>Sets</summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.laEnterNewLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.tbNewLineNumber">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.btCancel">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.btOK">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.panel1">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgGoto.components">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgGoto.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgGoto.Execute(System.Object,System.Int32,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IGotoLineDialog.Execute(System.Object,System.Int32,System.Int32@amp;)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.DlgPrintOptions">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.DlgPrintOptions.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.DlgPrintOptions" />		 class.	</summary></member>
    <member name="QWhale.Editor.Dialogs.DlgPrintOptions.Options">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.DlgPrintOptions.AllowedOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.AllowedOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.DlgPrintOptions.FileName">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.FileName" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgPrintOptions.QWhale#Editor#Dialogs#IPrintOptionsDialog#ShowDialog">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ShowDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgPrintOptions.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgPrintOptions.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgPrintOptions.ResetAllowedOptions">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ResetAllowedOptions" />.</summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.DlgSearch">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.DlgSearch" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Dialogs.DlgSearch.Search">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.DlgSearch.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.DlgSearch.IsReplace">
      <summary>Gets or sets</summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.laFindWhat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.cbFindWhat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btFindNext">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btReplace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btMarkAll">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btClose">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btHelp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btPopup">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.cbReplaceWith">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.laReplaceWith">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btReplaceAll">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.cmFind">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.menuItem4">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.menuItem10">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miSingleChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miZeroOrMore">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miOneOrMore">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miEndLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miOneCharInSet">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miOneCharNotInSet">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miOr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miEscape">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbSearchUp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbSearchHiddenText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbMatchWholeWord">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbMatchCase">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.rbEntireScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.rbFromCursor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.gbSearch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbUseRegularExpressions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.pnlSearch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.chbPromptOnReplace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.miBeginLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.components">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.btReplacePopup">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSearch.rbSelectionOnly">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.ReplaceChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.ShowNotFound">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.OnLoad(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSearch.Init">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.DlgSyntaxSettings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.DlgSyntaxSettings.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.DlgSyntaxSettings" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.Dialogs.DlgSyntaxSettings.#ctor(QWhale.Editor.Dialogs.EditorSettingsTab)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.DlgSyntaxSettings" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Dialogs.DlgSyntaxSettings.SyntaxSettings">
      <summary>Gets or sets</summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnButtons">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.btCancel">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.btOK">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnMain">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnTree">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tvProperties">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnManage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.imageList1">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.colorDialog1">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tcMain">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tpGeneral">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tpFontsAndColors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tpAdditional">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnGeneral">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbGutterMargin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbShowMargin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laGutterWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbShowGutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laMarginPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbDocument">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbDragAndDrop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbHorzScrollBar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbVertScrollBar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbWordWrap">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbHighlightUrls">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnFontsColors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laDisplayItems">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnSampleText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laSampleText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laSample">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laFont">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.cbFontName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laDescription">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tbDescription">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.lbStyles">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbFontAttributes">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbUnderline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbItalic">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbBold">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnAdditional">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbTabOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tbTabStops">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.rbKeepTabs">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.rbInsertSpaces">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.laTabSizes">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbOutlineOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbAllowOutlining">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbShowHints">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbNavigateOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbMoveOnRightButton">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbBeyondEof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbBeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.cbForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.cbBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.gbLineNumbers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbLineNumbers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbLineNumbersOnGutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tbGutterWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tbMarginPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tbFontSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.tpKeyboard">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.pnKeyboard">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbLineModificator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.DlgSyntaxSettings.chbWhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.DlgSyntaxSettings.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.EditorSettingsTab">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.Dialogs.EditorSettingsTab.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.EditorSettingsTab.General">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.EditorSettingsTab.Additional">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.EditorSettingsTab.FontsAndColors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.Dialogs.EditorSettingsTab.Keymapping">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.IGotoLineDialog">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.IGotoLineDialog.Execute(System.Object,System.Int32,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.IPersistentSettings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.IPersistentSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPersistentSettings.SaveFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPersistentSettings.SaveStream(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPersistentSettings.LoadFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPersistentSettings.LoadStream(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.IPrintOptionsDialog">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.AllowedOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.IPrintOptionsDialog.FileName">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ShowDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.IPrintOptionsDialog.ResetAllowedOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.ISearchDialog">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.Dialogs.ISearchDialog.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISearchDialog.OwnerForm">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISearchDialog.SearchSettings">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.Execute(QWhale.Editor.ISearch,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.DoneSearch(QWhale.Editor.ISearch)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.EnsureVisible(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleHiddenText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleMatchCase">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleRegularExpressions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleSearchUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleWholeWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISearchDialog.Close">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.ISyntaxSettings">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.LexStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.ColorThemes">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.NavigateOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.ScrollBars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.SelectionOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.GutterOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.SeparatorOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.OutlineOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.ShowMargin">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.ShowGutter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.HighlightUrls">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.AllowOutlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.UseSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.WordWrap">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.WhiteSpaceVisible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.GutterWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.MarginPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.TabStops">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.EventNames">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.ISyntaxSettings.EventData">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.LoadFromEdit(QWhale.Editor.SyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.ApplyToEdit(QWhale.Editor.SyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsDescriptionEnabled(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsFontStyleEnabled(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsBackColorEnabled(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.ISyntaxSettings.Localize">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.PersistentSettings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.PersistentSettings" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Dialogs.PersistentSettings.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.PersistentSettings.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.SearchDialog">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.SearchDialog" />		 class.	</summary></member>
    <member name="QWhale.Editor.Dialogs.SearchDialog.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISearchDialog.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SearchDialog.OwnerForm">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISearchDialog.OwnerForm" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SearchDialog.SearchSettings">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISearchDialog.SearchSettings" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.Execute(QWhale.Editor.ISearch,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.Execute(QWhale.Editor.ISearch,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.DoneSearch(QWhale.Editor.ISearch)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.DoneSearch(QWhale.Editor.ISearch)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.Close">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.Close" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.EnsureVisible(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.EnsureVisible(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.ToggleHiddenText">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleHiddenText" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.ToggleMatchCase">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleMatchCase" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.ToggleRegularExpressions">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleRegularExpressions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.ToggleSearchUp">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleSearchUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.TogglePromptOnReplace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchDialog.ToggleWholeWord">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISearchDialog.ToggleWholeWord" />.</summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.SearchSettings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.SearchSettings.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.SearchSettings" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Dialogs.SearchSettings.SearchOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.SearchSettings.SearchList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.SearchSettings.ReplaceList">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SearchSettings.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Editor.Dialogs.PersistentSettings.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SearchSettings.GetXmlType">
      <summary>Overridden. See <see cref="M:QWhale.Editor.Dialogs.PersistentSettings.GetXmlType" />.</summary>
    </member>
    <member name="T:QWhale.Editor.Dialogs.SyntaxSettings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Dialogs.SyntaxSettings" />		 class.	</summary></member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.LexStyles">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.LexStyles" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.ColorThemes">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.ColorThemes" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.SyntaxSettings.Themes">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.Font">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.Font" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.NavigateOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.NavigateOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.ScrollBars">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.ScrollBars" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.SelectionOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.SelectionOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.GutterOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.GutterOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.SeparatorOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.SeparatorOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.OutlineOptions">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.OutlineOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.ShowMargin">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.ShowMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.ShowGutter">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.ShowGutter" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.HighlightUrls">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.HighlightUrls" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.AllowOutlining">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.AllowOutlining" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.UseSpaces">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.UseSpaces" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.WordWrap">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.WordWrap" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.WhiteSpaceVisible">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.WhiteSpaceVisible" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.GutterWidth">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.GutterWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.MarginPos">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.MarginPos" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.TabStops">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.TabStops" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.SyntaxSettings.PageType">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.EventNames">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.EventNames" />.</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.EventData">
      <summary>Implements <see cref="P:QWhale.Editor.Dialogs.ISyntaxSettings.EventData" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Dialogs.SyntaxSettings.KeyList">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.Dialogs.SyntaxSettings.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Editor.Dialogs.PersistentSettings.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.Localize">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.Localize" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.IsDescriptionEnabled(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsDescriptionEnabled(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.IsFontStyleEnabled(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsFontStyleEnabled(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.IsBackColorEnabled(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.IsBackColorEnabled(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.LoadFromEdit(QWhale.Editor.SyntaxEdit)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.LoadFromEdit(QWhale.Editor.SyntaxEdit)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.ApplyToEdit(QWhale.Editor.SyntaxEdit)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.ISyntaxSettings.ApplyToEdit(QWhale.Editor.SyntaxEdit)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)">
      <summary>Implements <see cref="M:QWhale.Editor.Dialogs.IPersistentSettings.Assign(QWhale.Editor.Dialogs.IPersistentSettings)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Dialogs.SyntaxSettings.GetXmlType">
      <summary>Overridden. See <see cref="M:QWhale.Editor.Dialogs.PersistentSettings.GetXmlType" />.</summary>
    </member>
    <member name="T:QWhale.Editor.DisplayStrings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.DisplayStrings.#ctor(QWhale.Editor.ISyntaxEdit,QWhale.Editor.ISyntaxStrings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.DisplayStrings" />		 class.	</summary></member>
    <member name="QWhale.Editor.DisplayStrings.Current">
      <summary>Implements <see cref="P:System.Collections.IEnumerator.Current" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.Count">
      <summary>Implements <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.IsSynchronized">
      <summary>Implements <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.SyncRoot">
      <summary>Implements <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.CollapsedCount">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.CollapsedCount" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.AllowOutlining">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.AllowOutlining" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.OutlineOptions">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.OutlineOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.WrapMargin">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WrapMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.WordWrap">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WordWrap" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.WrapAtMargin">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WrapAtMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.Delimiters">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.Delimiters" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.DelimiterString">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.DelimiterString" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.DelimTable">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.DelimTable" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.TabStops">
      <summary>Implements <see cref="P:QWhale.Editor.ITabulation.TabStops" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.UseSpaces">
      <summary>Implements <see cref="P:QWhale.Editor.ITabulation.UseSpaces" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.LineTerminator">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.LineTerminator" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.MaxLineWidth">
      <summary>Implements <see cref="P:QWhale.Editor.IDisplayStrings.MaxLineWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.Lines">
      <summary>Implements <see cref="P:QWhale.Editor.IDisplayStrings.Lines" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.Item">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Item(System.Int32)" />.</summary>
    </member>
    <member name="QWhale.Editor.DisplayStrings.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Text" />.</summary>
    </member>
    <member name="P:QWhale.Editor.DisplayStrings.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.CopyTo(System.Array,System.Int32)">
      <summary>Implements <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetEnumerator">
      <summary>Implements <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.MoveNext">
      <summary>Implements <see cref="M:System.Collections.IEnumerator.MoveNext" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Reset">
      <summary>Implements <see cref="M:System.Collections.IEnumerator.Reset" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetCount">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.GetCount" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineLevel(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Int32,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Drawing.Point,System.Drawing.Point,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.UnOutline(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.UnOutline(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.UnOutline">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRange(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRange(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRanges(System.Collections.IList,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRanges(System.Collections.IList,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineRanges(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsExpanded(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsExpanded(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsCollapsed(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsCollapsed(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsVisible(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsVisible(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Collapse(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Collapse(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Expand(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Expand(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.EnsureExpanded(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.EnsureExpanded(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ToggleOutlining">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ToggleOutlining" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ToggleOutlining(System.Collections.IList,QWhale.Syntax.IOutlineRange)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.CollapseToDefinitions">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.CollapseToDefinitions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.FullExpand(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullExpand(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.FullCollapse(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullCollapse(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.FullExpand">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullExpand" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.FullCollapse">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullCollapse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SetOutlineRanges(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SetOutlineRanges(System.Collections.IList,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetOutlineHint(QWhale.Syntax.IOutlineRange)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineHint(QWhale.Syntax.IOutlineRange)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetAllowOutlining">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ResetAllowOutlining" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetOutlineOptions">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ResetOutlineOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.WrapLine(System.Int32,QWhale.Editor.IEditPages,System.Int32@amp;,System.Int32,System.Int32@amp;,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.UpdateWordWrap">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.UpdateWordWrap" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.UpdateWordWrap(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.UpdateWordWrap(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetWrapMargin">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.GetWrapMargin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetWordWrap">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.ResetWordWrap" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetWrapAtMargin">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.ResetWrapAtMargin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsDelimiter(System.String,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.String,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsDelimiter(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.IsDelimiter(System.Char)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Char)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetWord(System.String,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetWord(System.String,System.Int32,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetWord(System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetWord(System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetTextAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetTextAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetTextAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetTextAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetDelimiters">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.ResetDelimiters" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetTabStops">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulation.ResetTabStops" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ResetUseSpaces">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulation.ResetUseSpaces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.TextReader,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.TextReader,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.ApplyWhiteSpace(System.String,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.LinesChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.DisplayPointToPoint(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.DisplayPointToPoint(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.PointToDisplayPoint(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.PointToDisplayPoint(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.PointToDisplayPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.PointToDisplayPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.DisplayPointToPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.DisplayPointToPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetColorData(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.GetColorData(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.GetLexStyle(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IDisplayStrings.GetLexStyle(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.DisplayStrings.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.DrawHeaderEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.DrawHeaderEventArgs.#ctor(System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.DrawHeaderEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.DrawHeaderEventArgs.Tag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawHeaderEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawHeaderEventArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.DrawInfo">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.DrawInfo.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Selection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Style">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Flags">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Line">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.GutterImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawInfo.Page">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.DrawInfo.Init">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.DrawStage">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.DrawStage.Before">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawStage.After">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.DrawState">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.DrawState.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Control">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Selection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.WhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineHighlight">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineSeparator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineBookMark">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.BeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.BeyondEof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Gutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.GutterImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.BookMark">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineNumber">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.OutlineArea">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.OutlineImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.OutlineButton">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineModificator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Spelling">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.Page">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.PageHeader">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.PageBorder">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.LineStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.CodeSnippet">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.DrawState.UserMargin">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.DrawUserMarginEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.DrawUserMarginEventArgs.#ctor(System.String,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.DrawUserMarginEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.DrawUserMarginEventArgs.Line">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditConsts">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditConsts.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditConsts" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOutlineOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultGutterOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeCompletionFlags">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPrintOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSelectionOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultNavigateOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultIndentOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUndoOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSearchOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineStyleOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSelectionMode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultScrollingOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBracesForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBracesBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultArrowBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultArrowForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineBookmarksColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineNumbersForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineNumbersBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineStyleForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineStyleBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPrintHeaderForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultTransparentColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUrlForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultGutterBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultGutterForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultDisabledForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultInfoBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineSeparatorColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineSeparatorLineColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultContentDividerColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHighlightForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHighlightBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultInactiveHighlightForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultInactiveHighlightBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSelectionBorderColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSelectionDragColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMarginForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMarginColumnForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultColumnsIndentForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOutlineForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSpellForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHeaderFontColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerIndentBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineModificatorChangedColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineModificatorSavedColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSyntaxErrorForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSnippetBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageBorderColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUserMarginBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUserMarginForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultReswordForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCommentsForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultStringsForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultDirectivesForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultXmlCommentsForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHtmlTagsForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHyperTextForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultWhiteSpaceForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeSnippetForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeSnippetBackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBracesFontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHeaderFontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUrlFontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCommentsFontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOpenBraces">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultClosingBraces">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCaretSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOutlineText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.ColumnSeparator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultDelimiters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUrlChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSpellDelimiters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultAutoCorrectDelimiters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MailTo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.WWW">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.HTTPProtocol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.FTPProtocol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.GopherProtocol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.FileProtocol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.PageTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.PagesTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DateTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.TimeTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.UserTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.HeaderFontName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageHorzOffset">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageVertOffset">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageMargin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPageMarginSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUserMarginText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.LineTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.CharsTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.TabSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.SpaceSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.EolSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.EofSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.WordWrapSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DottedText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSnippetPattern">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSnippetSelectedPattern">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSnippetEndPattern">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultDropDownCount">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MaxDropDownCount">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMinListBoxWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMinListBoxHeight">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MaxHintWindowWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MaxHintWindowCount">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHintOffsetX">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHintOffsetY">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSpacesInTab">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeCompletionFontSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCodeCompletionFont">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerHeight">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerIndentSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerHitWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerMinWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerUnits">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerFontName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRulerFontSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCaretWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHorzScrollSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultGutterWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultUserMarginWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMarginPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultColumnMarginPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultMarginHitWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultTabStop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultParserDelta">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MaxPaintChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineModificatorWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaltScrollSplitterSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultScrollDeltaRatio">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCompletionStartDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MaxFontSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultSelDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultDragDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOutlineDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBracesDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultHideHintDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultWrapDelta">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultCollasedImageWidth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultColumnSeparator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultRowSeparator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineNumbersStart">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultLineNumbersIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultOutliningIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBookMarkImageIndex">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultWrapImageIndex">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.NavKeys">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPrintHeaderOffsetX">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultPrintHeaderOffsetY">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.MinPageIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.DefaultBorderStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditConsts.WheelDelta">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditorPrintDocument">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditorPrintDocument.#ctor(QWhale.Editor.IPrinting,System.Drawing.Printing.PrinterSettings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditorPrintDocument" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.EditorPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditorPrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditorPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditorPrintDocument.Init(QWhale.Editor.ISyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditorPrintDocument.Init(QWhale.Editor.ISyntaxEdit,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditPage">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditPage.#ctor(QWhale.Editor.EditPages)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditPage" />		 class.	</summary></member>
    <member name="QWhale.Editor.EditPage.StartLine">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.StartLine" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.EndLine">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.EndLine" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Index">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Index" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.PageSize">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.PageSize" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Margins">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Margins" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.PageKind">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.PageKind" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Landscape">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Landscape" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.HorzOffset">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.HorzOffset" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.VertOffset">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.VertOffset" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.IsFirstPage">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.IsFirstPage" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.IsLastPage">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.IsLastPage" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.PrevPage">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.PrevPage" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.NextPage">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.NextPage" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Origin">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Origin" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.BoundsRect">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.BoundsRect" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.ClientRect">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.ClientRect" />.</summary>
    </member>
    <member name="P:QWhale.Editor.EditPage.PageRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.EditPage.PaintRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.EditPage.WhiteSpaceTopRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.EditPage.WhiteSpaceBottomRect">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Header">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Header" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.Footer">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.Footer" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.PaintNumber">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.PaintNumber" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPage.UsePrinterSettings">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPage.UsePrinterSettings" />.</summary>
    </member>
    <member name="P:QWhale.Editor.EditPage.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.PaintMargins(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.Paint(QWhale.Common.IPainter)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.Paint(QWhale.Common.IPainter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.Update">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.Update(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.Invalidate">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.Invalidate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.Assign(QWhale.Editor.IEditPage)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.Assign(QWhale.Editor.IEditPage)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.GetBounds(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPage.GetBounds(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializeLandscape">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializeMargins">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializePageKind">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializePageSize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializeHorzOffset">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPage.ShouldSerializeVertOffset">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditPages">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditPages.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditPages" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.EditPages.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditPages" />		 class.	</summary></member>
    <member name="QWhale.Editor.EditPages.Item">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Item(System.Int32)" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.PageType">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.PageType" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.DefaultPage">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.DefaultPage" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.DisplayWhiteSpace">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.DisplayWhiteSpace" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.BackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.BackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.BorderColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.BorderColor" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Width">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Width" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Height">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Height" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.RulerBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.RulerBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.RulerIndentBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.RulerIndentBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.HorzRuler">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.HorzRuler" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.VertRuler">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.VertRuler" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.RulerUnits">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.RulerUnits" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.RulerOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.RulerOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Rulers">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Rulers" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Count">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Count" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Items">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Items" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.PageKind">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.PageKind" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.ApplyRulerToAllPages">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.ApplyRulerToAllPages" />.</summary>
    </member>
    <member name="QWhale.Editor.EditPages.Transparent">
      <summary>Implements <see cref="P:QWhale.Editor.IEditPages.Transparent" />.</summary>
    </member>
    <member name="P:QWhale.Editor.EditPages.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.EditPages.DrawHeader">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditPages.GetEnumerator">
      <summary>Implements <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.RulerChanged(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.UpdateScroll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.RecalculatePages">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.UpdateRulerAllowDrag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.InitDefaultPageSettings(System.Drawing.Printing.PageSettings)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.InitDefaultPageSettings(System.Drawing.Printing.PageSettings)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Add(QWhale.Editor.IEditPage)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Add(QWhale.Editor.IEditPage)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Remove(QWhale.Editor.IEditPage)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Remove(QWhale.Editor.IEditPage)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Clear">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Update(QWhale.Editor.IEditPage)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Update(QWhale.Editor.IEditPage)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Invalidate(QWhale.Editor.IEditPage)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Update(QWhale.Editor.IEditPage,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Update(QWhale.Editor.IEditPage,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Update">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.Add">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.Add" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageIndexAtPoint(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageIndexAtPoint(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageIndexAtPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageIndexAtPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageIndexAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageIndexAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageIndexAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageIndexAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageIndexAtCursor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageIndexAtCursor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageAtCursor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageAtCursor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageAtPoint(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageAtPoint(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.GetPageAtPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.GetPageAtPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.OnDrawHeader(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.CancelDragging">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.CancelDragging" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetPageType">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetPageType" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetBorderColor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetBorderColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetDisplayWhiteSpace">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetDisplayWhiteSpace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetRulerUnits">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetRulerUnits" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetRulerOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetRulerOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetRulers">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetRulers" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetRulerBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetRulerBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ResetRulerIndentBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditPages.ResetRulerIndentBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializeBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializeBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializeRulerOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializePageKind">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializeRulerBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditPages.ShouldSerializeRulerIndentBackColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditRuler">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditRuler.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditRuler" />		 class.	</summary></member>
    <member name="QWhale.Editor.EditRuler.MarkWidth">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.MarkWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.PageStart">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.PageStart" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.PageWidth">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.PageWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.RulerStart">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.RulerStart" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.RulerWidth">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.RulerWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.Options">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.Units">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.Units" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.IndentBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.IndentBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.Vertical">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.Vertical" />.</summary>
    </member>
    <member name="QWhale.Editor.EditRuler.IsDragging">
      <summary>Implements <see cref="P:QWhale.Editor.IEditRuler.IsDragging" />.</summary>
    </member>
    <member name="E:QWhale.Editor.EditRuler.Change">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#Invalidate">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#Invalidate(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#Update">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#PointToClient(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToClient(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#PointToScreen(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToScreen(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#Focus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Focus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.Assign(QWhale.Editor.IEditRuler)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditRuler.Assign(QWhale.Editor.IEditRuler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.OnChange(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.WndProc(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.CancelDragging">
      <summary>Implements <see cref="M:QWhale.Editor.IEditRuler.CancelDragging" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IEditRuler.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.ResetUnits">
      <summary>Implements <see cref="M:QWhale.Editor.IEditRuler.ResetUnits" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditRuler.ResetIndentBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IEditRuler.ResetIndentBackColor" />.</summary>
    </member>
    <member name="T:QWhale.Editor.EditRulers">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.EditRulers.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditRulers.Horizonal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EditRulers.Vertical">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EditSyntaxPaint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.#ctor(QWhale.Common.IPainter,QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EditSyntaxPaint" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.EditSyntaxPaint.Owner">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.EditSyntaxPaint.Lexer">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.Lexer" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.GetLineStyleAt(System.Int32,System.Int32,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.GetString(System.Int32,System.String@amp;,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.GetFontStyle(System.Drawing.FontStyle,QWhale.Editor.ColorFlags)">
      <summary>Overridden. See <see cref="M:QWhale.Editor.SyntaxPaint.GetFontStyle(System.Drawing.FontStyle,QWhale.Editor.ColorFlags)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.GetFontColor(System.Drawing.Color,QWhale.Editor.ColorFlags)">
      <summary>Overridden. See <see cref="M:QWhale.Editor.SyntaxPaint.GetFontColor(System.Drawing.Color,QWhale.Editor.ColorFlags)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.GetBackColor(System.Drawing.Color,QWhale.Editor.ColorFlags)">
      <summary>Overridden. See <see cref="M:QWhale.Editor.SyntaxPaint.GetBackColor(System.Drawing.Color,QWhale.Editor.ColorFlags)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.PaintLineBookMarks(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EditSyntaxPaint.PaintLineBookMark(QWhale.Common.IPainter,QWhale.Editor.IBookMark,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ErrorBehaviour">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.ErrorBehaviour.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ErrorBehaviour.Message">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ErrorBehaviour.Exception">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.EventHandlers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.EventHandlers.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.EventHandlers" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.EventHandlers.EventNames">
      <summary>Gets</summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.tabifyEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.unTabifyEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.lowerCaseEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.upperCaseEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.capitalizeEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.deleteWhiteSpaceEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.commentSelectionEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.uncommentSelectionEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveCharLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveCharRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveLineUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveLineDownEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveWordLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveWordRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.movePageUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.movePageDownEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveScreenTopEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveScreenBottomEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveLineBeginEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveLineEndEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveFileBeginEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveFileEndEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectCharLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectCharRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectLineUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectLineDownEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectWordLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectWordRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectPageUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectPageDownEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectScreenTopEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectScreenBottomEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectLineBeginEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectLineEndEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectFileBeginEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectFileEndEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectAllEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleBookMarkEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.nextBookMarkEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.prevBookMarkEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.clearBookMarkEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleBookMarkEventEx">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveBookMarkEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleOutliningEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleOutliningSelectionEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.collapseToDefinitionsEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.swapAnchorEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.deleteLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.deleteWordLeftEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.deleteWordRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.deleteRightEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.newLineEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.processEscapeEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.processTabEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.processShiftTabEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleOverwriteEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.undoEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.redoEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.findEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.findNextEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.findPreviousEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.findNextSelectedEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.findPreviousSelectedEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.replaceEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.gotolineEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.initIncrementalSearchEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.initReverseIncrementalSearchEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.cutEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.copyEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.pasteEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.completeWordEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.listMembersEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.quickInfoEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.codeSnippetsEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.parameterInfoEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.formatSelectionEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.formatDocumentEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.charTransposeEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.wordTransposeEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.lineTransposeEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleHiddenTextEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleMatchCaseEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleRegularExpressionsEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleSearchUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleWholeWordEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.scrollLineUpEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.scrollLineDownEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToOpenBraceEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToOpenBraceExtendEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToCloseBraceEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToCloseBraceExtendEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToBraceEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.moveToBraceExtendEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.newLineAboveEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.newLineBelowEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.selectWordEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.lineCutEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.lineDeleteEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.toggleMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.playBackMacro">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.EventHandlers.processKey">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleBookMark(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.GotoNextBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.GotoPrevBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ClearAllBookMarks">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.GotoBookMark(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.DeleteLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.Undo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.Redo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.Find">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.FindNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.FindPrevious">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.FindNextSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.FindPreviousSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.Replace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.GotoLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ProcessEscape">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleHiddenText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleMatchCase">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleRegularExpressions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleSearchUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.ToggleWholeWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectCharLeft(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectCharRight(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectLineUp(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectLineDown(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectWordLeft(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectWordRight(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectPageUp(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectPageDown(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectScreenTop(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectScreenBottom(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectLineBegin(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectLineEnd(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectFileBegin(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectFileEnd(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.SelectAll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.StartReverseIncrementalSearch">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.EventHandlers.PressKey(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ExportFormat">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.ExportFormat.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ExportFormat.Rtf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ExportFormat.Html">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ExportFormat.Xml">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.FmtExporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.FmtExporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.FmtExporter" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.FmtExporter.owner">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.lines">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.writer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.foreColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.backColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.fontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtExporter.firstLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.StartDocument(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.EndDocument">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteForeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteBackColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.RemoveFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.AddFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.StartLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.EndLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteText(System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.ApplyStyle(System.Drawing.FontStyle,System.Drawing.Color,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteLine(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.WriteContent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtExporter.Write(QWhale.Editor.ISyntaxEdit,QWhale.Editor.ISyntaxStrings,System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.FmtFiler">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.FmtFiler.#ctor(QWhale.Editor.ISyntaxEdit,QWhale.Editor.ISyntaxStrings,QWhale.Editor.ExportFormat)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.FmtFiler" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.FmtFiler.Write(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtFiler.Read(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.FmtImporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.FmtImporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.FmtImporter" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.FmtImporter.DefaultStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.FmtImporter.ReadFormattedText">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.FmtImporter.owner">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtImporter.reader">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.FmtImporter.readFormattedArgs">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.Pop(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.Push(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.GetCurrentItem">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.GetCurrentAttributes(System.Drawing.Color@amp;,System.Drawing.Color@amp;,System.Drawing.FontStyle@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.WriteFontStyle(System.Drawing.FontStyle,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.WriteForeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.WriteBackColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.WriteString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.ReadHeader">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.ReadContent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.OnReadFormattedText(System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.FmtImporter.Read(QWhale.Editor.ISyntaxEdit,System.IO.TextReader,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Gutter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Gutter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Gutter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.Gutter.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Gutter" />		 class.	</summary></member>
    <member name="QWhale.Editor.Gutter.Rect">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Rect" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Width">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Width" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Brush">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Brush" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.BrushColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.BrushColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Pen">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Pen" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.PenColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.PenColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersStart">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersStart" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersLeftIndent">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersLeftIndent" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersRightIndent">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersRightIndent" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineNumbersAlignment">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineNumbersAlignment" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.OutliningLeftIndent">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.OutliningLeftIndent" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.OutliningRightIndent">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.OutliningRightIndent" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Options">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.Images">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.Images" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.BookMarkImageIndex">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.BookMarkImageIndex" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.WrapImageIndex">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.WrapImageIndex" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.DrawLineBookmarks">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.DrawLineBookmarks" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.ShowBookmarkHints">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.ShowBookmarkHints" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineBookmarksColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineBookmarksColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineModificatorChangedColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineModificatorChangedColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.LineModificatorSavedColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.LineModificatorSavedColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.UserMarginWidth">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.UserMarginWidth" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.UserMarginForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.UserMarginForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.UserMarginBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.UserMarginBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Gutter.UserMarginText">
      <summary>Implements <see cref="P:QWhale.Editor.IGutter.UserMarginText" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Gutter.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.Gutter.Click">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.Gutter.DoubleClick">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.Gutter.DrawUserMargin">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Gutter.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.Update(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.Assign(QWhale.Editor.IGutter)">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.Assign(QWhale.Editor.IGutter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.OnClick(System.EventArgs)">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.OnClick(System.EventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.OnDrawUserMargin(System.String@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.OnDoubleClick(System.EventArgs)">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.OnDoubleClick(System.EventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetWidth">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetWidth" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetUserMarginWidth">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetUserMarginWidth" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetUserMarginForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetUserMarginForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetUserMarginBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetUserMarginBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetUserMarginText">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetUserMarginText" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetBrushColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetBrushColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetPenColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetPenColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineModificatorChangedColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineModificatorChangedColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineModificatorSavedColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineModificatorSavedColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetVisible">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetVisible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersStart">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersStart" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersLeftIndent">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersLeftIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersRightIndent">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersRightIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineNumbersAlignment">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineNumbersAlignment" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetOutliningLeftIndent">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetOutliningLeftIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetOutliningRightIndent">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetOutliningRightIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetBookMarkImageIndex">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetBookMarkImageIndex" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetWrapImageIndex">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetWrapImageIndex" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetDrawLineBookmarks">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetDrawLineBookmarks" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetLineBookmarksColor">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetLineBookmarksColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ResetShowBookmarkHints">
      <summary>Implements <see cref="M:QWhale.Editor.IGutter.ResetShowBookmarkHints" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeBrushColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializePenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineNumbersForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineNumbersBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineBookmarksColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineModificatorChangedColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineModificatorSavedColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeWidth">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeUserMarginWidth">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeUserMarginForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeUserMarginBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeUserMarginText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineNumbersStart">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineNumbersLeftIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeLineNumbersRightIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeOutliningLeftIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeOutliningRightIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeBookMarkImageIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeWrapImageIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Gutter.ShouldSerializeOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.GutterOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.GutterOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintLineNumbers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintLinesOnGutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintLinesBeyondEof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintBookMarks">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintLineModificators">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.GutterOptions.PaintUserMargin">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HintSyntaxPaint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.#ctor(QWhale.Common.IPainter,System.Windows.Forms.Control)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HintSyntaxPaint" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.HintSyntaxPaint.Strings">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.AddLine(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.TextChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.GetString(System.Int32,System.String@amp;,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HintSyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.HitTest">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.HitTest.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Above">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Below">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Selection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.BeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.BeyondEof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Gutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Margin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.GutterImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.BookMark">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.OutlineArea">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.OutlineImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.OutlineButton">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.LineModificator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.LineNumber">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.HyperText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.Page">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTest.PageWhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HitTestInfo">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.HitTestInfo.HitTest">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Line">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Pos">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Item">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Word">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Url">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.GutterImage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.OutlineRange">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Page">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.Style">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HitTestInfo.ColorFlags">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HitTestInfo.InitHitTestInfo">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HtmlExporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HtmlExporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HtmlExporter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.HtmlExporter.StartDocument(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.EndDocument">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.WriteForeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.WriteBackColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.RemoveFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.AddFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.StartLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlExporter.WriteText(System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HtmlImporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HtmlImporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HtmlImporter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.HtmlImporter.WriteText(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlImporter.ProcessFontTag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlImporter.ProcessTag(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlImporter.ReadContent">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HtmlLexer">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HtmlLexer.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HtmlLexer" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.HtmlLexer.GetStyle(System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlLexer.ReadFormattedText(System.Object,QWhale.Editor.ReadFormattedTextEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlLexer.ParseHtmlText(System.Int32,System.Drawing.FontStyle,System.String@amp;,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HtmlSyntaxPaint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.#ctor(QWhale.Common.IPainter,System.Windows.Forms.Control)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HtmlSyntaxPaint" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.HtmlSyntaxPaint.Provider">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.IsDelimiter(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.AddMultiLine(System.String,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.AddMultiLine(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.AddSubstring(System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HtmlSyntaxPaint.AddLine(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HyperText">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HyperText.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HyperText" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.HyperText.IsEmailString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsWWWString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsHttpString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsFtpString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsGopherString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsFileString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperText.IsHyperText(System.String)">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.HyperTextEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HyperTextEventArgs.#ctor(System.String,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HyperTextEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.HyperTextEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.HyperTextEventArgs.IsHyperText">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.HyperTextEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HyperTextEx.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HyperTextEx" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.HyperTextEx.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.HyperTextEx" />		 class.	</summary></member>
    <member name="QWhale.Editor.HyperTextEx.HighlightUrls">
      <summary>Implements <see cref="P:QWhale.Editor.IHyperText.HighlightUrls" />.</summary>
    </member>
    <member name="QWhale.Editor.HyperTextEx.ShowHints">
      <summary>Implements <see cref="P:QWhale.Editor.IHyperTextEx.ShowHints" />.</summary>
    </member>
    <member name="QWhale.Editor.HyperTextEx.UrlColor">
      <summary>Implements <see cref="P:QWhale.Editor.IHyperTextEx.UrlColor" />.</summary>
    </member>
    <member name="QWhale.Editor.HyperTextEx.UrlStyle">
      <summary>Implements <see cref="P:QWhale.Editor.IHyperTextEx.UrlStyle" />.</summary>
    </member>
    <member name="P:QWhale.Editor.HyperTextEx.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.HyperTextEx.JumpToUrl">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.HyperTextEx.CheckHyperText">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.HyperTextEx.IsHyperText(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperText.IsHyperText(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.IsUrlAtPoint(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.UrlJump(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperTextEx.UrlJump(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.Assign(QWhale.Editor.IHyperTextEx)">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperTextEx.Assign(QWhale.Editor.IHyperTextEx)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ResetHighlightUrls">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperText.ResetHighlightUrls" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ResetShowHints">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperTextEx.ResetShowHints" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ResetUrlColor">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperTextEx.ResetUrlColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ResetUrlStyle">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperTextEx.ResetUrlStyle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ShouldSerializeUrlColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.HyperTextEx.ShouldSerializeUrlStyle">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IAutoCorrect">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IAutoCorrect.AutoCorrectDelimiters">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IAutoCorrect.AutoCorrection">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IAutoCorrect.AutoCorrect">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IAutoCorrect.HasAutoCorrection(System.String,System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IBookMark">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IBookMark.Line">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IBookMark.Pos">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IBookMark.Index">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IBookMark.Position">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IBookMark.Assign(QWhale.Editor.IBookMark)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IBookMarkEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IBookMarkEx.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBookMarkEx.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBookMarkEx.Url">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Editor.IBookMarks">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Editor.IBookMarks.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.Assign(QWhale.Editor.IBookMarks)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GetBookMark(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GetBookMark(System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GetBookMarks(System.Drawing.Point,System.Drawing.Point,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.FindBookMark(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.SetBookMark(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.SetBookMark(System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.SetBookMark(QWhale.Editor.IBookMark)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.SetBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.FindBookMark(System.Int32,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark(QWhale.Editor.IBookMark)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Drawing.Point,System.Int32,System.String,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ToggleBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ClearBookMark(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ClearBookMark(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ClearBookMarks(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.ClearAllBookMarks">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.NextBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GotoBookMark(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GotoNextBookMark">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBookMarks.GotoPrevBookMark">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IBraceMatching">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IBraceMatching.BracesOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBraceMatching.OpenBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBraceMatching.ClosingBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.TempHighlightBraces(System.Drawing.Rectangle[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.TempUnhighlightBraces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.ResetBracesOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.ResetOpenBraces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatching.ResetClosingBraces">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IBraceMatchingEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IBraceMatchingEx.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBraceMatchingEx.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBraceMatchingEx.Style">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IBraceMatchingEx.UseRoundRect">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatchingEx.Assign(QWhale.Editor.IBraceMatchingEx)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatchingEx.ResetForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatchingEx.ResetBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatchingEx.ResetStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IBraceMatchingEx.ResetUseRoundRect">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICaret">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICaret.HideCaret">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.CreateCaret">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.DestroyCaret">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.ShowCaret(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.GetCaretSize(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.DisplayDragCaret">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.HideDragCaret">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICaret.ResetHideCaret">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletion">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletion.CodeCompletionBox">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletion.CodeCompletionHint">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletion.CodeCompletionChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ICodeCompletion.NeedCodeCompletion">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.IsValidText(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.RemovePlainText(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.CompleteWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.ListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.QuickInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.ParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletion.CodeSnippets">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionBox">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletionBox.Columns">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionBox.DropDownCount">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionBox.Filtered">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionBox.Filter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionBox.Sorted">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ICodeCompletionBox.SelectionChanged">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ICodeCompletionBox.ClearColumns">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionBox.AddColumn">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionBox.InsertColumn(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionBox.RemoveColumnAt(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionBox.ResetDropDownCount">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionColumn">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletionColumn.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionColumn.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionColumn.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionColumn.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionColumn.ResetFontStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionColumn.ResetForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionColumn.ResetVisible">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionColumns">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Editor.ICodeCompletionColumns.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionEdit">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletionEdit.EditField">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionEdit.EditPath">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionEdit.EditText">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionHint">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletionHint.AutoHide">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionHint.AutoHidePause">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionHint.ResetAutoHide">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionHint.ResetAutoHidePause">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICodeCompletionWindow">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.Provider">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.Sizeable">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.AutoSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.Images">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.CompletionFlags">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.OwnerControl">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.StartPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.EndPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICodeCompletionWindow.DisplayPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ICodeCompletionWindow.ClosePopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ICodeCompletionWindow.ShowPopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ICodeCompletionWindow.Disposed">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ICodeCompletionWindow.KeyPreviewEvent">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.Popup">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.PopupAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.PopupAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.Close(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.CloseDelayed(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.IsFocused">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.ResetContent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.ResetSizeable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.ResetAutoSize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICodeCompletionWindow.ResetCodeCompletionFlags">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ICollapsable">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ICollapsable.CollapsedCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ICollapsable.UpdateCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ICollapsable.AllowOutlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ICollapsable.OutlineOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.UnOutline(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.UnOutline(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.UnOutline">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.IsExpanded(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.IsCollapsed(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.IsVisible(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.IsVisible(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Collapse(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.Expand(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.FullExpand">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.FullExpand(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.FullCollapse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.FullCollapse(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.ToggleOutlining">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.CollapseToDefinitions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineHint(QWhale.Syntax.IOutlineRange)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.ResetAllowOutlining">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ICollapsable.ResetOutlineOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IDisplayStrings">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IDisplayStrings.Lines">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IDisplayStrings.MaxLineWidth">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.PointToDisplayPoint(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.PointToDisplayPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.DisplayPointToPoint(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.DisplayPointToPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.GetCount">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.GetColorData(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IDisplayStrings.GetLexStyle(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IEdit">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IEdit.Readonly">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEdit.OverWrite">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEdit.Modified">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEdit.SingleLineMode">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEdit.IndentOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEdit.MaxLength">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetReadonly">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetOverWrite">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetModified">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetIndentOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetMaxLength">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEdit.ResetSingleLineMode">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IEditColors">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IEditColors.ReadonlyForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditColors.ReadonlyBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditColors.DisabledForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditColors.DisabledBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Editor.IEditEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IEditEx.Insert(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.InsertFromFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.DeleteRight(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.DeleteLeft(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.InsertBlock(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.InsertBlock(System.String[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.InsertBlock(QWhale.Editor.ISyntaxStrings)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.DeleteBlock(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.BreakLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.UnBreakLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.NewLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.NewLineAbove">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.NewLineBelow">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.IsLineReadonly(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditEx.SetLineReadonly(System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IEditPage">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IEditPage.PageSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Margins">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.PageKind">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Landscape">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.HorzOffset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.VertOffset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.IsFirstPage">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.IsLastPage">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.PrevPage">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.NextPage">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Header">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Footer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Origin">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.BoundsRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.ClientRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.StartLine">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.EndLine">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.Index">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.PaintNumber">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPage.UsePrinterSettings">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.Assign(QWhale.Editor.IEditPage)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.Invalidate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.Paint(QWhale.Common.IPainter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPage.GetBounds(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IEditPages">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IEditPages.Items">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Item(System.Int32)">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.PageType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.PageKind">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.DefaultPage">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.BorderColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.DisplayWhiteSpace">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Count">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Height">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Width">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.VertRuler">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.HorzRuler">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.RulerUnits">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.RulerOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Rulers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.ApplyRulerToAllPages">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.RulerBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.RulerIndentBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditPages.Transparent">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IEditPages.DrawHeader">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IEditPages.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Update(QWhale.Editor.IEditPage)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Update(QWhale.Editor.IEditPage,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Add">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Add(QWhale.Editor.IEditPage)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Remove(QWhale.Editor.IEditPage)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageIndexAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageIndexAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageIndexAtPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageIndexAtPoint(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageIndexAtCursor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageAtPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageAtPoint(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.GetPageAtCursor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.InitDefaultPageSettings(System.Drawing.Printing.PageSettings)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.CancelDragging">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetPageType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetDisplayWhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetRulerUnits">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetRulerOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetRulers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetRulerBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditPages.ResetRulerIndentBackColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IEditRuler">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IEditRuler.IndentBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.Vertical">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.PageStart">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.PageWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.RulerStart">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.RulerWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.MarkWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.Units">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IEditRuler.IsDragging">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Editor.IEditRuler.Change">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IEditRuler.Assign(QWhale.Editor.IEditRuler)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditRuler.CancelDragging">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditRuler.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditRuler.ResetUnits">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IEditRuler.ResetIndentBackColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IExportEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IExportEx.LineTerminator">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Editor.IFmtExport">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IFmtExportEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IFmtExportEx.LineTerminator">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Editor.IFmtImport">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.TextReader,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IGutter">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IGutter.Width">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Brush">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Pen">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.BrushColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.PenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Rect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersStart">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersLeftIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersRightIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineNumbersAlignment">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.OutliningLeftIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.OutliningRightIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.Images">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.BookMarkImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.WrapImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.DrawLineBookmarks">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineBookmarksColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.ShowBookmarkHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineModificatorChangedColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.LineModificatorSavedColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.UserMarginWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.UserMarginForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.UserMarginBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IGutter.UserMarginText">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IGutter.Click">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.IGutter.DoubleClick">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.IGutter.DrawUserMargin">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IGutter.Assign(QWhale.Editor.IGutter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.OnClick(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.OnDoubleClick(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetBrushColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetPenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetVisible">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersStart">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersLeftIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersRightIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineNumbersAlignment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetOutliningLeftIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetOutliningRightIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetBookMarkImageIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetWrapImageIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetDrawLineBookmarks">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineBookmarksColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetShowBookmarkHints">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineModificatorChangedColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetLineModificatorSavedColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetWidth">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetUserMarginWidth">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetUserMarginForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetUserMarginBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IGutter.ResetUserMarginText">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IHyperText">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IHyperText.HighlightUrls">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IHyperText.CheckHyperText">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IHyperText.IsHyperText(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IHyperText.ResetHighlightUrls">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IHyperTextEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IHyperTextEx.ShowHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IHyperTextEx.UrlStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IHyperTextEx.UrlColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IHyperTextEx.JumpToUrl">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IHyperTextEx.Assign(QWhale.Editor.IHyperTextEx)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IHyperTextEx.UrlJump(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IHyperTextEx.ResetUrlStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IHyperTextEx.ResetUrlColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IHyperTextEx.ResetShowHints">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IKeyList">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IKeyList.Handlers">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Remove(System.Windows.Forms.Keys,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Remove(System.Windows.Forms.Keys)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.ExecuteKey(System.Windows.Forms.Keys,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IKeyList.FindKey(System.Windows.Forms.Keys,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ILineSeparator">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ILineSeparator.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineSeparator.HighlightBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineSeparator.HighlightForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineSeparator.LineColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineSeparator.ContentDividerColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.Assign(QWhale.Editor.ILineSeparator)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.NeedHighlight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.NeedHide">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.ResetHighlightForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.ResetHighlightBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.ResetLineColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.ResetContentDividerColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.TempHighlightLine(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineSeparator.TempUnhighlightLine">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ILineStyle">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ILineStyle.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineStyle.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineStyle.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineStyle.PenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineStyle.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ILineStyle.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.Assign(QWhale.Editor.ILineStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.ResetForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.ResetBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.ResetPenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.ResetImageIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyle.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ILineStyles">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ILineStyles.Assign(QWhale.Editor.ILineStyles)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.RemoveLineStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.ToggleLineStyle(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.ToggleLineStyle(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.GetLineStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.GetLineStyles(System.Int32,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Drawing.Point,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStyles.SetLineStyle(QWhale.Common.IRange,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ILineStylesEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ILineStylesEx.Assign(QWhale.Editor.ILineStylesEx)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStylesEx.IndexOfName(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStylesEx.AddLineStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStylesEx.AddLineStyle(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,QWhale.Editor.LineStyleOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ILineStylesEx.GetLineStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IMargin">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IMargin.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.ColumnPositions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.Pen">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.PenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.ColumnPen">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.ColumnPenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.ColumnsVisible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.IsDragging">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.AllowDrag">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IMargin.ShowHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.Assign(QWhale.Editor.IMargin)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.PaintColumn(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetPosition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetColumnPositions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetPenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetVisible">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetColumnsPenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetColumnsVisible">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetAllowDrag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.ResetShowHints">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.CancelDragging">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.Contains(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IMargin.DragTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.INavigate">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.INavigate.NavigateOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.INavigate.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.Navigate(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.MoveTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.MoveTo(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.MoveToChar(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.MoveToLine(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.ValidatePosition(System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.StorePosition(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.RestorePosition(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigate.ResetNavigateOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.INavigateEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.INavigateEx.MoveCharLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveCharRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveWordLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveWordRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineDown">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineBegin">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineBeginCycled">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveLineEndCycled">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveFileBegin">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveFileEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MovePageUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MovePageDown">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveScreenTop">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveScreenBottom">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.ScrollLineUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.ScrollLineDown">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveToOpenBrace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveToCloseBrace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.INavigateEx.MoveToBrace">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IndentOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.IndentOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.IndentOptions.AutoIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.IndentOptions.SmartIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.IndentOptions.UsePrevIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.IndentOptions.JumpToIndent">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IndentOrientation">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.IndentOrientation.Near">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.IndentOrientation.Far">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.INotifyEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.INotifyEx.FirstChanged">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.INotifyEx.LastChanged">
      <summary>Gets</summary>
    </member>
    <member name="T:QWhale.Editor.IOutlining">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IOutlining.OutlineColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IOutlining.Assign(QWhale.Editor.IOutlining)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IOutlining.OutlineText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IOutlining.UnOutlineText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IOutlining.ResetOutlineColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IPageHeader">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IPageHeader.LeftText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.CenterText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.RightText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.FontColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.Offset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPageHeader.ReverseOnEvenPages">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.Assign(QWhale.Editor.IPageHeader)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.ResetFont">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.ResetOffset">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.ResetFontColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.ResetReverseOnEvenPages">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPageHeader.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IPrinting">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IPrinting.PrintDocument">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.PrinterSettings">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.AllowedOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.Header">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.Footer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.PrintDialog">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.PageSetupDialog">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.PrintPreviewDialog">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IPrinting.PrintOptionsDialog">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.IPrinting.CreatePrintEdit">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.IPrinting.Initialized">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IPrinting.Assign(QWhale.Editor.IPrinting)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.Print">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ExecutePrintPreviewDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ExecutePrintDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ExecutePageSetupDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ExecutePrintOptionsDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IPrinting.ResetAllowedOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IRecordPlayBack">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IRecordPlayBack.MacroRecording">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IRecordPlayBack.MacroSuspendend">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IRecordPlayBack.MacroRecords">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.PlayBackMacro">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.StartMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.StopMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.PauseMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.ResumeMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.ToggleMacroRecording">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IScrolling">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IScrolling.ScrollBars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.DefaultHorzScrollSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.WindowOriginX">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.WindowOriginY">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.HScrollBar">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.VScrollBar">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.HasHScrollBar">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.HasVScrollBar">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.HorzButtons">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.VertButtons">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.VertScrollbarVisible">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrolling.HorzScrollbarVisible">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Editor.IScrolling.VerticalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.IScrolling.HorizontalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.IScrolling.ScrollButtonClick">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IScrolling.Assign(QWhale.Editor.IScrolling)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrolling.ResetScrollBars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrolling.ResetDefaultHorzScrollSize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrolling.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IScrollingButton">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IScrollingButton.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrollingButton.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrollingButton.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrollingButton.Images">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrollingButton.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IScrollingButton.BorderStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IScrollingButton.Assign(QWhale.Editor.IScrollingButton)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IScrollingButtons">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.IScrollingButtons.Assign(QWhale.Editor.IScrollingButtons)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrollingButtons.GetScrollingButton(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrollingButtons.AddScrollingButton">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IScrollingButtons.AddScrollingButton(System.String,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISearch">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISearch.InIncrementalSearch">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.IncrementalSearchString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.SearchPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.SearchOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.SearchLen">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.FirstSearch">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.SearchDialog">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISearch.GotoLineDialog">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Find(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.FindNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.FindPrevious">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.FindNextSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.FindPreviousSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.CanFindNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.CanFindPrevious">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.CanFindNextSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.CanFindPreviousSelected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Replace(System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Replace(System.String,System.String,QWhale.Editor.SearchOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.Replace(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.MarkAll(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.MarkAll(System.String,QWhale.Editor.SearchOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.MarkAll(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.NeedReplaceCurrent(System.Text.RegularExpressions.Match@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.ReplaceCurrent(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Match)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.StartIncrementalSearch">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.StartIncrementalSearch(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.FinishIncrementalSearch">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.IncrementalSearch(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.GetTextToSearchAtCursor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.CanSearchSelection(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISearch.ShowNotFound(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISelection">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISelection.UpdateCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.IsEmpty">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.SelectionStart">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.SelectionLength">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.SelectionRect">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.SelectionType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.SelectedText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.InActiveForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.BorderColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.InActiveBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISelection.AllowedSelectionMode">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ISelection.SelectionChanged">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ISelection.Move(System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteWordLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteWordRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CutLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.NewLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.NewLineAbove">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.NewLineBelow">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ProcessEscape">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ProcessTab">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ProcessShiftTab">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ToggleOverWrite">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.InsertString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CharTransponse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.WordTransponse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.LineTransponse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CanDrag(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DragTo(System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ChangeBlock(QWhale.Editor.StringEvent)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ChangeBlock(QWhale.Editor.StringEvent,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectionToTextPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.TextToSelectionPoint(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.IsPosInSelection(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.IsPosInSelection(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.GetSelectionForLine(System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectedCount">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectedString(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetAllowedSelectionMode">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetInActiveForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetInActiveBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ResetBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Assign(QWhale.Editor.ISelection)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectCharLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectCharLeft(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectCharRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectCharRight(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectWordLeft">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectWordLeft(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectWordRight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectWordRight(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineUp(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineDown">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineDown(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectPageUp">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectPageUp(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectPageDown">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectPageDown(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectScreenTop">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectScreenTop(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectScreenBottom">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectScreenBottom(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineBegin">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineBegin(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLineEnd(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectFileBegin">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectFileBegin(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectFileEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectFileEnd(QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectAll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectToOpenBrace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectToCloseBrace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SelectToBrace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CommentSelection">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.UncommentSelection">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SmartFormat">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SmartFormat(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SmartIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SmartFormatBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SmartFormatDocument">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Tabify">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.UnTabify">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Indent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.UnIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.LowerCase">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.UpperCase">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Capitalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.DeleteWhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.ToggleOutlining">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CollapseToDefinitions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.SwapAnchor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CanCopy">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CanCut">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.CanPaste">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Copy">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Cut">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Paste">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Delete">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISelection.Clear">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISourceNotify">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISourceNotify.State">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ISourceNotify.BeginUpdate(QWhale.Syntax.UpdateReason)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISourceNotify.LinesChanged(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISourceNotify.LinesChanged(System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISpelling">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISpelling.CheckSpelling">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ISpelling.WordSpell">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ISpelling.IsWordCorrect(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISpelling.ResetCheckSpelling">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISpellingEx">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISpellingEx.SpellColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ISpellingEx.Assign(QWhale.Editor.ISpellingEx)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISpellingEx.ResetSpellColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISplitView">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISplitView.VertSplitEdit">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISplitView.HorzSplitEdit">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISplitView.VertSplitter">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISplitView.HorzSplitter">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Editor.ISplitView.SplitHorz">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ISplitView.SplitVert">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ISplitView.UnsplitHorz">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ISplitView.UnsplitVert">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ISplitView.CanSplitHorz">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.CanSplitVert">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.CanUnsplitHorz">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.CanUnsplitVert">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.SplitViewHorz">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.SplitViewVert">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.UnsplitViewHorz">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISplitView.UnsplitViewVert">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IStrItem">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IStrItem.String">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IStrItem.ColorData">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IStrItem.State">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IStrItem.LexState">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IStrItem.PrevLexState">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IStrItem.SetColorFlag(System.Int32,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IStrItem.GetColorFlag(System.Int32,QWhale.Editor.ColorFlags@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISyntaxEdit">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Source">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Lines">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.DisplayLines">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Selection">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Gutter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.EditMargin">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Painter">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.KeyList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.LineStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Printing">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.WhiteSpace">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.LineSeparator">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Outlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Braces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.HyperText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Spelling">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Scrolling">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Pages">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.AcceptTabs">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.AcceptReturns">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.BorderStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.BorderColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.ClientRect">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.Transparent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.SyntaxErrorsHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.UseDefaultMenu">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.DrawColumnsIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxEdit.ColumnsIndentForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ISyntaxEdit.SourceStateChanged">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ISyntaxEdit.ModifiedChanged">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.ISyntaxEdit.PaintBackground">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ScreenToText(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.TextToScreen(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ScreenToText(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.TextToScreen(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ScreenToDisplay(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplayToScreen(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.MoveCaretOnDrag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.MakeVisible(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.MakeVisible(System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ShowScrollHint(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.HideScrollHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.CharsInWidth">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.CharsInWidth(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.LinesInHeight">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.LinesInHeight(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.GetHitTest(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.GetHitTest(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.GetHitTestAtTextPoint(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.GetHitTestAtTextPoint(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.GetTextAtCursor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplayGotoLineDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplaySearchDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplayReplaceDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplayEditorSettingsDialog(QWhale.Editor.Dialogs.EditorSettingsTab)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.DisplayEditorSettingsDialog">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ProcessKeyPress(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetAcceptTabs">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetAcceptReturns">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetBorderStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetSyntaxErrorsHints">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetDrawColumnsIndent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxEdit.ResetColumnsIndentForeColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISyntaxPaint">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISyntaxPaint.DisableColorPaint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxPaint.DisableSyntaxPaint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxPaint.Lexer">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.ISyntaxPaint.CustomDraw">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.ResetDisableColorPaint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxPaint.ResetDisableSyntaxPaint">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ISyntaxStrings">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ISyntaxStrings.Source">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.ISyntaxStrings.Item">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Editor.ISyntaxStrings.RemoveTrailingSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Add(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Contains(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.IndexOf(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Insert(System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Remove(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.RemoveAt(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.GetItem(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.GetLength(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Changed(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.Changed(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.ToArrayList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.ToStringArray">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.GetCharAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.GetCharAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.GetLexStyle(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.AfterSave">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.TextPointToAbsolutePosition(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ISyntaxStrings.AbsolutePositionToTextPoint(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ITabulation">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ITabulation.TabStops">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITabulation.UseSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.ITabulation.ResetTabStops">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulation.ResetUseSpaces">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ITabulationEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ITabulationEx.GetTabString(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulationEx.GetTabStop(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulationEx.GetPrevTabStop(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulationEx.GetIndentString(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulationEx.TabPosToPos(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITabulationEx.PosToTabPos(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ITextSearch">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ITextSearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ITextSource">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.ITextSource.FileName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.Edits">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.Lines">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.Text">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.LineStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.BookMarks">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.ActiveEdit">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.Lexer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.ITextSource.ParserLine">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.TextPointToAbsolutePosition(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.AbsolutePositionToTextPoint(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.GetCharIndexFromPosition(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.GetPositionFromCharIndex(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.ParseString(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.ParseStrings(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.ParseToString(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.NeedParse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.FormatText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.SetColorFlag(System.Drawing.Point,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ITextSource.CreateStrItem(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ITrackChanges">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ITrackChanges.IsLineModified(System.Int32,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IUndo">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IUndo.UndoOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IUndo.UndoLimit">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IUndo.UndoUpdateCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IUndo.UndoList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IUndo.RedoList">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.Undo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.Undo(QWhale.Editor.UndoData)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.Redo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.CanUndo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.CanRedo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.ClearUndo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.ClearRedo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.DisableUndo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.EnableUndo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.BeginUndoUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.EndUndoUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.ResetUndoOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IUndo.ResetUndoLimit">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IWhiteSpace">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IWhiteSpace.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.TabSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.SpaceSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.EolSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.EofSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.WordWrapSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.SpaceString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.TabString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.EolString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.EofString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.WordWrapString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.IWhiteSpace.SymbolColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.Assign(QWhale.Editor.IWhiteSpace)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetVisible">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetTabSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetSpaceSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetEolSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetEofSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetWordWrapSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWhiteSpace.ResetSymbolColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IWordBreak">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IWordBreak.Delimiters">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWordBreak.DelimiterString">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWordBreak.DelimTable">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.IsDelimiter(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.GetWord(System.String,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.GetWord(System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.GetTextAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.GetTextAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordBreak.ResetDelimiters">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.IWordWrap">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Editor.IWordWrap.WordWrap">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWordWrap.WrapAtMargin">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.IWordWrap.WrapMargin">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.IWordWrap.UpdateWordWrap">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordWrap.UpdateWordWrap(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordWrap.GetWrapMargin">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordWrap.ResetWordWrap">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.IWordWrap.ResetWrapAtMargin">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.KeyEventType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.KeyEventType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyEventType.IntParam">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyEventType.CharParam">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyEventType.SelectionParam">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.KeyList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.KeyList.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.KeyList" />		 class.	</summary></member>
    <member name="QWhale.Editor.KeyList.Handlers">
      <summary>Implements <see cref="P:QWhale.Editor.IKeyList.Handlers" />.</summary>
    </member>
    <member name="P:QWhale.Editor.KeyList.EventData">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Add(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEventEx,System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.AddNormal(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Remove(System.Windows.Forms.Keys,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Remove(System.Windows.Forms.Keys,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Remove(System.Windows.Forms.Keys)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Remove(System.Windows.Forms.Keys)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.Clear">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.FindKey(System.Windows.Forms.Keys,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.FindKey(System.Windows.Forms.Keys,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.KeyList.ExecuteKey(System.Windows.Forms.Keys,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IKeyList.ExecuteKey(System.Windows.Forms.Keys,System.Int32@amp;)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.KeyListData">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.KeyListData.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.KeyListData" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.KeyListData.#ctor(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.KeyListData" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.KeyListData.EventName">
      <summary>Gets or sets</summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.KeyData">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.Param">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.State">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.LeaveState">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.ActionEx">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyListData.Action">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.KeyListData.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.KeyPreviewEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.KeyPreviewEventArgs.#ctor(System.Windows.Forms.Message)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.KeyPreviewEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.KeyPreviewEventArgs.Message">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.KeyPreviewEventArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.LineSeparator">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.LineSeparator.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineSeparator" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LineSeparator.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineSeparator" />		 class.	</summary></member>
    <member name="QWhale.Editor.LineSeparator.Options">
      <summary>Implements <see cref="P:QWhale.Editor.ILineSeparator.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.LineSeparator.HighlightBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineSeparator.HighlightBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.LineSeparator.HighlightForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineSeparator.HighlightForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.LineSeparator.LineColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineSeparator.LineColor" />.</summary>
    </member>
    <member name="QWhale.Editor.LineSeparator.ContentDividerColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineSeparator.ContentDividerColor" />.</summary>
    </member>
    <member name="P:QWhale.Editor.LineSeparator.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.Assign(QWhale.Editor.ILineSeparator)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.Assign(QWhale.Editor.ILineSeparator)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.NeedHighlight">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.NeedHighlight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.NeedHide">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.NeedHide" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.TempHighlightLine(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.TempHighlightLine(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.TempUnhighlightLine">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.TempUnhighlightLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ResetHighlightBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.ResetHighlightBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ResetHighlightForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.ResetHighlightForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ResetLineColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.ResetLineColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ResetContentDividerColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.ResetContentDividerColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.ILineSeparator.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ShouldSerializeHighlightBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ShouldSerializeHighlightForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ShouldSerializeLineColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineSeparator.ShouldSerializeContentDividerColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.LineStyle">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.LineStyle.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStyle" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LineStyle.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStyle" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LineStyle.#ctor(QWhale.Editor.SyntaxEdit,System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,QWhale.Editor.LineStyleOptions)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStyle" />		 class.	</summary></member>
    <member name="QWhale.Editor.LineStyle.Name">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.Name" />.</summary>
    </member>
    <member name="QWhale.Editor.LineStyle.ForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.ForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.LineStyle.BackColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.BackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.LineStyle.PenColor">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.PenColor" />.</summary>
    </member>
    <member name="P:QWhale.Editor.LineStyle.ForeColorString">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.LineStyle.BackColorString">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.LineStyle.PenColorString">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.LineStyle.ImageIndex">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.ImageIndex" />.</summary>
    </member>
    <member name="QWhale.Editor.LineStyle.Options">
      <summary>Implements <see cref="P:QWhale.Editor.ILineStyle.Options" />.</summary>
    </member>
    <member name="P:QWhale.Editor.LineStyle.Owner">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.Assign(QWhale.Editor.ILineStyle)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.Assign(QWhale.Editor.ILineStyle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.GetBackColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.GetForeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ResetBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.ResetBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ResetForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.ResetForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ResetPenColor">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.ResetPenColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ResetImageIndex">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyle.ResetImageIndex" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ShouldSerializeForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ShouldSerializeBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ShouldSerializePenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyle.ShouldSerializeOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.LineStyleOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.LineStyleOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.LineStyleOptions.BeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.LineStyleOptions.InvertColors">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.LineStyles">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.LineStyles.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStyles" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LineStyles.#ctor(QWhale.Editor.ITextSource)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStyles" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.LineStyles.styleComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.LineStyles.lineStyleComparer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.Assign(QWhale.Editor.ILineStyles)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.Assign(QWhale.Editor.ILineStyles)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.NewLineStyle(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Common.IRange)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.UpdatePosition(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Editor.BookMark)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.RemoveLineAt(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.SetLineStyle(System.Drawing.Point,QWhale.Common.IRange,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.GetLineStyle(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.GetLineStyle(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.GetLineStyles(System.Int32,System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.GetLineStyles(System.Int32,System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.SetLineStyle(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.SetLineStyle(QWhale.Common.IRange,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.SetLineStyle(QWhale.Common.IRange,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.SetLineStyle(System.Drawing.Point,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Drawing.Point,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.SetLineStyle(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.SetLineStyle(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.RemoveLineStyle(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.RemoveLineStyle(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.ToggleLineStyle(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.ToggleLineStyle(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.ToggleLineStyle(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStyles.ToggleLineStyle(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStyles.GetLStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.LineStylesEx">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.LineStylesEx.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LineStylesEx" />		 class.	</summary></member>
    <member name="QWhale.Editor.LineStylesEx.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Editor.LineStylesEx.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.Assign(QWhale.Editor.ILineStylesEx)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStylesEx.Assign(QWhale.Editor.ILineStylesEx)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.GetLineStyle(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStylesEx.GetLineStyle(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.IndexOfName(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStylesEx.IndexOfName(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.AddLineStyle">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStylesEx.AddLineStyle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.AddLineStyle(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,QWhale.Editor.LineStyleOptions)">
      <summary>Implements <see cref="M:QWhale.Editor.ILineStylesEx.AddLineStyle(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Color,System.Int32,QWhale.Editor.LineStyleOptions)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.Add(QWhale.Editor.LineStyle)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.LineStylesEx.AddRange(QWhale.Editor.LineStyle[])">
      <summary>Overridden. See <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.LStyle">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.LStyle.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LStyle" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LStyle.#ctor(System.Int32,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LStyle" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.LStyle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Common.IRange)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.LStyle" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.LStyle.Range">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.LStyle.LineRange">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.LStyle.Priority">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.LStyle.Assign(QWhale.Editor.LStyle)">
      <summary>Implements <see cref="M:QWhale.Editor.IBookMark.Assign(QWhale.Editor.IBookMark)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.MacroKeyListData">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.MacroKeyListData.#ctor(System.Windows.Forms.Keys,QWhale.Editor.KeyEvent,QWhale.Editor.KeyEventEx,System.Object,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.MacroKeyListData" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.MacroKeyListData.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.MacroKeyListData" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.MacroKeyListData.ParamType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.MacroKeyListData.ParamStr">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.MacroKeyListData.FullName">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.MacroKeyListData.Fixup(QWhale.Editor.ISyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Margin">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Margin.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Margin" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.Margin.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Margin" />		 class.	</summary></member>
    <member name="QWhale.Editor.Margin.Position">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.Position" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.ColumnPositions">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.ColumnPositions" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.Pen">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.Pen" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.ColumnPen">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.ColumnPen" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.ColumnsVisible">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.ColumnsVisible" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.PenColor">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.PenColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.ColumnPenColor">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.ColumnPenColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.AllowDrag">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.AllowDrag" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.ShowHints">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.ShowHints" />.</summary>
    </member>
    <member name="QWhale.Editor.Margin.IsDragging">
      <summary>Implements <see cref="P:QWhale.Editor.IMargin.IsDragging" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Margin.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Margin.Assign(QWhale.Editor.IMargin)">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.Assign(QWhale.Editor.IMargin)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.Contains(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.Contains(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.DragTo(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.DragTo(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.CancelDragging">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.CancelDragging" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.PaintColumn(QWhale.Common.IPainter,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.PaintColumn(QWhale.Common.IPainter,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetPenColor">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetPenColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetColumnsPenColor">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetColumnsPenColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetPosition">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetPosition" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetColumnPositions">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetColumnPositions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetVisible">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetVisible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetColumnsVisible">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetColumnsVisible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetAllowDrag">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetAllowDrag" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ResetShowHints">
      <summary>Implements <see cref="M:QWhale.Editor.IMargin.ResetShowHints" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ShouldSerializePosition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ShouldSerializeColumnPositions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ShouldSerializePenColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Margin.ShouldSerializeColumnPenColor">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.NavigateOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.NavigateOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.BeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.BeyondEof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.UpAtLineBegin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.DownAtLineEnd">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.MoveOnRightButton">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NavigateOptions.LeaveCaretOnStringsChanged">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.NotifyEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.NotifyEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.NotifyEventArgs" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.NotifyEventArgs.#ctor(QWhale.Editor.NotifyState,System.Int32,System.Int32,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.NotifyEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.NotifyEventArgs.State">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyEventArgs.FirstChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyEventArgs.LastChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyEventArgs.Update">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.NotifyState">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.NotifyState.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.PositionChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.CountChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.OverWriteChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.ModifiedChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.SyntaxChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.ReadonlyChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.BlockChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.BookMarkChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.IncrementalSearchChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.SearcRectChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.Undo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.Edit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.Modified">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.Outline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.WordWrap">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.GotoBookMark">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.SelectBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.FirstSearchChanged">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.CenterLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.TextParsed">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.SmartFormat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.NotifyState.StringsChanged">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.OutlineOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.OutlineOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.OutlineOptions.DrawOnGutter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.OutlineOptions.DrawLines">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.OutlineOptions.DrawButtons">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.OutlineOptions.ShowHints">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Outlining">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Outlining.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Outlining" />		 class.	</summary></member>
    <member name="QWhale.Editor.Outlining.CollapsedCount">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.CollapsedCount" />.</summary>
    </member>
    <member name="QWhale.Editor.Outlining.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.Outlining.AllowOutlining">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.AllowOutlining" />.</summary>
    </member>
    <member name="QWhale.Editor.Outlining.OutlineOptions">
      <summary>Implements <see cref="P:QWhale.Editor.ICollapsable.OutlineOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.Outlining.OutlineColor">
      <summary>Implements <see cref="P:QWhale.Editor.IOutlining.OutlineColor" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Outlining.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Int32,System.Int32,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Int32,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Int32,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Outline(System.Drawing.Point,System.Drawing.Point,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Outline(System.Drawing.Point,System.Drawing.Point,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.UnOutline(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.UnOutline(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.UnOutline">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.UnOutline" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRange(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRange(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRange(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRanges(System.Collections.IList,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRanges(System.Collections.IList,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineRanges(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineRanges(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.SetOutlineRanges(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.SetOutlineRanges(System.Collections.IList,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.SetOutlineRanges(System.Collections.IList,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.IsExpanded(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsExpanded(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.IsCollapsed(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsCollapsed(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.IsVisible(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsVisible(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.IsVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.IsVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Collapse(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Collapse(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Expand(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.Expand(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.EnsureExpanded(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.EnsureExpanded(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EnsureExpanded(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.FullExpand">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullExpand" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.FullCollapse">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullCollapse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.FullExpand(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullExpand(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.FullCollapse(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.FullCollapse(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.OutlineText">
      <summary>Implements <see cref="M:QWhale.Editor.IOutlining.OutlineText" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.UnOutlineText">
      <summary>Implements <see cref="M:QWhale.Editor.IOutlining.UnOutlineText" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ToggleOutlining">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ToggleOutlining" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.CollapseToDefinitions">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.CollapseToDefinitions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.GetOutlineHint(QWhale.Syntax.IOutlineRange)">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.GetOutlineHint(QWhale.Syntax.IOutlineRange)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.Assign(QWhale.Editor.IOutlining)">
      <summary>Implements <see cref="M:QWhale.Editor.IOutlining.Assign(QWhale.Editor.IOutlining)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ResetAllowOutlining">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ResetAllowOutlining" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ResetOutlineOptions">
      <summary>Implements <see cref="M:QWhale.Editor.ICollapsable.ResetOutlineOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ResetOutlineColor">
      <summary>Implements <see cref="M:QWhale.Editor.IOutlining.ResetOutlineColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ShouldSerializeOutlineColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Outlining.ShouldSerializeOutlineOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.PageHeader">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.PageHeader.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.PageHeader" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.PageHeader.#ctor(QWhale.Editor.IEditPage)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.PageHeader" />		 class.	</summary></member>
    <member name="QWhale.Editor.PageHeader.LeftText">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.LeftText" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.CenterText">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.CenterText" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.RightText">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.RightText" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.FontColor">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.FontColor" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.Font">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.Font" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.Offset">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.Offset" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.PageHeader.ReverseOnEvenPages">
      <summary>Implements <see cref="P:QWhale.Editor.IPageHeader.ReverseOnEvenPages" />.</summary>
    </member>
    <member name="P:QWhale.Editor.PageHeader.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.GetTextToPaint(System.String,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.Update">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.Paint(QWhale.Common.IPainter,System.Drawing.Rectangle,System.Int32,System.Int32,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.Assign(QWhale.Editor.IPageHeader)">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.Assign(QWhale.Editor.IPageHeader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ResetFont">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.ResetFont" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ResetFontColor">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.ResetFontColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ResetOffset">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.ResetOffset" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ResetReverseOnEvenPages">
      <summary>Implements <see cref="M:QWhale.Editor.IPageHeader.ResetReverseOnEvenPages" />.</summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeFontColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeOffset">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeLeftText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeRightText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeCenterText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.PageHeader.ShouldSerializeFont">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.PageType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.PageType.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PageType.PageBreaks">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PageType.PageLayout">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.PositionChangedEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.PositionChangedEventArgs.#ctor(QWhale.Syntax.UpdateReason,System.Int32,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.PositionChangedEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.PositionChangedEventArgs.Reason">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PositionChangedEventArgs.DeltaX">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PositionChangedEventArgs.DeltaY">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Printing">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Printing.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Printing" />		 class.	</summary></member>
    <member name="QWhale.Editor.Printing.PrinterSettings">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PrinterSettings" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.PrintDocument">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PrintDocument" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.Options">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.Header">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.Header" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.Footer">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.Footer" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.PrintDialog">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PrintDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.PageSetupDialog">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PageSetupDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.PrintPreviewDialog">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PrintPreviewDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.PrintOptionsDialog">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.PrintOptionsDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.Printing.AllowedOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IPrinting.AllowedOptions" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Printing.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.Printing.CreatePrintEdit">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.Printing.Initialized">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Printing.OnCreatePrintEdit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Printing.OnInitialized">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Printing.Print">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.Print" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ExecutePrintDialog">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ExecutePrintDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ExecutePageSetupDialog">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ExecutePageSetupDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ExecutePrintPreviewDialog">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ExecutePrintPreviewDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ExecutePrintOptionsDialog">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ExecutePrintOptionsDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.Assign(QWhale.Editor.IPrinting)">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.Assign(QWhale.Editor.IPrinting)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ResetAllowedOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IPrinting.ResetAllowedOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ShouldSerializeOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Printing.ShouldSerializeAllowedOptions">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.PrintOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.PrintOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.LineNumbers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.PageNumbers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.WordWrap">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.PrintSelection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.UseColors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.UseSyntax">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.UseHeader">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.UseFooter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.PrintOptions.DisplayProgress">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.ReadFormattedTextEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ReadFormattedTextEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.ReadFormattedTextEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.ReadFormattedTextEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ReadFormattedTextEventArgs.ForeColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ReadFormattedTextEventArgs.BackColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ReadFormattedTextEventArgs.FontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ReadFormattedTextEventArgs.UserData">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Resources">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Resources.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Resources" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.Resources.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Resources" />		 class.	</summary></member>
    <member name="T:QWhale.Editor.RtfExporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.RtfExporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.RtfExporter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.RtfExporter.ColorToRtf(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.StartDocument(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.EndDocument">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.WriteForeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.WriteBackColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.RemoveFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.AddFontStyle(System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.StartLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RtfExporter.WriteText(System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.RtfImporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.RtfImporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.RtfImporter" />		 class.	</summary></member>
    <member name="T:QWhale.Editor.RulerEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.RulerEventArgs.#ctor(System.Object)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.RulerEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.RulerEventArgs.Object">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.RulerIndent">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.RulerIndent.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.RulerIndent" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.RulerIndent.#ctor(QWhale.Editor.IndentOrientation,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.RulerIndent" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.RulerIndent.Indent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.RulerIndent.Dragging">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.RulerIndent.Orientation">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.RulerIndent.CancelDragging">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.RulerIndent.DrawIndent(System.Drawing.Graphics,System.Drawing.Rectangle,System.Boolean,System.Drawing.Color,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.RulerOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.RulerOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerOptions.Discrete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerOptions.AllowDrag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerOptions.DisplayDragLine">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.RulerUnits">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.RulerUnits.Milimeters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerUnits.Inches">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerUnits.Pixels">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.RulerUnits.Characters">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Scrolling">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Scrolling.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Scrolling" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.Scrolling.Edit">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.ScrollBars">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.ScrollBars" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.DefaultHorzScrollSize">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.DefaultHorzScrollSize" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.WindowOriginY">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.WindowOriginY" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.WindowOriginX">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.WindowOriginX" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.Options">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.VScrollBar">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.VScrollBar" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.HScrollBar">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.HScrollBar" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.HasHScrollBar">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.HasHScrollBar" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.HasVScrollBar">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.HasVScrollBar" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.VertScrollbarVisible">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.VertScrollbarVisible" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.HorzScrollbarVisible">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.HorzScrollbarVisible" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.HorzButtons">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.HorzButtons" />.</summary>
    </member>
    <member name="QWhale.Editor.Scrolling.VertButtons">
      <summary>Implements <see cref="P:QWhale.Editor.IScrolling.VertButtons" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Scrolling.HorizontalButtons">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.Scrolling.VerticalButtons">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.Scrolling.VertSplitButton">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.Scrolling.HorzSplitButton">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.Scrolling.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.Scrolling.VerticalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.Scrolling.HorizontalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.Scrolling.ScrollButtonClick">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Scrolling.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.CanSplitVert">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.CanSplitHorz">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.RepositionScrollBars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.UpdateScrollSize(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.UpdateScrollPosition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.SplitterMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.CreateSplitterButton(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.UpdateScrollSplitters(System.Boolean,System.Drawing.Rectangle@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.UpdateScrollButtons(QWhale.Editor.IScrollingButtons,System.Boolean,System.Drawing.Rectangle@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.OnVerticalScroll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.OnHorizontalScroll">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.vScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.hScrollBar_Scroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.Assign(QWhale.Editor.IScrolling)">
      <summary>Implements <see cref="M:QWhale.Editor.IScrolling.Assign(QWhale.Editor.IScrolling)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.ResetDefaultHorzScrollSize">
      <summary>Implements <see cref="M:QWhale.Editor.IScrolling.ResetDefaultHorzScrollSize" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.ResetScrollBars">
      <summary>Implements <see cref="M:QWhale.Editor.IScrolling.ResetScrollBars" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IScrolling.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.ShouldSerializeOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Scrolling.ShouldSerializeDefaultHorzScrollSize">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ScrollingButton">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ScrollingButton.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.ScrollingButton" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.ScrollingButton.Owner">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.Name">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.Name" />.</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.ImageIndex">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.ImageIndex" />.</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.Images">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.Images" />.</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.Description">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.Description" />.</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.ScrollingButton.BorderStyle">
      <summary>Implements <see cref="P:QWhale.Editor.IScrollingButton.BorderStyle" />.</summary>
    </member>
    <member name="P:QWhale.Editor.ScrollingButton.Button">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.button_MouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.button_MouseLeave(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.CreateButton">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.Assign(QWhale.Editor.IScrollingButton)">
      <summary>Implements <see cref="M:QWhale.Editor.IScrollingButton.Assign(QWhale.Editor.IScrollingButton)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButton.ShouldSerializeDescription">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ScrollingButtons">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ScrollingButtons.#ctor(QWhale.Editor.IScrolling)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.ScrollingButtons" />		 class.	</summary></member>
    <member name="QWhale.Editor.ScrollingButtons.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.RemoveAt(System.Int32)">
      <summary>Implements <see cref="M:System.Collections.IList.RemoveAt(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.Clear">
      <summary>Implements <see cref="M:System.Collections.IList.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.Add(System.Object)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.Assign(QWhale.Editor.IScrollingButtons)">
      <summary>Implements <see cref="M:QWhale.Editor.IScrollingButtons.Assign(QWhale.Editor.IScrollingButtons)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.Add(QWhale.Editor.ScrollingButton)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.AddRange(QWhale.Editor.ScrollingButton[])">
      <summary>Overridden. See <see cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.AddScrollingButton">
      <summary>Implements <see cref="M:QWhale.Editor.IScrollingButtons.AddScrollingButton" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.AddScrollingButton(System.String,System.String,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IScrollingButtons.AddScrollingButton(System.String,System.String,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.ScrollingButtons.GetScrollingButton(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IScrollingButtons.GetScrollingButton(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Editor.ScrollingOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.ScrollingOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.SmoothScroll">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.ShowScrollHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.UseScrollDelta">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.SystemScrollbars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.FlatScrollbars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.AllowSplitHorz">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.AllowSplitVert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.HorzButtons">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.ScrollingOptions.VertButtons">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.ScrollSplitter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.ScrollSplitter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.ScrollSplitter" />		 class.	</summary></member>
    <member name="T:QWhale.Editor.SearchOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SearchOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.CaseSensitive">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.WholeWordsOnly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.RegularExpressions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.BackwardSearch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.SelectionOnly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.EntireScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.SearchHiddenText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.FindTextAtCursor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.PromptOnReplace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.FindSelectedText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.CycledSearch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SearchOptions.SilentSearch">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Selection">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Selection.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Selection" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.Selection.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Selection" />		 class.	</summary></member>
    <member name="QWhale.Editor.Selection.IsEmpty">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.IsEmpty" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Selection.SelectionState">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.Selection.SelectionStart">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.SelectionStart" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.SelectionLength">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.SelectionLength" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Selection.SelectedColorData">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.Selection.SelectedText">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.SelectedText" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.SelectionRect">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.SelectionRect" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.SelectionType">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.SelectionType" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.Options">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.Options" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.AllowedSelectionMode">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.AllowedSelectionMode" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.ForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.ForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.BackColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.BackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.InActiveForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.InActiveForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.InActiveBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.InActiveBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.Selection.BorderColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISelection.BorderColor" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Selection.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.Selection.SelectionChanged">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Selection.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.WriteToClipboard">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CanSelectBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.UpdateSelRect(QWhale.Editor.SelectionType@amp;,QWhale.Editor.SelectionType,System.Drawing.Rectangle@amp;,System.Drawing.Rectangle,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartFormat(System.Boolean,System.Boolean,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Assign(QWhale.Editor.ISelection)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Assign(QWhale.Editor.ISelection)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ChangeBlock(QWhale.Editor.StringEvent)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ChangeBlock(QWhale.Editor.StringEvent)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ChangeBlock(QWhale.Editor.StringEvent,System.Boolean,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ChangeBlock(QWhale.Editor.StringEvent,System.Boolean,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.GetSelectionForLine(System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.GetSelectionForLine(System.Int32,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.IsPosInSelection(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.IsPosInSelection(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.IsPosInSelection(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.IsPosInSelection(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Clear">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Move(System.Drawing.Point,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Move(System.Drawing.Point,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Point,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SetSelection(QWhale.Editor.SelectionType,System.Drawing.Point,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectCharLeft">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectCharLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectCharRight">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectCharRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectWordLeft">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectWordLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectWordRight">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectWordRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineUp">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineDown">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineDown" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectPageUp">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectPageUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectPageDown">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectPageDown" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectScreenTop">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectScreenTop" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectScreenBottom">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectScreenBottom" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineBegin">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineBegin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineEnd">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineEnd" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectFileBegin">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectFileBegin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectFileEnd">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectFileEnd" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLine">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectWord">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectWord" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectCurrentWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectNextWord">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectAll">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectAll" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectCharLeft(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectCharLeft(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectCharRight(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectCharRight(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectWordLeft(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectWordLeft(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectWordRight(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectWordRight(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineUp(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineUp(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineDown(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineDown(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectPageUp(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectPageUp(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectPageDown(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectPageDown(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectScreenTop(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectScreenTop(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectScreenBottom(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectScreenBottom(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineBegin(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineBegin(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectLineEnd(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectLineEnd(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectFileBegin(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectFileBegin(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectFileEnd(QWhale.Editor.SelectionType)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectFileEnd(QWhale.Editor.SelectionType)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectToOpenBrace">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectToOpenBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectToCloseBrace">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectToCloseBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectToBrace">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectToBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CommentSelection">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CommentSelection" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.UncommentSelection">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.UncommentSelection" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartIndent">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SmartIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartFormatBlock">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SmartFormatBlock" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartFormat">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SmartFormat" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartFormat(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SmartFormat(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SmartFormatDocument">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SmartFormatDocument" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Tabify">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Tabify" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.UnTabify">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.UnTabify" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Indent">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Indent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.UnIndent">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.UnIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.LowerCase">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.LowerCase" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.UpperCase">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.UpperCase" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Capitalize">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Capitalize" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteWhiteSpace">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteWhiteSpace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ToggleOutlining">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ToggleOutlining" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CollapseToDefinitions">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CollapseToDefinitions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SwapAnchor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SwapAnchor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CanCopy">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CanCopy" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CanCut">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CanCut" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CanPaste">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CanPaste" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Copy">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Copy" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Cut">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Cut" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Paste">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Paste" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.Delete">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.Delete" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CanDrag(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CanDrag(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DragTo(System.Drawing.Point,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DragTo(System.Drawing.Point,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectionToTextPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectionToTextPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.TextToSelectionPoint(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.TextToSelectionPoint(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SetSelectedText(System.String,QWhale.Editor.SelectionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectedCount">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectedCount" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectedString(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.SelectedString(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.SelectedData(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteLeft">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteWordLeft">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteWordLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteRight">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteWordRight">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteWordRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.NewLine">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.NewLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.NewLineAbove">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.NewLineAbove" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.NewLineBelow">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.NewLineBelow" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ProcessEscape">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ProcessEscape" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CharTransponse">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CharTransponse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.WordTransponse">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.WordTransponse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.LineTransponse">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.LineTransponse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.CutLine">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.CutLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.DeleteLine">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.DeleteLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ProcessTab">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ProcessTab" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ProcessShiftTab">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ProcessShiftTab" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ToggleOverWrite">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ToggleOverWrite" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.InsertString(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.InsertString(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetInActiveBackColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetInActiveBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetInActiveForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetInActiveForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetBorderColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetBorderColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ResetAllowedSelectionMode">
      <summary>Implements <see cref="M:QWhale.Editor.ISelection.ResetAllowedSelectionMode" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeInActiveBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeInActiveForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.Selection.ShouldSerializeAllowedSelectionMode">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.SelectionOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SelectionOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DisableSelection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DisableDragging">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.SelectBeyondEol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.UseColors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.HideSelection">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.SelectLineOnDblClick">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DeselectOnCopy">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.PersistentBlocks">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.OverwriteBlocks">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.SmartFormat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.WordSelect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DrawBorder">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.SelectLineOnTripleClick">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DeselectOnDblClick">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.ConvertToSpacesOnPaste">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.RtfClipboard">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.ClearOnDrag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.CopyLineWhenEmpty">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionOptions.DisableCodeSnippetOnTab">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.SelectionState">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SelectionState.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionState.Drag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionState.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionState.SelectWord">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionState.SelectLine">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.SelectionType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SelectionType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionType.Stream">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SelectionType.Block">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.SeparatorOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SeparatorOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.HighlightCurrentLine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.HideHighlighting">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.SeparateLines">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.SeparateWrapLines">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.SeparateContent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SeparatorOptions.SeparateBeyondEof">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.Spelling">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Spelling.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.Spelling" />		 class.	</summary></member>
    <member name="QWhale.Editor.Spelling.CheckSpelling">
      <summary>Implements <see cref="P:QWhale.Editor.ISpelling.CheckSpelling" />.</summary>
    </member>
    <member name="QWhale.Editor.Spelling.SpellColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISpellingEx.SpellColor" />.</summary>
    </member>
    <member name="P:QWhale.Editor.Spelling.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.Spelling.WordSpell">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.Spelling.IsWordCorrect(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISpelling.IsWordCorrect(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Spelling.Assign(QWhale.Editor.ISpellingEx)">
      <summary>Implements <see cref="M:QWhale.Editor.ISpellingEx.Assign(QWhale.Editor.ISpellingEx)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Spelling.ResetSpellColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISpellingEx.ResetSpellColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Spelling.ResetCheckSpelling">
      <summary>Implements <see cref="M:QWhale.Editor.ISpelling.ResetCheckSpelling" />.</summary>
    </member>
    <member name="M:QWhale.Editor.Spelling.ShouldSerializeSpellColor">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.StrItem">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.StrItem.#ctor(System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.StrItem" />		 class.	</summary></member>
    <member name="QWhale.Editor.StrItem.String">
      <summary>Implements <see cref="P:QWhale.Editor.IStrItem.String" />.</summary>
    </member>
    <member name="QWhale.Editor.StrItem.ColorData">
      <summary>Implements <see cref="P:QWhale.Editor.IStrItem.ColorData" />.</summary>
    </member>
    <member name="QWhale.Editor.StrItem.State">
      <summary>Implements <see cref="P:QWhale.Editor.IStrItem.State" />.</summary>
    </member>
    <member name="QWhale.Editor.StrItem.LexState">
      <summary>Implements <see cref="P:QWhale.Editor.IStrItem.LexState" />.</summary>
    </member>
    <member name="QWhale.Editor.StrItem.PrevLexState">
      <summary>Implements <see cref="P:QWhale.Editor.IStrItem.PrevLexState" />.</summary>
    </member>
    <member name="M:QWhale.Editor.StrItem.SetColorFlag(System.Int16[]@amp;,System.Int32,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.StrItem.SetColorFlag(System.Int32,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.IStrItem.SetColorFlag(System.Int32,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.StrItem.GetColorFlag(System.Int32,QWhale.Editor.ColorFlags@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IStrItem.GetColorFlag(System.Int32,QWhale.Editor.ColorFlags@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.StrItem.Split(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.StrItemState">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.StrItemState.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.StrItemState.Parsed">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.StrItemState.Readonly">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.SyntaxEdit">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.SyntaxEdit.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.SyntaxEdit" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.SyntaxEdit.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.SyntaxEdit" />		 class.	</summary></member>
    <member name="QWhale.Editor.SyntaxEdit.HideCaret">
      <summary>Implements <see cref="P:QWhale.Editor.ICaret.HideCaret" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DisableColorPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableColorPaint" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DisableSyntaxPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableSyntaxPaint" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SyntaxErrorsHints">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.SyntaxErrorsHints" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DrawColumnsIndent">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.DrawColumnsIndent" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.ColumnsIndentForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.ColumnsIndentForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Lexer">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.Lexer" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Position">
      <summary>Implements <see cref="P:QWhale.Editor.INavigate.Position" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.NavigateOptions">
      <summary>Implements <see cref="P:QWhale.Editor.INavigate.NavigateOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.WordWrap">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WordWrap" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.WrapAtMargin">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WrapAtMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.WrapMargin">
      <summary>Implements <see cref="P:QWhale.Editor.IWordWrap.WrapMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.LineTerminator">
      <summary>Implements <see cref="P:QWhale.Editor.IFmtExportEx.LineTerminator" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Readonly">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.Readonly" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.OverWrite">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.OverWrite" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Modified">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.Modified" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SingleLineMode">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.SingleLineMode" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.IndentOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.IndentOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.MaxLength">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.MaxLength" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.CodeCompletionBox">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletion.CodeCompletionBox" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.CodeCompletionHint">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletion.CodeCompletionHint" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.CodeCompletionChars">
      <summary>Implements <see cref="P:QWhale.Editor.ICodeCompletion.CodeCompletionChars" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.MacroRecording">
      <summary>Implements <see cref="P:QWhale.Editor.IRecordPlayBack.MacroRecording" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.MacroSuspendend">
      <summary>Implements <see cref="P:QWhale.Editor.IRecordPlayBack.MacroSuspendend" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.MacroRecords">
      <summary>Implements <see cref="P:QWhale.Editor.IRecordPlayBack.MacroRecords" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.ReadonlyForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditColors.ReadonlyForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.ReadonlyBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditColors.ReadonlyBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DisabledForeColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditColors.DisabledForeColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DisabledBackColor">
      <summary>Implements <see cref="P:QWhale.Editor.IEditColors.DisabledBackColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.VertSplitEdit">
      <summary>Implements <see cref="P:QWhale.Editor.ISplitView.VertSplitEdit" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.HorzSplitEdit">
      <summary>Implements <see cref="P:QWhale.Editor.ISplitView.HorzSplitEdit" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.VertSplitter">
      <summary>Implements <see cref="P:QWhale.Editor.ISplitView.VertSplitter" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.HorzSplitter">
      <summary>Implements <see cref="P:QWhale.Editor.ISplitView.HorzSplitter" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.AutoCorrectDelimiters">
      <summary>Implements <see cref="P:QWhale.Editor.IAutoCorrect.AutoCorrectDelimiters" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.AutoCorrection">
      <summary>Implements <see cref="P:QWhale.Editor.IAutoCorrect.AutoCorrection" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Source">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Source" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Lines">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Lines" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.Strings">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.DisplayLines">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.DisplayLines" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Selection">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Selection" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Gutter">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Gutter" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.EditMargin">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.EditMargin" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Painter">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Painter" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.KeyList">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.KeyList" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.EventHandlers">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.LineStyles">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.LineStyles" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.LinesStyles">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Printing">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Printing" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Pages">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Pages" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.WhiteSpace">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.WhiteSpace" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.LineSeparator">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.LineSeparator" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Braces">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Braces" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.HyperText">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.HyperText" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Outlining">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Outlining" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Spelling">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Spelling" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Scrolling">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Scrolling" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.Scroll">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.AcceptTabs">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.AcceptTabs" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.AcceptReturns">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.AcceptReturns" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.BorderStyle">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.BorderStyle" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.BorderColor">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.BorderColor" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.ClientRect">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.ClientRect" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Transparent">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.Transparent" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.SyntaxSettings">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SearchDialog">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.SearchDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.GotoLineDialog">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.GotoLineDialog" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SearchPos">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.SearchPos" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SearchOptions">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.SearchOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.SearchLen">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.SearchLen" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.FirstSearch">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.FirstSearch" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.InIncrementalSearch">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.InIncrementalSearch" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.IncrementalSearchString">
      <summary>Implements <see cref="P:QWhale.Editor.ISearch.IncrementalSearchString" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.CreateParams">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.Text">
      <summary>Overridden. See <see cref="P:System.Windows.Forms.Control.Text" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.AllowDrop">
      <summary>Overridden. See <see cref="P:System.Windows.Forms.Control.AllowDrop" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxEdit.UseDefaultMenu">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxEdit.UseDefaultMenu" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.DefaultMenu">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxEdit.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.SyntaxEdit.CustomDraw">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.NeedCodeCompletion">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.SplitHorz">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.SplitVert">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.UnsplitHorz">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.UnsplitVert">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.AutoCorrect">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.SelectionChanged">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.DrawHeader">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.JumpToUrl">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.CheckHyperText">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.GutterClick">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.GutterDblClick">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.DrawUserMargin">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.WordSpell">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.VerticalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.HorizontalScroll">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.ScrollButtonClick">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.SourceStateChanged">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.ModifiedChanged">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.SyntaxEdit.PaintBackground">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#Invalidate">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#Invalidate(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Invalidate(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#Update">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Update" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#PointToClient(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToClient(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#PointToScreen(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.PointToScreen(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#Focus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.Focus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_CanFocus">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_CanFocus" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Visible">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Visible" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Visible(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Visible(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Location">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Location" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Location(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Location(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Left">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Left" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Left(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Left(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Top">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Top" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Top(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Top(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Width">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Width" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Width(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Width(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Height">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Height" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Height(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Height(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Bounds(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Bounds(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_ClientRectangle">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_ClientRectangle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Parent">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Parent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#set_Parent(System.Windows.Forms.Control)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.set_Parent(System.Windows.Forms.Control)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_Enabled">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_Enabled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#get_IsHandleCreated">
      <summary>Implements <see cref="M:QWhale.Common.IControl.get_IsHandleCreated" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#add_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.add_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QWhale#Common#IControl#remove_Click(System.EventHandler)">
      <summary>Implements <see cref="M:QWhale.Common.IControl.remove_Click(System.EventHandler)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoCodeToolTip(System.String,System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoCodeCompletion(QWhale.Syntax.ISyntaxParser,System.String,System.Drawing.Point,QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoCodeCompletion">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnCodeCompletion(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StartDragging">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoUndo(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoRedo(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoCut(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoCopy(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoPaste(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoDelete(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoSelectAll(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InitDefaultMenu">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UpdateMenu">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PopupDefaultMenu(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveCaretOnDrag">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.MoveCaretOnDrag" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ProcessKeyPress(System.Char)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ProcessKeyPress(System.Char)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PreProcessMessage(System.Windows.Forms.Message@amp;)">
      <summary>Overridden. See <see cref="M:System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoAutoCorrection(System.Drawing.Point,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CheckAutoCorrect(System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CheckAutoCorrect">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.HasAutoCorrection(System.String,System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IAutoCorrect.HasAutoCorrection(System.String,System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsMouseOnPageWhiteSpace(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsMouseOnSyntaxError(System.Int32,System.Int32,QWhale.Syntax.ISyntaxError@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScreenToDisplayX(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScreenToDisplay(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ScreenToDisplay(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScreenToText(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ScreenToText(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScreenToText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ScreenToText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.TextToScreen(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.TextToScreen(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.TextToScreen(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.TextToScreen(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayToScreen(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplayToScreen(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayToScreen(System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MakeVisible(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.MakeVisible(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MakeVisible(System.Drawing.Point,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.MakeVisible(System.Drawing.Point,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowScrollHint(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ShowScrollHint(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.HideScrollHint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.HideScrollHint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CharsInWidth">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.CharsInWidth" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CharsInWidth(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.CharsInWidth(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CharsInWidth(System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LinesInHeight">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.LinesInHeight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LinesInHeight(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.LinesInHeight(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetTextToSearchAtCursor">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.GetTextToSearchAtCursor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetHitTestAtTextPoint(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.GetHitTestAtTextPoint(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetHitTestAtTextPoint(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.GetHitTestAtTextPoint(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetHitTest(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.GetHitTest(System.Drawing.Point,QWhale.Editor.HitTestInfo@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetHitTest(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.GetHitTest(System.Int32,System.Int32,QWhale.Editor.HitTestInfo@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetBorderStyle">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetBorderStyle" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetBorderColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetBorderColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetAcceptTabs">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetAcceptTabs" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetAcceptReturns">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetAcceptReturns" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeBorderColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayEditorSettingsDialog">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplayEditorSettingsDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayEditorSettingsDialog(QWhale.Editor.Dialogs.EditorSettingsTab)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplayEditorSettingsDialog(QWhale.Editor.Dialogs.EditorSettingsTab)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayGotoLineDialog">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplayGotoLineDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplaySearchDialog">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplaySearchDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayReplaceDialog">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.DisplayReplaceDialog" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetReplaceString(System.String,System.Text.RegularExpressions.Match)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoReplace(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Match)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoReplace(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoMarkAll(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StorePositionWithUndo(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.RestorePositionWithUndo(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InitSearchPos(QWhale.Editor.SearchOptions,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PerformSearch(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PerformCycledSearch(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InitCycledSearch(QWhale.Editor.SearchOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoFind(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.TextFound(QWhale.Editor.SearchOptions,System.Drawing.Point,System.Int32,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SelectionMatchesSearchText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Find(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Find(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Find(System.String,QWhale.Editor.SearchOptions)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.FindNext">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.FindNext" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.FindPrevious">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.FindPrevious" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.FindNextSelected">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.FindNextSelected" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.FindPreviousSelected">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.FindPreviousSelected" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanFindNext">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.CanFindNext" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanFindPrevious">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.CanFindPrevious" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanFindNextSelected">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.CanFindNextSelected" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanFindPreviousSelected">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.CanFindPreviousSelected" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Replace(System.String,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Replace(System.String,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Replace(System.String,System.String,QWhale.Editor.SearchOptions)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Replace(System.String,System.String,QWhale.Editor.SearchOptions)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Replace(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.Replace(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ReplaceAll(System.String,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.NeedReplaceCurrent(System.Text.RegularExpressions.Match@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.NeedReplaceCurrent(System.Text.RegularExpressions.Match@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.NeedReplaceCurrent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ReplaceCurrent(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Match)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.ReplaceCurrent(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Match)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.ReplaceAll(System.String,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MarkAll(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.MarkAll(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MarkAll(System.String,QWhale.Editor.SearchOptions)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.MarkAll(System.String,QWhale.Editor.SearchOptions)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MarkAll(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.MarkAll(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StartIncrementalSearch">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.StartIncrementalSearch" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StartIncrementalSearch(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.StartIncrementalSearch(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.FinishIncrementalSearch">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.FinishIncrementalSearch" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IncrementalSearch(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.IncrementalSearch(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetTextAtCursor">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.GetTextAtCursor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanSearchSelection(System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.CanSearchSelection(System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowNotFound(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISearch.ShowNotFound(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeSearchOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StartTripleClickTimer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StopTripleClickTimer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoTripleClick(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsSignificantMouseMove(System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnResize(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnVisibleChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnForeColorChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnFontChanged(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SyntaxChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DoFontChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnGotFocus(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnLostFocus(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnMouseLeave(System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnDragLeave(System.EventArgs)">
      <summary>Implements <see cref="M:System.Windows.Forms.IDropTarget.OnDragLeave(System.EventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>Implements <see cref="M:System.Windows.Forms.IDropTarget.OnDragEnter(System.Windows.Forms.DragEventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>Implements <see cref="M:System.Windows.Forms.IDropTarget.OnDragOver(System.Windows.Forms.DragEventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QueryEndDrag(System.Object,System.Windows.Forms.QueryContinueDragEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>Implements <see cref="M:System.Windows.Forms.IDropTarget.OnDragDrop(System.Windows.Forms.DragEventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnSourceStateChanged(QWhale.Editor.NotifyState,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnModifiedChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateHandle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.NeedResizeRedraw">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.WndProc(System.Windows.Forms.Message@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnNeedCompletion(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsInputChar(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ProcessKey(System.Windows.Forms.Keys)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayCaretNowhere">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PaintDragCaret(System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateCaret">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.CreateCaret" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DestroyCaret">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.DestroyCaret" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCaret(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.ShowCaret(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetCaretSize(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.GetCaretSize(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisplayDragCaret">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.DisplayDragCaret" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.HideDragCaret">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.HideDragCaret" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetHideCaret">
      <summary>Implements <see cref="M:QWhale.Editor.ICaret.ResetHideCaret" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MeasureLine(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetDisableColorPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableColorPaint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetDisableSyntaxPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableSyntaxPaint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetSyntaxErrorsHints">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetSyntaxErrorsHints" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetDrawColumnsIndent">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetDrawColumnsIndent" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetColumnsIndentForeColor">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxEdit.ResetColumnsIndentForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Notification(System.Object,System.EventArgs)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotifier.Notification(System.Object,System.EventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UpdateStartSearchPos">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ClearSelection">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.Navigate(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.Navigate(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveTo(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveTo(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveToChar(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveToChar(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveToLine(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveToLine(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveTo(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveTo(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ValidatePosition(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.ValidatePosition(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StorePosition(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.StorePosition(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.RestorePosition(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.RestorePosition(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveCharLeft">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveCharLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveCharRight">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveCharRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveWordLeft">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveWordLeft" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveWordRight">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveWordRight" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineUp">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineDown">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineDown" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineBegin">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineBegin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineBeginCycled">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineBeginCycled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineEndCycled">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineEndCycled" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveLineEnd">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveLineEnd" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveFileBegin">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveFileBegin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveFileEnd">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveFileEnd" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScrollLineDown">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.ScrollLineDown" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ScrollLineUp">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.ScrollLineUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveToOpenBrace">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveToOpenBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveToCloseBrace">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveToCloseBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveToBrace">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveToBrace" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MovePageUp">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MovePageUp" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MovePageDown">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MovePageDown" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveScreenTop">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveScreenTop" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.MoveScreenBottom">
      <summary>Implements <see cref="M:QWhale.Editor.INavigateEx.MoveScreenBottom" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetNavigateOptions">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.ResetNavigateOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeNavigateOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UpdateWordWrap">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.UpdateWordWrap" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UpdateWordWrap(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.UpdateWordWrap(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetWrapMargin">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.GetWrapMargin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetWordWrap">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.ResetWordWrap" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetWrapAtMargin">
      <summary>Implements <see cref="M:QWhale.Editor.IWordWrap.ResetWrapAtMargin" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadStream(System.IO.TextReader,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtImport.LoadStream(System.IO.TextReader,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetIndentOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetIndentOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetMaxLength">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetMaxLength" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetModified">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetModified" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetOverWrite">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetOverWrite" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetSingleLineMode">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetSingleLineMode" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResetReadonly">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetReadonly" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeIndentOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeReadonly">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InsertCodeSnippet(QWhale.Syntax.ICodeSnippet,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InsertTextFromProvider(QWhale.Syntax.ICodeCompletionProvider,System.String,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.InsertTextFromProvider(QWhale.Syntax.ICodeCompletionProvider,System.String,System.Drawing.Point,System.Drawing.Point,System.Boolean,System.Drawing.Point@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SelectSnippet(System.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ClosePopupWindow">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CloseCodeCompletionBox(System.Object,QWhale.Syntax.ClosingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.DisposeCodeCompletionBox(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CloseCodeCompletionHint(System.Object,QWhale.Syntax.ClosingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ListMembers(QWhale.Syntax.CodeCompletionArgs,QWhale.Syntax.CodeCompletionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ListMembers(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CompleteWord(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ParameterInfo(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QuickInfo(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QuickInfo(QWhale.Syntax.CodeCompletionArgs,System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CodeSnippets(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateCodeCompletionBox">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateCodeCompletionHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionBox(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShowCodeCompletionHint(QWhale.Syntax.ICodeCompletionProvider,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Boolean,System.Boolean,QWhale.Syntax.ILexer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.RemovePlainText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.RemovePlainText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.IsValidText(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.IsValidText(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CompleteWord">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.CompleteWord" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ListMembers">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ListMembers" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ParameterInfo">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.ParameterInfo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CodeSnippets">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.CodeSnippets" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.QuickInfo">
      <summary>Implements <see cref="M:QWhale.Editor.ICodeCompletion.QuickInfo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeColumnsIndentForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StartMacroRecording">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.StartMacroRecording" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.StopMacroRecording">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.StopMacroRecording" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PauseMacroRecording">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.PauseMacroRecording" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ResumeMacroRecording">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.ResumeMacroRecording" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ToggleMacroRecording">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.ToggleMacroRecording" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.PlayBackMacro">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.PlayBackMacro" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveMacros(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveMacros(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SaveMacros(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.SaveMacros(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadMacros(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadMacros(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.LoadMacros(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IRecordPlayBack.LoadMacros(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeReadonlyForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeReadonlyBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeDisabledForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.ShouldSerializeDisabledBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.AssignProps(QWhale.Editor.SyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateSplitEdit(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SplitterMoved(System.Object,System.Windows.Forms.SplitterEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CreateSplitter(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetSplitEdit(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.GetSplitter(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanSplit(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanUnsplit(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SplitView(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UnsplitView(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanSplitHorz">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.CanSplitHorz" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanSplitVert">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.CanSplitVert" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanUnsplitHorz">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.CanUnsplitHorz" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.CanUnsplitVert">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.CanUnsplitVert" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SplitViewHorz">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.SplitViewHorz" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.SplitViewVert">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.SplitViewVert" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UnsplitViewHorz">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.UnsplitViewHorz" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxEdit.UnsplitViewVert">
      <summary>Implements <see cref="M:QWhale.Editor.ISplitView.UnsplitViewVert" />.</summary>
    </member>
    <member name="T:QWhale.Editor.SyntaxPaint">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.SyntaxPaint.#ctor(QWhale.Common.IPainter,System.Windows.Forms.Control)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.SyntaxPaint" />		 class.	</summary></member>
    <member name="QWhale.Editor.SyntaxPaint.Lexer">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.Lexer" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxPaint.DisableColorPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableColorPaint" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxPaint.DisableSyntaxPaint">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxPaint.DisableSyntaxPaint" />.</summary>
    </member>
    <member name="E:QWhale.Editor.SyntaxPaint.CustomDraw">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.SyntaxPaint.control">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SyntaxPaint.customDrawEventArgs">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SyntaxPaint.drawInfo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.SyntaxPaint.painter">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.GetString(System.Int32,System.String@amp;,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.EqualStates(QWhale.Editor.ColorFlags,QWhale.Editor.ColorFlags)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.EqualLineStyles(QWhale.Editor.LineStyle,QWhale.Editor.LineStyle,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.GetFontStyle(System.Drawing.FontStyle,QWhale.Editor.ColorFlags)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.GetFontColor(System.Drawing.Color,QWhale.Editor.ColorFlags)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.GetBackColor(System.Drawing.Color,QWhale.Editor.ColorFlags)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.EqualStyles(System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.PaintSyntax(QWhale.Common.IPainter,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Rectangle,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.DrawLine(System.Int32,System.String,System.Int16[],System.Drawing.Point,System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@amp;,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.MeasureLine(System.String,System.Int16[],System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.OnCustomDraw(QWhale.Common.IPainter,System.Drawing.Rectangle,QWhale.Editor.DrawStage,QWhale.Editor.DrawState,QWhale.Editor.DrawInfo)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.ResetDisableColorPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableColorPaint" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxPaint.ResetDisableSyntaxPaint">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxPaint.ResetDisableSyntaxPaint" />.</summary>
    </member>
    <member name="T:QWhale.Editor.SyntaxStrings">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.SyntaxStrings.#ctor(QWhale.Editor.TextSource)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.SyntaxStrings" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.SyntaxStrings.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.SyntaxStrings" />		 class.	</summary></member>
    <member name="QWhale.Editor.SyntaxStrings.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Text" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.RemoveTrailingSpaces">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxStrings.RemoveTrailingSpaces" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.Source">
      <summary>Implements <see cref="P:QWhale.Editor.ISyntaxStrings.Source" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.Item">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxStrings.IsFixedSize">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxStrings.IsReadonly">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxStrings.Current">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.Count">
      <summary>Implements <see cref="P:System.Collections.ICollection.Count" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.IsSynchronized">
      <summary>Implements <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.SyncRoot">
      <summary>Implements <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.LineTerminator">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.LineTerminator" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.TabStops">
      <summary>Implements <see cref="P:QWhale.Editor.ITabulation.TabStops" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.UseSpaces">
      <summary>Implements <see cref="P:QWhale.Editor.ITabulation.UseSpaces" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Syntax.INotify.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.FirstChanged">
      <summary>Implements <see cref="P:QWhale.Editor.INotifyEx.FirstChanged" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.LastChanged">
      <summary>Implements <see cref="P:QWhale.Editor.INotifyEx.LastChanged" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.Delimiters">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.Delimiters" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.DelimiterString">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.DelimiterString" />.</summary>
    </member>
    <member name="QWhale.Editor.SyntaxStrings.DelimTable">
      <summary>Implements <see cref="P:QWhale.Editor.IWordBreak.DelimTable" />.</summary>
    </member>
    <member name="P:QWhale.Editor.SyntaxStrings.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.CreateStrItem(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.AddData(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Add(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Add(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Clear">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Contains(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Contains(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.IndexOf(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.IndexOf(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Insert(System.Int32,System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Insert(System.Int32,System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Remove(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Remove(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.RemoveAt(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.RemoveAt(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetItem(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.GetItem(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetLength(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.GetLength(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Changed(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Changed(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Changed(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.Changed(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ToArrayList">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.ToArrayList" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ToStringArray">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.ToStringArray" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetCharAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.GetCharAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetCharAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.GetCharAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetLexStyle(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.GetLexStyle(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.RemoveSpaces(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.TextPointToAbsolutePosition(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.TextPointToAbsolutePosition(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.AbsolutePositionToTextPoint(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.AbsolutePositionToTextPoint(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SetTextAndData(System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetEnumerator">
      <summary>Implements <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Reset">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.CopyTo(System.Array,System.Int32)">
      <summary>Implements <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.TextPointToAbsolutePosition(QWhale.Syntax.IStringList,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.AbsolutePositionToTextPoint(QWhale.Syntax.IStringList,System.Int32,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Find(QWhale.Syntax.IStringList,System.Collections.Hashtable,System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSearch.Find(System.String,QWhale.Editor.SearchOptions,System.Text.RegularExpressions.Regex,System.Drawing.Point@amp;,System.Int32@amp;,System.Text.RegularExpressions.Match@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveFile(System.String,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveFile(System.String,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.AfterSave">
      <summary>Implements <see cref="M:QWhale.Editor.ISyntaxStrings.AfterSave" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.TextWriter,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Editor.IFmtExport.SaveStream(System.IO.Stream,QWhale.Editor.ExportFormat,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ShouldSerializeLineTerminator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetIndentString(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.GetIndentString(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetTabStop(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.GetTabStop(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetPrevTabStop(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.GetPrevTabStop(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetTabString(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.GetTabString(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.TabPosToPos(System.String,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.TabPosToPos(System.String,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.PosToTabPos(System.String,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulationEx.PosToTabPos(System.String,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ResetTabStops">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulation.ResetTabStops" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ResetUseSpaces">
      <summary>Implements <see cref="M:QWhale.Editor.ITabulation.ResetUseSpaces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Assign(QWhale.Editor.ISyntaxStrings)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.StringsChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.AddNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.AddNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.RemoveNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.RemoveNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.Notify">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.Notify" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.IsDelimiter(System.Collections.Hashtable,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.IsDelimiter(System.String,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.String,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.IsDelimiter(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.IsDelimiter(System.Char)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.IsDelimiter(System.Char)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetWord(System.String,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetWord(System.String,System.Int32,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetWord(System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetWord(System.Int32,System.Int32,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetTextAt(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetTextAt(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.GetTextAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.GetTextAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.SyntaxStrings.ResetDelimiters">
      <summary>Implements <see cref="M:QWhale.Editor.IWordBreak.ResetDelimiters" />.</summary>
    </member>
    <member name="T:QWhale.Editor.TextSource">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.TextSource.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.TextSource" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.TextSource.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.TextSource" />		 class.	</summary></member>
    <member name="QWhale.Editor.TextSource.FileName">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.FileName" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Edits">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.Edits" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Lines">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.Lines" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.ActiveEdit">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.ActiveEdit" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Text">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.Text" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.LineStyles">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.LineStyles" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.BookMarks">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.BookMarks" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Lexer">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.Lexer" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.ParserLine">
      <summary>Implements <see cref="P:QWhale.Editor.ITextSource.ParserLine" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Position">
      <summary>Implements <see cref="P:QWhale.Editor.INavigate.Position" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.NavigateOptions">
      <summary>Implements <see cref="P:QWhale.Editor.INavigate.NavigateOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Readonly">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.Readonly" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.OverWrite">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.OverWrite" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.Modified">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.Modified" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.SingleLineMode">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.SingleLineMode" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.IndentOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.IndentOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.MaxLength">
      <summary>Implements <see cref="P:QWhale.Editor.IEdit.MaxLength" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Syntax.INotify.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.State">
      <summary>Implements <see cref="P:QWhale.Editor.ISourceNotify.State" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.FirstChanged">
      <summary>Implements <see cref="P:QWhale.Editor.INotifyEx.FirstChanged" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.LastChanged">
      <summary>Implements <see cref="P:QWhale.Editor.INotifyEx.LastChanged" />.</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.AllowUndo">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.GroupUndo">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.UndoAfterSave">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.UndoNavigations">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.TextSource.UndoOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IUndo.UndoOptions" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.UndoLimit">
      <summary>Implements <see cref="P:QWhale.Editor.IUndo.UndoLimit" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.UndoUpdateCount">
      <summary>Implements <see cref="P:QWhale.Editor.IUndo.UndoUpdateCount" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.UndoList">
      <summary>Implements <see cref="P:QWhale.Editor.IUndo.UndoList" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.RedoList">
      <summary>Implements <see cref="P:QWhale.Editor.IUndo.RedoList" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.LineTerminator">
      <summary>Implements <see cref="P:QWhale.Editor.IExportEx.LineTerminator" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.HighlightUrls">
      <summary>Implements <see cref="P:QWhale.Editor.IHyperText.HighlightUrls" />.</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.UrlTable">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Editor.TextSource.CheckSpelling">
      <summary>Implements <see cref="P:QWhale.Editor.ISpelling.CheckSpelling" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.OpenBraces">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.OpenBraces" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.ClosingBraces">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.ClosingBraces" />.</summary>
    </member>
    <member name="QWhale.Editor.TextSource.BracesOptions">
      <summary>Implements <see cref="P:QWhale.Editor.IBraceMatching.BracesOptions" />.</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.Strings">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.TextSource.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Editor.TextSource.CheckHyperText">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Editor.TextSource.WordSpell">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.TextSource.NeedCodeCompletion">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedSyntaxErrors">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedQuickInfoTips">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.OnFormatting(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.TextPointToAbsolutePosition(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.TextPointToAbsolutePosition(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.AbsolutePositionToTextPoint(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.AbsolutePositionToTextPoint(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.GetCharIndexFromPosition(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.GetCharIndexFromPosition(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.GetPositionFromCharIndex(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.GetPositionFromCharIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ParseString(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.ParseString(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedParse">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.NeedParse" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ParseStrings(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.ParseStrings(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.CreateStrItem(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.CreateStrItem(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ParseToString(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.ParseToString(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SetColorFlag(System.Drawing.Rectangle,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SetColorFlag(System.Drawing.Point,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.SetColorFlag(System.Drawing.Point,System.Int32,QWhale.Editor.ColorFlags,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.RemoveTrailingSpaces(System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ValidatePosition(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.ValidatePosition(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.StorePosition(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.StorePosition(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.RestorePosition(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.RestorePosition(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Navigate(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.Navigate(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.MoveTo(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveTo(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.MoveToChar(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveToChar(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.MoveToLine(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveToLine(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.MoveTo(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.MoveTo(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetNavigateOptions">
      <summary>Implements <see cref="M:QWhale.Editor.INavigate.ResetNavigateOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LexStateChanged(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ModifiedChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ParseText(System.Int32,QWhale.Editor.IStrItem,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.StringsChanged(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BlockDeleting(System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BlockDeleting(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.IsLineReadonly(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.IsLineReadonly(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SetLineReadonly(System.Int32,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.SetLineReadonly(System.Int32,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Insert(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.Insert(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.InsertFromFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.InsertFromFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.DeleteRight(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.DeleteRight(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.DeleteLeft(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.DeleteLeft(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.InsertBlock(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.InsertBlock(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.InsertBlock(System.String[])">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.InsertBlock(System.String[])" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.InsertBlock(System.String[],System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.InsertBlock(QWhale.Editor.ISyntaxStrings)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.InsertBlock(QWhale.Editor.ISyntaxStrings)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.DeleteBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.DeleteBlock(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.DeleteBlock(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BreakLine">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.BreakLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.UnBreakLine">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.UnBreakLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NewLine">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.NewLine" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NewLineAbove">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.NewLineAbove" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NewLineBelow">
      <summary>Implements <see cref="M:QWhale.Editor.IEditEx.NewLineBelow" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetIndentOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetIndentOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetMaxLength">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetMaxLength" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetModified">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetModified" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetOverWrite">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetOverWrite" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetReadonly">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetReadonly" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetSingleLineMode">
      <summary>Implements <see cref="M:QWhale.Editor.IEdit.ResetSingleLineMode" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Notification(System.Object,System.EventArgs)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotifier.Notification(System.Object,System.EventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BeginUpdate(QWhale.Syntax.UpdateReason)">
      <summary>Implements <see cref="M:QWhale.Editor.ISourceNotify.BeginUpdate(QWhale.Syntax.UpdateReason)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.AddNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.AddNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.RemoveNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.RemoveNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Notify">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.Notify" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LinesChanged(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Editor.ISourceNotify.LinesChanged(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LinesChanged(System.Int32,System.Int32,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Editor.ISourceNotify.LinesChanged(System.Int32,System.Int32,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.GetUndoList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Undo(QWhale.Editor.UndoData)">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.Undo(QWhale.Editor.UndoData)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Undo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.Undo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.Redo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.Redo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.CanUndo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.CanUndo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.CanRedo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.CanRedo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ClearUndo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.ClearUndo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ClearRedo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.ClearRedo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.DisableUndo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.DisableUndo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.EnableUndo">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.EnableUndo" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.BeginUndoUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.BeginUndoUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.EndUndoUpdate">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.EndUndoUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetUndoLimit">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.ResetUndoLimit" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetUndoOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IUndo.ResetUndoOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.TrackChanges(System.Collections.ArrayList,QWhale.Common.SortList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.TrackChanges">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ClearTrackChanges">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.IsLineModified(System.Int32,System.Boolean@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.ITrackChanges.IsLineModified(System.Int32,System.Boolean@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.UpdateParsed(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SaveFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.IsHyperText(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperText.IsHyperText(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetHighlightUrls">
      <summary>Implements <see cref="M:QWhale.Editor.IHyperText.ResetHighlightUrls" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.IsWordCorrect(System.String)">
      <summary>Implements <see cref="M:QWhale.Editor.ISpelling.IsWordCorrect(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.IsWordCorrect(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetCheckSpelling">
      <summary>Implements <see cref="M:QWhale.Editor.ISpelling.ResetCheckSpelling" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.OnUnhighlightBraces(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.FindClosingBrace(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.FindClosingBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindClosingBrace(System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.FindOpenBrace(System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.FindOpenBrace(System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.FindOpenBrace(System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.TempHighlightBraces(System.Drawing.Rectangle[])">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.TempHighlightBraces(System.Drawing.Rectangle[])" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.TempUnhighlightBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.TempUnhighlightBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetOpenBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetOpenBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetClosingBraces">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetClosingBraces" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ResetBracesOptions">
      <summary>Implements <see cref="M:QWhale.Editor.IBraceMatching.ResetBracesOptions" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeOpenBraces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeClosingBraces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ProcessAutoComplete(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeFileName">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeNavigateOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeUndoOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.ShouldSerializeIndentOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.FormatText">
      <summary>Implements <see cref="M:QWhale.Editor.ITextSource.FormatText" />.</summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedFormatText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedOutlineText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedReparseText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedAutoComplete">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.TextSource.NeedReparseTextOnLineChange">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.UndoData">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.UndoData.#ctor(QWhale.Editor.UndoOperation,System.Object)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.UndoData" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.UndoData.Operation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoData.Reason">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoData.UpdateCount">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoData.UndoFlag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoData.Data">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoData.Position">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.UndoFlags">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.UndoFlags.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoFlags.FirstTime">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoFlags.Saved">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.UndoOperation">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.UndoOperation.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.Break">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.UnBreak">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.InsertBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.DeleteBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.Navigate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.NavigateEx">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.UndoBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOperation.Unknown">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.UndoOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Editor.UndoOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOptions.AllowUndo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOptions.GroupUndo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOptions.UndoNavigations">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOptions.UndoAfterSave">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UndoOptions.SingleBreakUndo">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.UrlJumpEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.UrlJumpEventArgs.#ctor(System.String,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.UrlJumpEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.UrlJumpEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.UrlJumpEventArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.WhiteSpace">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.WhiteSpace.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.WhiteSpace" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.WhiteSpace.#ctor(QWhale.Editor.ISyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.WhiteSpace" />		 class.	</summary></member>
    <member name="QWhale.Editor.WhiteSpace.Visible">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.Visible" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.TabSymbol">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.TabSymbol" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.SpaceSymbol">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.SpaceSymbol" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.EolSymbol">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.EolSymbol" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.EofSymbol">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.EofSymbol" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.WordWrapSymbol">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.WordWrapSymbol" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.SymbolColor">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.SymbolColor" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.SpaceString">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.SpaceString" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.TabString">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.TabString" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.EolString">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.EolString" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.EofString">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.EofString" />.</summary>
    </member>
    <member name="QWhale.Editor.WhiteSpace.WordWrapString">
      <summary>Implements <see cref="P:QWhale.Editor.IWhiteSpace.WordWrapString" />.</summary>
    </member>
    <member name="P:QWhale.Editor.WhiteSpace.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeSymbolColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeTabSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeSpaceSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeEolSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeEofSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ShouldSerializeWordWrapSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.Assign(QWhale.Editor.IWhiteSpace)">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.Assign(QWhale.Editor.IWhiteSpace)" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetTabSymbol">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetTabSymbol" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetSpaceSymbol">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetSpaceSymbol" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetEolSymbol">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetEolSymbol" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetEofSymbol">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetEofSymbol" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetWordWrapSymbol">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetWordWrapSymbol" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetSymbolColor">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetSymbolColor" />.</summary>
    </member>
    <member name="M:QWhale.Editor.WhiteSpace.ResetVisible">
      <summary>Implements <see cref="M:QWhale.Editor.IWhiteSpace.ResetVisible" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Editor.WordSpellEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.WordSpellEventArgs.#ctor(System.String,System.Boolean,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.WordSpellEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Editor.WordSpellEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.WordSpellEventArgs.Correct">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Editor.WordSpellEventArgs.ColorStyle">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlBracesInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlBracesInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlBracesInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlBracesInfo.#ctor(QWhale.Editor.Braces)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlBracesInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlBracesInfo.OpenBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.ClosingBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.BracesOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.Style">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlBracesInfo.UseRoundRect">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlBracesInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlBracesInfo.FixupReferences(QWhale.Editor.Braces)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlDisplayStringsInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlDisplayStringsInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlDisplayStringsInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlDisplayStringsInfo.#ctor(QWhale.Editor.DisplayStrings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlDisplayStringsInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlDisplayStringsInfo.WordWrap">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlDisplayStringsInfo.WrapAtMargin">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlDisplayStringsInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlDisplayStringsInfo.FixupReferences(QWhale.Editor.DisplayStrings)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlEditPageInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlEditPageInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlEditPageInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlEditPageInfo.#ctor(QWhale.Editor.EditPage)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlEditPageInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.Footer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.Header">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.HorzOffset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.VertOffset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.Margins">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.PageSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.PageKind">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.Landscape">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPageInfo.PaintNumber">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlEditPageInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlEditPageInfo.FixupReferences(QWhale.Editor.EditPage)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlEditPagesInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlEditPagesInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlEditPagesInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlEditPagesInfo.#ctor(QWhale.Editor.EditPages)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlEditPagesInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.BorderColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.DisplayWhiteSpace">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.PageType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.RulerOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.Rulers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.RulerUnits">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.DefaultPage">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlEditPagesInfo.ApplyRulerToAllPages">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlEditPagesInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlEditPagesInfo.FixupReferences(QWhale.Editor.EditPages)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlExporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlExporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlExporter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlExporter.WriteContent">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlGutterInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlGutterInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlGutterInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlGutterInfo.#ctor(QWhale.Editor.Gutter)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlGutterInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlGutterInfo.Width">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.PenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.PenWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersStart">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersLeftIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersRightIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineNumbersAlignment">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.BookMarkImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.WrapImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.DrawLineBookmarks">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.ShowBookmarkHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineModificatorChangedColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlGutterInfo.LineModificatorSavedColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlGutterInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlGutterInfo.FixupReferences(QWhale.Editor.Gutter)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlHyperTextExInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlHyperTextExInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlHyperTextExInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlHyperTextExInfo.#ctor(QWhale.Editor.HyperTextEx)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlHyperTextExInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlHyperTextExInfo.UrlStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlHyperTextExInfo.UrlColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlHyperTextExInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlHyperTextExInfo.FixupReferences(QWhale.Editor.HyperTextEx)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlImporter">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlImporter.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlImporter" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlImporter.ReadContent">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlLineSeparatorInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlLineSeparatorInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlLineSeparatorInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlLineSeparatorInfo.#ctor(QWhale.Editor.LineSeparator)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlLineSeparatorInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlLineSeparatorInfo.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlLineSeparatorInfo.HighlightBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlLineSeparatorInfo.HighlightForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlLineSeparatorInfo.LineColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlLineSeparatorInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlLineSeparatorInfo.FixupReferences(QWhale.Editor.LineSeparator)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlLineStylesInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlLineStylesInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlLineStylesInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlLineStylesInfo.#ctor(QWhale.Editor.LineStylesEx)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlLineStylesInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlLineStylesInfo.Styles">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlLineStylesInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlLineStylesInfo.FixupReferences(QWhale.Editor.LineStylesEx)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlMarginInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlMarginInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlMarginInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlMarginInfo.#ctor(QWhale.Editor.Margin)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlMarginInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlMarginInfo.AllowDrag">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.ShowHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.ColumnPenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.ColumnsVisible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.ColumnPositions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.PenColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.PenWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlMarginInfo.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlMarginInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlMarginInfo.FixupReferences(QWhale.Editor.Margin)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlOutliningInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlOutliningInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlOutliningInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlOutliningInfo.#ctor(QWhale.Editor.Outlining)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlOutliningInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlOutliningInfo.AllowOutlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlOutliningInfo.OutlineOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlOutliningInfo.OutlineColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlOutliningInfo.Ranges">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlOutliningInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlOutliningInfo.FixupReferences(QWhale.Editor.Outlining)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlPageHeaderInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlPageHeaderInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlPageHeaderInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlPageHeaderInfo.#ctor(QWhale.Editor.PageHeader)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlPageHeaderInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.LeftText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.RightText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.Offset">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.ReverseOnEvenPages">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.FontName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.FontSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPageHeaderInfo.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlPageHeaderInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlPageHeaderInfo.FixupReferences(QWhale.Editor.PageHeader)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlPrintingInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlPrintingInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlPrintingInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlPrintingInfo.#ctor(QWhale.Editor.Printing)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlPrintingInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlPrintingInfo.Footer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPrintingInfo.Header">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPrintingInfo.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlPrintingInfo.AllowedOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlPrintingInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlPrintingInfo.FixupReferences(QWhale.Editor.Printing)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlScrollingInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlScrollingInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlScrollingInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlScrollingInfo.#ctor(QWhale.Editor.Scrolling)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlScrollingInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.WindowOriginX">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.WindowOriginY">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.ScrollBars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.DefaultHorzScrollSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.HorzButtons">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlScrollingInfo.VertButtons">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlScrollingInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlScrollingInfo.FixupReferences(QWhale.Editor.Scrolling)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSearchSettingsInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSearchSettingsInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSearchSettingsInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSearchSettingsInfo.#ctor(QWhale.Editor.Dialogs.SearchSettings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSearchSettingsInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSearchSettingsInfo.SearchList">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSearchSettingsInfo.ReplaceList">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSearchSettingsInfo.SearchOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSearchSettingsInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSearchSettingsInfo.FixupReferences(QWhale.Editor.Dialogs.SearchSettings)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSelectionInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSelectionInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSelectionInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSelectionInfo.#ctor(QWhale.Editor.Selection)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSelectionInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.SelectionRect">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.SelectionType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.InActiveForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSelectionInfo.InActiveBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSelectionInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSelectionInfo.FixupReferences(QWhale.Editor.Selection)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSpellingInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSpellingInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSpellingInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSpellingInfo.#ctor(QWhale.Editor.Spelling)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSpellingInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSpellingInfo.SpellColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSpellingInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSpellingInfo.FixupReferences(QWhale.Editor.Spelling)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSyntaxEditInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSyntaxEditInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxEditInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSyntaxEditInfo.#ctor(QWhale.Editor.SyntaxEdit)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxEditInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.SearchOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.CodeCompletionChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.AutoCorrection">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.ReadonlyBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DisabledForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DisabledBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Pages">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Transparent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.HideCaret">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DisableColorPaint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DisableSyntaxPaint">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.AcceptTabs">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.AcceptReturns">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DisplayStrings">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Selection">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Gutter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Margin">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.LineStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.LineSeparator">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Printing">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.WhiteSpace">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.TextSource">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Scrolling">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Outlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.HyperText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Spelling">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.Braces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.DrawColumnsIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxEditInfo.ColumnsIndentForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxEditInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxEditInfo.FixupReferences(QWhale.Editor.SyntaxEdit)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSyntaxSettingsInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSyntaxSettingsInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxSettingsInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSyntaxSettingsInfo.#ctor(QWhale.Editor.Dialogs.SyntaxSettings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxSettingsInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.FontName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.FontSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.NavOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.ScrollBars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.SelOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.GutterOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.OutlineOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.ShowGutter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.ShowMargin">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.HighlightUrls">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.AllowOutlining">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.UseSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.WordWrap">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.GutterWidth">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.MarginPos">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.TabStops">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.LexStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.ColorThemes">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.ActiveThemeIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.EventNames">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxSettingsInfo.EventData">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxSettingsInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxSettingsInfo.FixupReferences(QWhale.Editor.Dialogs.SyntaxSettings)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlSyntaxStringsInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlSyntaxStringsInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxStringsInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlSyntaxStringsInfo.#ctor(QWhale.Editor.SyntaxStrings)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlSyntaxStringsInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.TabStops">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.UseSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.Delimiters">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.Lines">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.LineTerminator">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlSyntaxStringsInfo.RemoveTrailingSpaces">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxStringsInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlSyntaxStringsInfo.FixupReferences(QWhale.Editor.SyntaxStrings)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlTextSourceInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlTextSourceInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlTextSourceInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlTextSourceInfo.#ctor(QWhale.Editor.TextSource)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlTextSourceInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.BracesOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.MaxLength">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.FileName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.BookMarks">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.LineStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.OpenBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.ClosingBraces">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.NavigateOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.ReadOnly">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.OverWrite">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.IndentOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.UndoOptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.UndoLimit">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.HighlightUrls">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.CheckSpelling">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.Lexer">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlTextSourceInfo.SyntaxStrings">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlTextSourceInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlTextSourceInfo.FixupReferences(QWhale.Editor.TextSource)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Editor.XmlWhiteSpaceInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Editor.XmlWhiteSpaceInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlWhiteSpaceInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Editor.XmlWhiteSpaceInfo.#ctor(QWhale.Editor.WhiteSpace)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Editor.XmlWhiteSpaceInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.TabSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.SpaceSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.EolSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.EofSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.WordWrapSymbol">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Editor.XmlWhiteSpaceInfo.SymbolColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Editor.XmlWhiteSpaceInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Editor.XmlWhiteSpaceInfo.FixupReferences(QWhale.Editor.WhiteSpace)">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.ClosingEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ClosingEventArgs.#ctor(System.Boolean,QWhale.Syntax.ICodeCompletionProvider)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ClosingEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.ClosingEventArgs.Accepted">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ClosingEventArgs.UseIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ClosingEventArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ClosingEventArgs.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ClosingEventArgs.Provider">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.CodeCompletionArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeCompletionArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeCompletionArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.Provider">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.KeyChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.CompletionType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.Interval">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.Handled">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.NeedShow">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.ToolTip">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.SelIndex">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.StartPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.EndPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.DisplayPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionArgs.NeedReparse">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionArgs.Init">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionArgs.Init(QWhale.Syntax.CodeCompletionType,System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionArgs.Init(QWhale.Syntax.CodeCompletionType,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.CodeCompletionProvider">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeCompletionProvider" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeCompletionProvider.Descriptions">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Descriptions" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.ImageIndexes">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ImageIndexes" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.Strings">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Strings" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.ColumnCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.SelIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.SelIndex" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.Images">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Images" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.UseIndent">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.UseIndent" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.UseHtmlFormatting">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.UseHtmlFormatting" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.ShowDescriptions">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ShowDescriptions" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.EditField">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.EditField" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionProvider.EditPath">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.EditPath" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeCompletionProvider.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Syntax.CodeCompletionProvider.ClosePopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Syntax.CodeCompletionProvider.ShowPopup">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.OnClosePopup(System.Object,QWhale.Syntax.ClosingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.OnShowPopup(System.Object,QWhale.Syntax.ShowingEventArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.IndexOfName(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.IndexOfName(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetImageIndex(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetDescription(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetColumnText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.ColumnVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.GetParent">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetParent" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionProvider.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeCompletionRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeCompletionRepository" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeCompletionRepository.FillBaseMembers">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionRepository.FillBaseMembers" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionRepository.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionRepository.CaseSensitive" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionRepository.SyntaxTree">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionRepository.SyntaxTree" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeCompletionRepository.SyntaxTrees">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionRepository.SyntaxTrees" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeCompletionRepository.Snippets">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Syntax.CodeCompletionRepository.MemberLookup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Syntax.CodeCompletionRepository.DescriptionLookup">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetMemberKey(System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.CanAddMember(QWhale.Syntax.IListMembers,System.String,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.AddMember(QWhale.Syntax.IListMembers,System.String,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.ShouldDuplicate(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.HasDescriptions(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.UpdateMethodParams(QWhale.Syntax.IListMember,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.UpdateMethodParams(QWhale.Syntax.IListMembers,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.DoFillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Collections.IList,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.DoFindDeclaration(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetNodeType(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetNodeType(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetSpecialMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetSpecialMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetMethodType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,System.Int32@amp;,System.Int32@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMethodType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,System.Int32@amp;,System.Int32@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.FillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,System.Int32,QWhale.Syntax.StaticScope)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,System.Int32,QWhale.Syntax.StaticScope)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.FindDeclaration(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FindDeclaration(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.RegisterSyntaxTree(QWhale.Syntax.ISyntaxTree)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.RegisterSyntaxTree(QWhale.Syntax.ISyntaxTree)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.UnregisterSyntaxTree(QWhale.Syntax.ISyntaxTree)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.UnregisterSyntaxTree(QWhale.Syntax.ISyntaxTree)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.RegisterSnippet(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.RegisterSnippet(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.UnregisterSnippet(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.UnregisterSnippet(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeCompletionRepository.GetCodeSnippets(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetCodeSnippets(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeCompletionType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.CodeCompletionType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.CompleteWord">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.ListMembers">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.ParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.QuickInfo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.CodeSnippets">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.CodeCompletionType.SpecialListMembers">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippet">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippet.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippet" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippet.#ctor(QWhale.Syntax.ICodeSnippets)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippet" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippet.Parent">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Parent" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.Header">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Header" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippet.SnippetHeader">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.Declarations">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Declarations" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippet.SnippetDeclarations">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.Imports">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Imports" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippet.SnippetImports">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.References">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.References" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippet.SnippetReferences">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.Code">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Code" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippet.SnippetCode">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.Description">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.Description" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.ImageIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.ImageIndex" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippet.CustomData">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippet.CustomData" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippet.CompareTo(System.Object)">
      <summary>Implements <see cref="M:System.IComparable.CompareTo(System.Object)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetCode">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetCode.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetCode" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetCode.Delimiter">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetCode.Delimiter" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetCode.Kind">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetCode.Kind" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetCode.Language">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetCode.Language" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetCode.Code">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetCode.Code" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetCode.Assign(QWhale.Syntax.ICodeSnippetCode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetCode.Assign(QWhale.Syntax.ICodeSnippetCode)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetDeclaration">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetDeclaration.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetDeclaration" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetDeclaration.Literals">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetDeclaration.Literals" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetDeclaration.SnippetLiterals">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetDeclaration.Objects">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetDeclaration.Objects" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetDeclaration.SnippetObjects">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetDeclarations">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetDeclarations.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetDeclarations" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetDeclarations.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetDeclarations.AddDeclaration">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetDeclarations.AddDeclaration" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetDeclarations.InsertDeclaration(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetDeclarations.InsertDeclaration(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetHeader">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetHeader.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetHeader" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetHeader.Title">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetHeader.Title" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetHeader.Description">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetHeader.Description" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetHeader.Author">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetHeader.Author" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetHeader.Shortcut">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetHeader.Shortcut" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetHeader.Types">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetHeader.Types" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetHeader.SnippetTypes">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetHeader.Assign(QWhale.Syntax.ICodeSnippetHeader)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetHeader.Assign(QWhale.Syntax.ICodeSnippetHeader)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetImport">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetImport.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetImport" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetImport.Namespace">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetImport.Namespace" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetImports">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetImports.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetImports" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetImports.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetImports.AddImport">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetImports.AddImport" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetImports.InsertImport(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetImports.InsertImport(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetList" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippetList.NeedClear(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.NeedClear(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.BlockDeleting(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.GetFirstSnippet">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.GetNextSnippet(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.GetPrevSnippet(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.IsFirstSnippet(QWhale.Common.IRange)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.IsFirstSnippet(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.FindSnippet(System.Drawing.Point,System.Boolean,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetList.Sort">
      <summary>Overridden. See <see cref="M:System.Collections.ArrayList.Sort" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetLiteral">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetLiteral.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetLiteral" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.Default">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.Default" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.Function">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.Function" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.ID">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.ID" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.ToolTip">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.ToolTip" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.Editable">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.Editable" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetLiteral.Type">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetLiteral.Type" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetLiterals">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetLiterals.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetLiterals" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetLiterals.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetLiterals.AddLiteral">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetLiterals.AddLiteral" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetLiterals.InsertLiteral(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetLiterals.InsertLiteral(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippetMember.#ctor(QWhale.Syntax.ICodeSnippetMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetMember" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetMember.Parent">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.Parent" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.EditPath">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.EditPath" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.Path">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.Path" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.ImageIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.ImageIndex" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.SnippetsAndMembers">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.SnippetsAndMembers" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.Members">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.Members" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetMember.CodeSnippetMembers">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMember.Snippets">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMember.Snippets" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetMember.CodeSnippets">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMember.FixupMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMember.FixupSnippets">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMember.CompareTo(System.Object)">
      <summary>Implements <see cref="M:System.IComparable.CompareTo(System.Object)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetMembers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetMembers" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.#ctor(QWhale.Syntax.ICodeSnippetMember)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetMembers" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetMembers.ColumnCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMembers.EditPath">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.EditPath" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMembers.Parent">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetMembers.Parent" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMembers.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.CodeSnippetMembers.Members">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMembers.Images">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Images" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetMembers.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Syntax.CodeCompletionProvider.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.FixupMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.OnClosePopup(System.Object,QWhale.Syntax.ClosingEventArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.OnClosePopup(System.Object,QWhale.Syntax.ClosingEventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.AddSnippetMember">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetMembers.AddSnippetMember" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.InsertSnippetMember(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetMembers.InsertSnippetMember(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetImageIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetImageIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetColumnText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.ColumnVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.GetParent">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetParent" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetMembers.FindByShortcut(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetsProvider.FindByShortcut(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetObject">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetObject.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetObject" />		 class.	</summary></member>
    <member name="T:QWhale.Syntax.CodeSnippetObjects">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetObjects.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetObjects" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetObjects.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetObjects.AddObject">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetObjects.AddObject" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetObjects.InsertObject(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetObjects.InsertObject(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetReference">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetReference.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetReference" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetReference.Assembly">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetReference.Assembly" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetReference.Url">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetReference.Url" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetReferences">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetReferences.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetReferences" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetReferences.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetReferences.AddReference">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetReferences.AddReference" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetReferences.InsertReference(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetReferences.InsertReference(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippets">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippets.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippets" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippets.#ctor(QWhale.Syntax.ICodeSnippetMember)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippets" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippets.ColumnCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippets.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippets.EditPath">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.EditPath" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippets.Images">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Images" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippets.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Syntax.CodeCompletionProvider.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.AddSnippet">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippets.AddSnippet" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.InsertSnippet(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippets.InsertSnippet(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetParent">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetParent" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetDescription(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetDescription(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetImageIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetImageIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.GetColumnText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.ColumnVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippets.FindByShortcut(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetsProvider.FindByShortcut(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetsProvider">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetsProvider" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.#ctor(QWhale.Syntax.ICodeSnippetMember)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetsProvider" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetsProvider.ColumnCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetsProvider.EditPath">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.EditPath" />.</summary>
    </member>
    <member name="QWhale.Syntax.CodeSnippetsProvider.Images">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.Images" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetParent">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetParent" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.OnClosePopup(System.Object,QWhale.Syntax.ClosingEventArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.OnClosePopup(System.Object,QWhale.Syntax.ClosingEventArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetDescription(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetDescription(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetImageIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetImageIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.GetColumnText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.ColumnVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetsProvider.FindByShortcut(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetsProvider.FindByShortcut(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetType">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetType.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetType" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetType.SnippetType">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeSnippetType.SnippetType" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.CodeSnippetTypes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.CodeSnippetTypes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.CodeSnippetTypes" />		 class.	</summary></member>
    <member name="QWhale.Syntax.CodeSnippetTypes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetTypes.AddSnippetType">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetTypes.AddSnippetType" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.CodeSnippetTypes.InsertSnippetType(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeSnippetTypes.InsertSnippetType(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ColorTheme">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ColorTheme.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ColorTheme" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.ColorTheme.#ctor(System.String,System.Boolean,System.String,System.Single,System.Drawing.FontStyle,QWhale.Syntax.LexStyle[])">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ColorTheme" />		 class.	</summary></member>
    <member name="QWhale.Syntax.ColorTheme.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorTheme.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.ColorTheme.ReadOnly">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorTheme.ReadOnly" />.</summary>
    </member>
    <member name="QWhale.Syntax.ColorTheme.Font">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorTheme.Font" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.ColorTheme.FontName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ColorTheme.FontSize">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ColorTheme.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.ColorTheme.LexStyles">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorTheme.LexStyles" />.</summary>
    </member>
    <member name="QWhale.Syntax.ColorTheme.Item">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorTheme.Item(System.String)" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.ColorTheme.xmlFontName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ColorTheme.xmlFontSize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ColorTheme.xmlFontStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ColorTheme.Contains(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IColorTheme.Contains(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ColorTheme.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ColorThemes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ColorThemes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ColorThemes" />		 class.	</summary></member>
    <member name="QWhale.Syntax.ColorThemes.ActiveThemeIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorThemes.ActiveThemeIndex" />.</summary>
    </member>
    <member name="QWhale.Syntax.ColorThemes.ActiveTheme">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorThemes.ActiveTheme" />.</summary>
    </member>
    <member name="QWhale.Syntax.ColorThemes.Themes">
      <summary>Implements <see cref="P:QWhale.Syntax.IColorThemes.Themes" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ColorThemes.Add(QWhale.Syntax.IColorTheme)">
      <summary>Implements <see cref="M:QWhale.Syntax.IColorThemes.Add(QWhale.Syntax.IColorTheme)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ColorThemes.Remove(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.IColorThemes.Remove(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ColorThemes.Clear">
      <summary>Implements <see cref="M:QWhale.Syntax.IColorThemes.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ColorThemes.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.DescriptionLookupEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.DescriptionLookupEventArgs.#ctor(System.Object,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.DescriptionLookupEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.DescriptionLookupEventArgs.Member">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.DescriptionLookupEventArgs.Name">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.DescriptionLookupEventArgs.Description">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.HtmlLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.WhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.Body">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.OpenTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.CloseTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.OpenEndTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.CloseEndTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.Equal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.TagName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.ParamName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.ParamValue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.HtmlLexerToken.Comment">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.HtmlParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.HtmlParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.HtmlParser" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.HtmlParser.lexParamColorProc">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.HtmlParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.HtmlParser.LexParamColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.HtmlParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.HtmlParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.HtmlParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeCompletionProvider">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.Strings">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.ImageIndexes">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.Descriptions">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.ShowDescriptions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.SelIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.Images">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.UseIndent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.UseHtmlFormatting">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.EditField">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionProvider.EditPath">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Syntax.ICodeCompletionProvider.ClosePopup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Syntax.ICodeCompletionProvider.ShowPopup">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.IndexOfName(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.GetParent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.SaveFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.SaveStream(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.SaveStream(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.LoadFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.LoadStream(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.LoadStream(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.Sort">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionProvider.Sort(System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeCompletionRepository">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeCompletionRepository.FillBaseMembers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionRepository.CaseSensitive">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionRepository.SyntaxTree">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeCompletionRepository.SyntaxTrees">
      <summary>Gets</summary>
    </member>
    <member name="E:QWhale.Syntax.ICodeCompletionRepository.MemberLookup">
	<summary>
		
	</summary>
</member>
    <member name="E:QWhale.Syntax.ICodeCompletionRepository.DescriptionLookup">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetNodeType(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetSpecialMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetMethodType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,System.Int32@amp;,System.Int32@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.FillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,System.Int32,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.FindDeclaration(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.RegisterSyntaxTree(QWhale.Syntax.ISyntaxTree)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.UnregisterSyntaxTree(QWhale.Syntax.ISyntaxTree)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.RegisterSnippet(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.UnregisterSnippet(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeCompletionRepository.GetCodeSnippets(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippet">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Header">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Declarations">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Imports">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.References">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Code">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Description">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.CustomData">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippet.Parent">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetCode">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetCode.Delimiter">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetCode.Kind">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetCode.Language">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetCode.Code">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetCode.Assign(QWhale.Syntax.ICodeSnippetCode)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetDeclaration">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetDeclaration.Literals">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetDeclaration.Objects">
      <summary>Gets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetDeclarations">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetDeclarations.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetDeclarations.AddDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetDeclarations.InsertDeclaration(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetHeader">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetHeader.Title">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetHeader.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetHeader.Author">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetHeader.Shortcut">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetHeader.Types">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetHeader.Assign(QWhale.Syntax.ICodeSnippetHeader)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetImport">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetImport.Namespace">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetImports">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetImports.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetImports.AddImport">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetImports.InsertImport(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetLiteral">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.Default">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.Function">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.ID">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.Type">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.ToolTip">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetLiteral.Editable">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetLiterals">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetLiterals.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetLiterals.AddLiteral">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetLiterals.InsertLiteral(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetMember">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.EditPath">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.Path">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.Members">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.Snippets">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.SnippetsAndMembers">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMember.Parent">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetMembers">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetMembers.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetMembers.Parent">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetMembers.AddSnippetMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetMembers.InsertSnippetMember(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetObject">
	<summary>
		
	</summary>
</member>
    <member name="T:QWhale.Syntax.ICodeSnippetObjects">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetObjects.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetObjects.AddObject">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetObjects.InsertObject(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetReference">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetReference.Assembly">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ICodeSnippetReference.Url">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetReferences">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetReferences.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetReferences.AddReference">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetReferences.InsertReference(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippets">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippets.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippets.AddSnippet">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippets.InsertSnippet(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetsProvider">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ICodeSnippetsProvider.FindByShortcut(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetType">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ICodeSnippetType.SnippetType">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ICodeSnippetTypes">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ICodeSnippetTypes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetTypes.AddSnippetType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ICodeSnippetTypes.InsertSnippetType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IColorTheme">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IColorTheme.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorTheme.ReadOnly">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorTheme.Font">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorTheme.LexStyles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorTheme.Item(System.String)">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.IColorTheme.Contains(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IColorThemes">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IColorThemes.ActiveThemeIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorThemes.ActiveTheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IColorThemes.Themes">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.IColorThemes.Add(QWhale.Syntax.IColorTheme)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IColorThemes.Remove(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IColorThemes.Clear">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IExport">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.IExport.SaveFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IImport">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.IImport.LoadFile(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexer">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexer.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexer.XmlScheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexer.DefaultState">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Syntax.ILexer.TextParsed">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int32@amp;,System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.SaveScheme(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.LoadScheme(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.SaveScheme(System.IO.TextWriter)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.LoadScheme(System.IO.TextReader)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexer.ResetDefaultState">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexReswordSet">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexReswordSet.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexReswordSet.ReswordStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexReswordSet.Reswords">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexReswordSet.Index">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSet.AddResword(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSet.FindResword(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSet.Clear">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexReswordSets">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ILexReswordSets.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSets.AddLexReswordSet">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSets.InsertLexReswordSet(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexReswordSets.FindResword(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexScheme">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexScheme.Author">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.Desc">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.Copyright">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.FileExtension">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.FileType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.Version">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.LexStyles">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexScheme.LexStates">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexScheme.IsEmpty">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexScheme.IsPlainText(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexScheme.ClearScheme">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexState">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexState.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.Desc">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.CaseSensitive">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.Expression">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.LexSyntaxBlocks">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.Regex">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexState.Index">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexState.ResetCaseSensitive">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexStates">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ILexStates.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStates.AddLexState">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStates.InsertLexState(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStates.FindLexState(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexStyle">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexStyle.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.Desc">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.ForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.BackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.FontStyle">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.ForeColorEnabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.BackColorEnabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.BoldEnabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.ItalicEnabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.UnderlineEnabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.PlainText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexStyle.Index">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyle.Assign(QWhale.Syntax.ILexStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyle.ResetForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyle.ResetBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyle.ResetFontStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyle.ResetPlainText">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexStyles">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ILexStyles.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyles.AddLexStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyles.InsertLexStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexStyles.FindLexStyle(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexSyntaxBlock">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Desc">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Style">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.LeaveState">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.LexReswordSets">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Expressions">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Expression">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ILexSyntaxBlock.Index">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexSyntaxBlock.FindResword(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexSyntaxBlock.AddExpression(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ILexSyntaxBlocks">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ILexSyntaxBlocks.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ILexSyntaxBlocks.AddLexSyntaxBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexSyntaxBlocks.InsertLexSyntaxBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ILexSyntaxBlocks.FindSyntaxBlock(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IListMember">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IListMember.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.DisplayText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.DataType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.Qualifier">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.Overloads">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.CustomData">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.ParamText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.Parameters">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.CurrentParamIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.OwnDescription">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.OwnDescriptionText">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.ImageIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMember.Owner">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.IListMember.GetOwnDescription">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMember.UpdateParamText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMember.GetParamText(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IListMembers">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.IListMembers.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMembers.ShowQualifiers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMembers.ShowResults">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMembers.ShowParams">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IListMembers.ShowHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.CreateListMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.AddMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.InsertMember(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.GetListMember(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.ResetShowQualifiers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.ResetShowResults">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.ResetShowParams">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IListMembers.ResetShowHints">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.INotifier">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.INotifier.Notification(System.Object,System.EventArgs)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.INotify">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.INotify.UpdateCount">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.INotify.BeginUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.INotify.EndUpdate">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.INotify.AddNotifier(QWhale.Syntax.INotifier)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.INotify.RemoveNotifier(QWhale.Syntax.INotifier)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.INotify.Notify">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IOutlineRange">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IOutlineRange.Text">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IOutlineRange.DisplayText">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IOutlineRange.Visible">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IOutlineRange.Level">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.IParameterInfo">
	<summary>
		
	</summary>
</member>
    <member name="T:QWhale.Syntax.IParameterMember">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IParameterMember.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParameterMember.DataType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParameterMember.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParameterMember.Qualifier">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParameterMember.Text">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParameterMember.Modifiers">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.IParser">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IParser.Token">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.State">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.TokenString">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.TokenPosition">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.CurrentPosition">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.Eof">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.Strings">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IParser.Lines">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.Reset">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.Reset(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.NextToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.NextToken(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.PeekToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.PeekToken(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.PeekValidToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.PeekValidToken(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.NextValidToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.NextValidToken(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.SaveState">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.RestoreState">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.IParser.RestoreState(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.IQuickInfo">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IQuickInfo.Text">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.IStringList">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.IStringList.Item(System.Int32)">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.IStringList.Text">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.IStringList.LineTerminator">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxAttribute">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ISyntaxAttribute.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxAttribute.Value">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxAttribute.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxAttributes">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ISyntaxAttributes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxError">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ISyntaxError.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxError.Description">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxError.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxError.Size">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxError.Range">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxErrors">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ISyntaxErrors.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxNode">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Range">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Position">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Size">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Name">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.NodeType">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Parent">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Root">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Childs">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Attributes">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Errors">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.ChildList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.AttributeList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.ErrorList">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.HasChildren">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.HasAttributes">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.HasErrors">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Level">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.ChildCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.AttributeCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.ErrorCount">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxNode.Index">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddChild(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddChild">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.InsertChild(QWhale.Syntax.ISyntaxNode,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddChildren(QWhale.Syntax.ISyntaxNodes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddAttribute">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddAttributes(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddError(QWhale.Syntax.ISyntaxError)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.AddErrors(QWhale.Syntax.ISyntaxErrors)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.FindNode(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.FindNode(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.FindNode(System.Object,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.FindAttribute(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.Sort(System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxNode.GetIndent(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxNodes">
	<summary>
		
	</summary>
</member>
    <member name="QWhale.Syntax.ISyntaxNodes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxParser">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ISyntaxParser.Options">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.SyntaxTree">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.CompletionRepository">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.CodeSnippets">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.CaseSensitive">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.UseScheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.CodeCompletionChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.CodeCompletionStopChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.AutoIndentChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxParser.SmartFormatChars">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Syntax.ISyntaxParser.TextReparsed">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ReparseText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point,QWhale.Syntax.ISyntaxNode@amp;,QWhale.Syntax.CodeCompletionType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.Outline(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.GetSmartIndent(System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.SmartFormatLine(System.Int32,System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.GetSyntaxErrors(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.CodeCompletion(System.String,System.Drawing.Point,QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.GetNodeAt(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.FindDeclaration(System.String,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ResetOptions">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.ResetSmartFormatChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxParser.IsContentDivider(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ISyntaxTree">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.ISyntaxTree.Root">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.ISyntaxTree.Current">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.Clear">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.Push(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.Pop">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.BlockDeleting(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Syntax.UpdateReason)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.FindNode(System.Object,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ISyntaxTree.Sort(System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Lexer">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Lexer.#ctor(System.ComponentModel.IContainer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Lexer" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Lexer.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Lexer" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Lexer.UpdateCount">
      <summary>Implements <see cref="P:QWhale.Syntax.INotify.UpdateCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.Lexer.XmlScheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.XmlScheme" />.</summary>
    </member>
    <member name="QWhale.Syntax.Lexer.Scheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.Scheme" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.Lexer.LexScheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.Lexer.DefaultState">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.DefaultState" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.Lexer.XmlInfo">
      <summary>Gets or sets</summary>
    </member>
    <member name="E:QWhale.Syntax.Lexer.TextParsed">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Lexer.Dispose(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.CreateLexScheme">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.BeginUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.BeginUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.EndUpdate">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.EndUpdate" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.AddNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.AddNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.RemoveNotifier(QWhale.Syntax.INotifier)">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.RemoveNotifier(QWhale.Syntax.INotifier)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.Notify">
      <summary>Implements <see cref="M:QWhale.Syntax.INotify.Notify" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.OnTextParsed(System.String,System.Int16[]@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.ParseText(System.Int32,System.Int32,System.String,System.Int32@amp;,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int32@amp;,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.ParseText(System.Int32,System.Int32,System.String,System.Int16[]@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int16[]@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.ShouldSerializeToCode">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.SaveScheme(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.SaveScheme(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.LoadScheme(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.LoadScheme(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.SaveScheme(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.SaveScheme(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.SaveScheme(System.IO.TextWriter,QWhale.Syntax.LexScheme)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.LoadScheme(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.LoadScheme(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Lexer.ResetDefaultState">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.ResetDefaultState" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.LexReswordSet">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexReswordSet.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexReswordSet" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.LexReswordSet.#ctor(QWhale.Syntax.ILexScheme,QWhale.Syntax.ILexReswordSets,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexReswordSet" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.LexReswordSet.CaseSensitive">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexReswordSet.ReswordStyle">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexReswordSet.ReswordStyle" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexReswordSet.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexReswordSet.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexReswordSet.Index">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexReswordSet.Index" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexReswordSet.ReswordStyleIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexReswordSet.Reswords">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexReswordSet.Reswords" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSet.AddResword(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSet.AddResword(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSet.Clear">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSet.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSet.FindResword(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSet.FindResword(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexReswordSets">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexReswordSets.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexReswordSets" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexReswordSets.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSets.AddLexReswordSet">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSets.AddLexReswordSet" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSets.InsertLexReswordSet(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSets.InsertLexReswordSet(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexReswordSets.FindResword(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexReswordSets.FindResword(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexScheme">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexScheme.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexScheme" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexScheme.Author">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.Author" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.Desc">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.Desc" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.Copyright">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.Copyright" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.FileExtension">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.FileExtension" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.FileType">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.FileType" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.Version">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.Version" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.LexStyles">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.LexStyles" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexScheme.LexStates">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexScheme.LexStates" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexScheme.Styles">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.LexScheme.States">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.LexScheme.ClearScheme">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexScheme.ClearScheme" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexScheme.GetLexState(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexScheme.GetLexStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexScheme.IsPlainText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexScheme.IsPlainText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexScheme.IsEmpty">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexScheme.IsEmpty" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexState">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexState.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexState" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.LexState.#ctor(QWhale.Syntax.ILexScheme)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexState" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexState.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexState.Desc">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.Desc" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexState.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.CaseSensitive" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexState.LexSyntaxBlocks">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.LexSyntaxBlocks" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexState.SyntaxBlocks">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexState.Expression">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.Expression" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexState.Regex">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.Regex" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexState.Index">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexState.Index" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexState.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.LexState.FindSyntaxBlock(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexState.ResetCaseSensitive">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexState.ResetCaseSensitive" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexStates">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexStates.#ctor(QWhale.Syntax.ILexScheme)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexStates" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexStates.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStates.AddLexState">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStates.AddLexState" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStates.InsertLexState(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStates.InsertLexState(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStates.FindLexState(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStates.FindLexState(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexStyle">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexStyle.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexStyle" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.LexStyle.#ctor(QWhale.Syntax.ILexScheme)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexStyle" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexStyle.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.Desc">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.Desc" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.ForeColor">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.ForeColor" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.BackColor">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.BackColor" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexStyle.XmlForeColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.LexStyle.XmlBackColor">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.FontStyle">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.FontStyle" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.Index">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.Index" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.PlainText">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.PlainText" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexStyle.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.ForeColorEnabled">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.ForeColorEnabled" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.BackColorEnabled">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.BackColorEnabled" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.BoldEnabled">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.BoldEnabled" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.ItalicEnabled">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.ItalicEnabled" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexStyle.UnderlineEnabled">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexStyle.UnderlineEnabled" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.Update">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.Assign(QWhale.Syntax.ILexStyle)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyle.Assign(QWhale.Syntax.ILexStyle)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ResetBackColor">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyle.ResetBackColor" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ResetForeColor">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyle.ResetForeColor" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ResetFontStyle">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyle.ResetFontStyle" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ResetPlainText">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyle.ResetPlainText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ShouldSerializeXmlForeColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ShouldSerializeXmlBackColor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ShouldSerializePlainText">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyle.ShouldSerializeFontStyle">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.LexStyles">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexStyles.#ctor(QWhale.Syntax.ILexScheme)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexStyles" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexStyles.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyles.AddLexStyle">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyles.AddLexStyle" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyles.InsertLexStyle(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyles.InsertLexStyle(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexStyles.FindLexStyle(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexStyles.FindLexStyle(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexSyntaxBlock">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexSyntaxBlock" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.#ctor(QWhale.Syntax.ILexScheme,QWhale.Syntax.ILexSyntaxBlocks)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexSyntaxBlock" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Desc">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Desc" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexSyntaxBlock.CaseSensitive">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Style">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Style" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.LeaveState">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.LeaveState" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexSyntaxBlock.LexStyleIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.LexSyntaxBlock.LeaveStateIndex">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.LexReswordSets">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.LexReswordSets" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexSyntaxBlock.ReswordSets">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Expressions">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Expressions" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Expression">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Expression" />.</summary>
    </member>
    <member name="QWhale.Syntax.LexSyntaxBlock.Index">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexSyntaxBlock.Index" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.LexSyntaxBlock.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.FindResword(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexSyntaxBlock.FindResword(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.AddExpression(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexSyntaxBlock.AddExpression(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.ShouldSerializeReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlock.ShouldSerializeReswordSets">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.LexSyntaxBlocks">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.LexSyntaxBlocks.#ctor(QWhale.Syntax.ILexState,QWhale.Syntax.ILexScheme)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.LexSyntaxBlocks" />		 class.	</summary></member>
    <member name="QWhale.Syntax.LexSyntaxBlocks.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlocks.AddLexSyntaxBlock">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexSyntaxBlocks.AddLexSyntaxBlock" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlocks.InsertLexSyntaxBlock(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexSyntaxBlocks.InsertLexSyntaxBlock(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.LexSyntaxBlocks.FindSyntaxBlock(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexSyntaxBlocks.FindSyntaxBlock(System.String)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.LexToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.LexToken.Identifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Number">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Resword">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.XmlComment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Symbol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Whitespace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.LexToken.Directive">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ListMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ListMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.ListMember.#ctor(QWhale.Syntax.IListMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ListMember" />		 class.	</summary></member>
    <member name="QWhale.Syntax.ListMember.Owner">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Owner" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.DisplayText">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.DisplayText" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.DataType">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.DataType" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.Description">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Description" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.ImageIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.ImageIndex" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.Qualifier">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Qualifier" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.CustomData">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.CustomData" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.ParamText">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.ParamText" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.Parameters">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Parameters" />.</summary>
    </member>
    <member name="P:QWhale.Syntax.ListMember.Params">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.Overloads">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.Overloads" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.OwnDescription">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.OwnDescription" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.OwnDescriptionText">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.OwnDescriptionText" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMember.CurrentParamIndex">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMember.CurrentParamIndex" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMember.UpdateParamText">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.UpdateParamText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMember.GetParamText(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetParamText(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMember.GetOwnDescription">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetOwnDescription" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMember.CompareTo(System.Object)">
      <summary>Implements <see cref="M:System.IComparable.CompareTo(System.Object)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ListMembers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ListMembers.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ListMembers" />		 class.	</summary></member>
    <member name="QWhale.Syntax.ListMembers.ColumnCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ICodeCompletionProvider.ColumnCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.ShowQualifiers">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMembers.ShowQualifiers" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.ShowResults">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMembers.ShowResults" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.ShowParams">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMembers.ShowParams" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.ShowHints">
      <summary>Implements <see cref="P:QWhale.Syntax.IListMembers.ShowHints" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="QWhale.Syntax.ListMembers.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Syntax.CodeCompletionProvider.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetImageIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetImageIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetDescription(System.Int32)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionProvider.GetDescription(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetListMember(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.GetListMember(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.AddMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.AddMember" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.InsertMember(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.InsertMember(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.GetColumnText(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetColumnText(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.ColumnVisible(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.ColumnVisible(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.ResetShowHints">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.ResetShowHints" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.ResetShowParams">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.ResetShowParams" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.ResetShowQualifiers">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.ResetShowQualifiers" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.ListMembers.ResetShowResults">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.ResetShowResults" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.MemberLookupEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.MemberLookupEventArgs.#ctor(System.Object,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.MemberLookupEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.MemberLookupEventArgs.Member">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.MemberLookupEventArgs.Name">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.MemberLookupEventArgs.Result">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.MemberLookupEventArgs.Scope">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.OutlineRange">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.OutlineRange.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.OutlineRange" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.OutlineRange.#ctor(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.OutlineRange" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.OutlineRange.#ctor(System.Drawing.Point,System.Drawing.Point,System.Int32,System.String,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.OutlineRange" />		 class.	</summary></member>
    <member name="QWhale.Syntax.OutlineRange.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IOutlineRange.Text" />.</summary>
    </member>
    <member name="QWhale.Syntax.OutlineRange.DisplayText">
      <summary>Implements <see cref="P:QWhale.Syntax.IOutlineRange.DisplayText" />.</summary>
    </member>
    <member name="QWhale.Syntax.OutlineRange.Visible">
      <summary>Implements <see cref="P:QWhale.Syntax.IOutlineRange.Visible" />.</summary>
    </member>
    <member name="QWhale.Syntax.OutlineRange.Level">
      <summary>Implements <see cref="P:QWhale.Syntax.IOutlineRange.Level" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ParameterInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ParameterInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ParameterInfo" />		 class.	</summary></member>
    <member name="T:QWhale.Syntax.ParameterMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ParameterMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ParameterMember" />		 class.	</summary></member>
    <member name="QWhale.Syntax.ParameterMember.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.ParameterMember.DataType">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.DataType" />.</summary>
    </member>
    <member name="QWhale.Syntax.ParameterMember.Description">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.Description" />.</summary>
    </member>
    <member name="QWhale.Syntax.ParameterMember.Qualifier">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.Qualifier" />.</summary>
    </member>
    <member name="QWhale.Syntax.ParameterMember.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.Text" />.</summary>
    </member>
    <member name="QWhale.Syntax.ParameterMember.Modifiers">
      <summary>Implements <see cref="P:QWhale.Syntax.IParameterMember.Modifiers" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.ParameterModifer">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.ParameterModifer.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ParameterModifer.Optional">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ParameterModifer.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ParameterModifer.Out">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ParameterModifer.Retval">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parser" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parser.Stack">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Syntax.Parser.Eof">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.Eof" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.Token">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.Token" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.State">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.State" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.TokenString">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.TokenString" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.TokenPosition">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.TokenPosition" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.CurrentPosition">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.CurrentPosition" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.Strings">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.Strings" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parser.Lines">
      <summary>Implements <see cref="P:QWhale.Syntax.IParser.Lines" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parser.lineIndex">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parser.tokenPos">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parser.currentPos">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parser.source">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.ResetLine(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.UpdateLine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.Reset(System.Int32,System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.Reset(System.Int32,System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.StateChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.ValidatePosition(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.Reset">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.Reset" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.NextToken">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.NextToken" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.NextToken(System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.NextToken(System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.PeekToken">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.PeekToken" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.PeekToken(System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.PeekToken(System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.PeekValidToken">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.PeekValidToken" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.PeekValidToken(System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.PeekValidToken(System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.DoNextValidToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.SetToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.NextValidToken">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.NextValidToken" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.NextValidToken(System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.NextValidToken(System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.SaveState">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.SaveState" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.RestoreState">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.RestoreState" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parser.RestoreState(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.RestoreState(System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.CsLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Unit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Abstract">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.As">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Add">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Assembly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Bool">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Break">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Byte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Catch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Checked">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Class">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Consts">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Continue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Delegate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Enum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Event">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Explicit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Extern">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Finally">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Fixed">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Float">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Foreach">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Goto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Implicit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Int">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Interface">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Internal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Is">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Lock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Namespace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Null">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Operator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Out">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Override">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Params">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Protected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Readonly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Ref">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Return">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Remove">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Sbyte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Sealed">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Short">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Sizeof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Stackalloc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Static">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Struct">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Switch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.This">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Throw">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Try">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Typeof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Uint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Ulong">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Unchecked">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Unsafe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Ushort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Using">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Virtual">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Void">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Volatile">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.ArgList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Partial">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Where">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Yield">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Value">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Alias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Get">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Open_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Close_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Open_bracket">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Close_bracket">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Colon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.DblColon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Tilde">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Bang">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Bitwise_and">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Bitwise_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Carret">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Interr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.DblInterr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_inc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_dec">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_shift_left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_shift_right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_eq">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_and">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_mult_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_div_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_mod_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_add_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_sub_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_shift_left_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_shift_right_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_and_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_xor_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_or_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Op_ptr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.XmlComment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Decimal_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Character_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Xmlcomment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Directive_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.CsListMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.CsListMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.CsListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.CsListMember.#ctor(QWhale.Syntax.IListMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.CsListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.CsListMember.GetOwnDescription">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetOwnDescription" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsListMember.GetParamText(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetParamText(System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.CsListMembers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.CsListMembers.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.CsListMembers" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.CsListMembers.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.CsParameterInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.CsParameterInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.CsParameterInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.CsParameterInfo.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.CsParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.CsParser" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.reswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexStringEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexCommentEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexDefineProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexDefineEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexXmlCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.CsParser.lexXmlCommentTagProc">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexHexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexCommentEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexXmlComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexXmlCommentTag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexDefineEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexDefine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexString(System.Char)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexStringEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsKeywordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.SkipComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.SkipTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.SkipTo(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsIdentifierToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.Expected(QWhale.Syntax.Parsers.CsLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.Expected(QWhale.Syntax.Parsers.CsLexerToken,QWhale.Syntax.Parsers.CsLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeIdentifier(System.String@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseRankSpecifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseRankSpecifiers(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsBuiltInType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBaseList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsBaseList(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.SkipToDeclarationStart(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBaseList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDeclarationBodyEnd(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDeclarationBody(QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseEnumMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseEnumBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseClassBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseKnownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUnknownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDirective">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUsingDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUsingDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUsingList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUsingList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAttributeListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseAttributeSpecifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAttributeDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePositionalOrNamedParam">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDelegateDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseParameterListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseParameterListDeclaration(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseEventDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePropertyDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePropertyDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseIndexerDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsAccessor(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAccessors(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConstructorDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConstructorInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDestructorDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseFieldDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseVariableDeclaration(System.Drawing.Point,QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseVariableDeclarators(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseArrayInitializerExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseVariableInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMethodBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAccessorBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseOperatorDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseOperatorDeclaration(QWhale.Syntax.ISyntaxAttributes,System.String,System.Drawing.Point,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseOperatorType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAliasDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAliasList(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsTypeParameterConstraintsClause(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameterConstraintsClauses">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameterConstraintsClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameterConstraint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameterConstraints">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsTypeParameterList(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameterList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeParameter">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsNullableType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseNullableType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsPointerType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePointerType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsTypeArgumentList(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeArgumentList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.IsAccessorModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAccessorModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseYieldStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseParenthesizedStatementExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDefaultExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseGenericExpression(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAnonymousMethodExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseNullCoalescingExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseArgumentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseArgumentExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConditionalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConditionalOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConditionalAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseExclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAsIsType(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseShiftExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCastTargetExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseCastExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseConstantExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseThisAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBaseAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseNewExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeofExpression(QWhale.Syntax.Parsers.NetNodeType,QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTypeofExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSizeofExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCheckedExpression(QWhale.Syntax.Parsers.NetNodeType,QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCheckedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUncheckedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePostIncrementExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePostDecrementExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParsePointerMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseElementAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseOptionalExressionInBracket">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseVariableReference(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseArgument(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseStatementList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseLabeledStatement(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.TryParseVariableDeclarationStatement(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseEmbeddedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseStatementExpression">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseExpressionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseStatementExpressionList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseLocalConstantDeclarationStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseElseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSwitchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSwitchBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSwitchSection">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSwitchLabels">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseSwitchLabel">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseDoWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForCondition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForIterator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForeachStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseForeachInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBreakStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseContinueStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseGotoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseReturnStatement(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseReturnStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseThrowStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseTryStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCatchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCatchStatements">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseFinallyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCheckedStatement(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseCheckedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUncheckedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUnsafeStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseLockStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseUsingStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseFixedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBlockStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ParseBlockStatement(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.SyntaxNodeOptions)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.GetSingleLineComment">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.CreateParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.CreateListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ResetCodeCompletionStopChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ResetAutoIndentChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ResetSmartFormatChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ShouldSerializeCodeCompletionChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ShouldSerializeCodeCompletionStopChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ShouldSerializeSmartFormatChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.CsParser.ShouldSerializeAutoIndentChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeAutoIndentChars" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.INetNamespace">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.Parsers.INetNamespace.Namespace">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.INetNamespace.Alias">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.INetNamespace.System">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.INetNamespace.GetName">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.IReflectionRepository">
	<summary>
		
	</summary>
</member>
    <member name="P:QWhale.Syntax.Parsers.IReflectionRepository.Types">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.IReflectionRepository.Objects">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.IReflectionRepository.Assemblies">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.IReflectionRepository.Namespaces">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterObject(System.String,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterObject(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterType(System.String,System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterType(System.String,System.Type,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterType(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAssembly(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterAssembly(System.Reflection.Assembly,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterAssembly(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAllAssemblies">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterDefaultAssemblies">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.RestrictTypeMembers(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.AllowTypeMembers(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearNamespaces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearObjects">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearAssemblies">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearTypes">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JavaScriptLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Abstract">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Array">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Assert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Break">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Byte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Catch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Class">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Const">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Continue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Debugger">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Delegate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Enum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Export">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Extends">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Final">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Finally">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Float">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Function">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Goto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Implements">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Import">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Instanceof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Int">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Interface">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Multicast">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Native">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Null">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Number">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Package">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Protected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Return">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Short">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Static">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Strictfp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Super">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Switch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Synchronized">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.This">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Throw">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Throws">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Transient">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Try">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Typeof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Using">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Var">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Void">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Volatile">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.With">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Internal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Infinity">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Override">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Hide">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Expando">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Get">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Undefined">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Sbyte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Uint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Ulong">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Ushort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Open_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Close_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Open_bracket">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Close_bracket">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Colon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Interr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_inc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_add_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_dec">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_sub_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_op_eq">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_eq">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Bang">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_and">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_mult_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_div_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_mod_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Bitwise_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Bitwise_xor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Bitwise_and">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_or_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_and_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_xor_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_shift_left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_shift_right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_shift_left_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_shift_right_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_unsigned_shift_right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Op_unsigned_shift_right_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Character_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Directive_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JavaScriptParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JavaScriptParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.JavaScriptParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.reswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexCommentEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexDefineProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.lexDefineEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.stateNormal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.stateDefine">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JavaScriptParser.stateComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IsReswordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexHexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexCommentEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexDefineEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.LexDefine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SkipTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SkipTo(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.Expected(QWhale.Syntax.Parsers.JavaScriptLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.Expected(QWhale.Syntax.Parsers.JavaScriptLexerToken,QWhale.Syntax.Parsers.JavaScriptLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SyntaxError(System.Drawing.Point,System.Drawing.Point,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SyntaxError(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.BeforeDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.AfterDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.InitGlobalModules(QWhale.Syntax.Parsers.IReflectionRepository)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.CreateParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.CreateListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ResetCodeCompletionStopChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ResetAutoIndentChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ResetSmartFormatChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ShouldSerializeCodeCompletionChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ShouldSerializeCodeCompletionStopChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ShouldSerializeSmartFormatChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ShouldSerializeAutoIndentChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ClearStack">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseDefaultBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseMethodDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseReturnType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseParameterListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseParameterListDeclaration(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseMethodBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseVariableDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseVariableDeclarators">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseVariableInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ReparseBlock(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.IsBuiltInType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseRankSpecifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.TryParseRankSpecifiers(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseTypeName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseBlockStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseStatementList(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseExpressionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.SemicolonNeeded">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseEmbeddedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseElseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSwitchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSwitchBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSwitchSection">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSwitchLabels">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSwitchLabel">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseDoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseDoWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseForInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseForeachInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseForCondition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseForIterator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseBreakStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseContinueStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseReturnStatement(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseReturnStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseThrowStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseTryStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseCatchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseStatementExpression">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseStatementExpressionList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseConditionalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseConditionalOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseConditionalAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParsePostIncrementExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParsePostDecrementExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseElementAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseThisAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseNewExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseTypeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseFunctionPrototypeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseTypeofExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseRegularExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseArgument(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptParser.ParseArrayInitializerExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JavaScriptRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JavaScriptRepository" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptRepository.IsNodePartial(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptRepository.GetDeclaration(QWhale.Syntax.ISyntaxTree,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JavaScriptRepository.AddUnitMember(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JScriptNETParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JScriptNETParser" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.IsBuiltInType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.BeforeDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.AfterDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDefaultBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseClassBody(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDirective">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseKnownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.ISyntaxNode,QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseImportList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseImportList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseImportDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseImportDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.IsModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.SkipToDeclarationStart(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseBaseClass">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseBaseList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseEnumType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDeclarationBody(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseEnumBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseEnumMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseGetSetFunction(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseReturnType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseReturnType(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseEmbeddedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseWithStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.TryParseLabeledStatement(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseConditionalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseConditionalAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseExclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseShiftExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseSuperAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseDeleteExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ReparseBlock(QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ReparseImportList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ReparseImport(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ReparseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.ReparseBlock(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JScriptNETParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JsLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Assert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Extends">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Final">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Implements">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Import">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Instanceof">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Native">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Package">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Super">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Synchronized">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Throws">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Strictfp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Transient">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Op_unsigned_shift_right_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Op_unsigned_shift_right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Annotation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.JsLexerToken.Long_Literal">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JsListMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JsListMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JsListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JsListMember.#ctor(QWhale.Syntax.IListMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JsListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JsListMember.UpdateParamText">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.UpdateParamText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsListMember.GetOwnDescription">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetOwnDescription" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsListMember.GetParamText(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetParamText(System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JsListMembers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JsListMembers.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JsListMembers" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JsListMembers.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JsParameterInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JsParameterInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JsParameterInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JsParameterInfo.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.JsParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.JsParser" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.SkipTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.IsBaseList(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.IsBuiltInType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseBound(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseTypeArgumentList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseBaseList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseImportIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.IsAnnotationStart">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseTypeParameter">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseAnnotationInterface(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.AfterDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.BeforeDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseImportDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseImportDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseEnumMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseEnumBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.SkipToDeclarationStart(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseClassBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseKnownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseUnknownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.IsModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseThrowsList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseShiftExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseSuperAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.TryParseIdentifier(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseBreakStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseContinueStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseAssertStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseSynchronizedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseCatchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.TryParseForVarControl">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseForVarControlRest">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseVariableDeclaratorsRest">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseFormalParameter">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.TryParseAnnotation(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseElementValuePair(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseElementValue(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseElementValueList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseEmbeddedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.JsParser.ParseExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.MsSqlLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Abort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Accept">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Access">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Account">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Action">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Add">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.All">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Alter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.And">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Any">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Array">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.As">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Asc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Assert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.At">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Audit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Authorization">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Avg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Base64">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Begin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Between">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Body">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Browse">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.By">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cascade">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cashe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Char_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Check">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Close">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cluster">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Clusters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Colauth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Column">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Columns">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Commit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Compact">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Compress">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Compute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Concat">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Connect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Connections">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Constant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Constraint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Count">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Crash">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Create">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cross">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cube">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Current">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cursor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cycle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Data_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Database">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Dba">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Debugoff">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Debugon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Declare">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Defferable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Deffered">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Definition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Delay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Delta">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Desc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Describe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Digits">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Dispose">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Distinct">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Drop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Elements">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Elsif">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.End">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Entry">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Exception">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Exception_init">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Exclusive">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Exists">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Exit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Expand">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Explicit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Fast">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Fastfirstrow">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Fetch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.File">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Force">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Foreign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Form">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.From">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Full">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Function">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Generic">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Goto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Grant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Group">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Groups">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Hash">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Having">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Holdlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Identfied">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Identified">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.IdentityCol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Immediate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Increment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Index">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Index_Blist">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Indexes">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Index_None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Indicator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Initial">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Initially">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Inner">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Intersect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Into">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Is">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Isolation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Join">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Keep">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Keepfixed">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Key">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Level">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Like">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Limit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Limited">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Lock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Loop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Max">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Maxdop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Maxextents">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Merge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Min">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Minvalue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Mod">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Mode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Modify">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.No">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Noaudit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Nocompress">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Nolock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Not">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Nowait">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Null">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Number">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Number_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Of">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Off">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Offline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.On">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Online">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Open">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Option">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Order">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Others">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Out">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Outer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Package">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Paglock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Partition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Password">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Pctfree">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Plan">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Pragma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Primary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Prior">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Privileges">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Procedure">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Raise">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Range">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Raw">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Readcommited">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Readpast">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Readuncommited">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Record">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.References">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Release">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rem">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rename">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Repeatableread">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Replace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Resource">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Return">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Reverse">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Revoke">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Robust">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rollback">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rollup">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Row">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.RowGuidCol">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rowid">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rowlabel">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rowlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rownum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rows">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Rowtype">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Run">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Savepoint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Schema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Separate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Serializable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Session">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Share">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Show">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Shutdown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Size">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Space">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sql">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sqlcode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sqlerrm">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Start">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Statement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Status">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Stddev">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Stdevp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Subtype">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Successful">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Synonym">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Sysdate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tabauth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Table">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tables">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tablock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tablockx">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Task">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Terminate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Then">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Ties">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.To">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Top">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Transaction">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Trigger">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Type">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Uid">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Union">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Unique">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Unlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Update">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Uplock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Usage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Use">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.User">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Validate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Values">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Varchar2">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Variance">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.View">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Views">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.When">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Whenever">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Where">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.With">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Work">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Xlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Xml">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Xmldata">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Xor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Bit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Real">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Date">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Time">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Interval">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Float">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Bigint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Binary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Numeric">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tinyint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Integer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Varchar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Smallint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Varbinary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Timestamp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Longvarchar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Java_object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Longvarbinary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Tilde">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Bang">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Uxo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Turma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Carret">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Ampersant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Bitwise_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Cav">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Interr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Dollar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Op_Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.Directive_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.MsSqlNodeType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Unit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Create">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Alter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Drop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SelectQuery">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SelectSubQuery">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.QuerySpecification">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Update">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Show">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Top">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Describe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Grant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Revoke">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Commit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Compact">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Roolback">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Shutdown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.QueryHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TableHint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TableHintIndex">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SelectItem">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SearchCondition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CreateTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CreateView">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CreateSchema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CreateUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CreateSequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AlterUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AlterTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropView">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropSchema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropSequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AddStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DropStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AlterStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PrimaryKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ForeignKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.CheckStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.UniqueStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.WhereStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.LimitStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ComputeStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ForStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.FromStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.HavingStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.OptionStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.OrderbyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.GroupbyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.IntoStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.QueryHintStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DefaultStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DeleteStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.UpdateStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ReferenceStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SetStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PredicateStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TableSourceStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.IdentifierList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ColumnList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SelectList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PrivilegesList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.UserList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SearchConditionList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ArgumentList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Expression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ExpressionList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AdditiveExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.OrExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AndExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.MultiplicativeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.LikeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.InExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.RelationalExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.EqualityExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PrimaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PrefixedUnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.UnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.InvocationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.MemberAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ParenthesizedExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TableName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TableAlias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.SchemaName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.VariableName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ColumnName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ColumnAlias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.ContraintName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.Attribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AccountAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AliasAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PasswordAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.AutoCommitAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.IsolationLevelAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TypeAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.PrimaryKeyAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.DatabaseObjectAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.TriggerAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MsSqlNodeType.OldOuterJoinAttribute">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.MSSQLParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.MSSQLParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.MSSQLParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexCommentEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexDefineProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.lexDefineEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.MSSQLParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexCommentEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexDefineEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.LexDefine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.SyntaxError(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.Expected(QWhale.Syntax.Parsers.MsSqlLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.Expected(QWhale.Syntax.Parsers.MsSqlLexerToken,QWhale.Syntax.Parsers.MsSqlLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.Expected(QWhale.Syntax.Parsers.MsSqlLexerToken[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IsReswordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IsQueryToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IsDatatypeToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.IsDateOrIntervalToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseIdentifierList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseColumnName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSelectQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseDirective">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSubQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseQueryExpression">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseQuerySpecification">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTop">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSelectList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSelectItem">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.TryParseColumnName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseIntoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseFromStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseWhereStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseGroupbyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseHavingStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseComputeStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseComputeClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseOrderbyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseOptionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseQueryHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseOrderColumn">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSearchConditionList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseSearchCondition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableSource">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableSourceAlias">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableHint">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableHintIndex">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseColumnAliasList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseTableAlias(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseAlias(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ClearStack">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.MSSQLParser.GetSingleLineComment">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NetNamespace">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.NetNamespace.#ctor(System.String,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.NetNamespace" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.NetNamespace.Namespace">
      <summary>Implements <see cref="P:QWhale.Syntax.Parsers.INetNamespace.Namespace" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parsers.NetNamespace.Alias">
      <summary>Implements <see cref="P:QWhale.Syntax.Parsers.INetNamespace.Alias" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parsers.NetNamespace.System">
      <summary>Implements <see cref="P:QWhale.Syntax.Parsers.INetNamespace.System" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetNamespace.GetName">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.INetNamespace.GetName" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NetNodeType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Unit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UsingList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Using">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UsingAlias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Alias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AliasList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Namespace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Class">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Struct">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Interface">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Enum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Module">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Field">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Constant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.LocalVariable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.FixedVariable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Method">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Constructor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Destructor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Delegate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Property">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Event">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Operator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.OperatorType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Indexer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Parameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ParameterList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Argument">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ArgumentList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Attribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AttributeList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AttributeTarget">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Name">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Type">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PropertyAccessor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EventAccessor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Modifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ArrayModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Region">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ParameterModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.OptionalParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ArraySpecifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.LocalConst">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Statement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.HandlesList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ImplementsList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ThrowsList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeParameterList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeParameterConstraint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeParameterConstraintsClauseList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeParameterConstraintsClause">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlComment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlUnit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlParameterList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.XmlBody">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.LocalConstantDeclarationStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.FixedDeclarationStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.IfStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ElseStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SwitchStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SwitchSectionStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SwitchLabelStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.WhileStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.DoStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.DoWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForConditionStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForInitializerStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForIteratorStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForEachStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForEachInitializerStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForVarControlStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ForVarControlRestStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.VariableDeclaratorsRestStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Annotation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ElementValuePair">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AssertStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SynchronizedStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.VariableModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.VariableModifierList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.VariableDeclaratorsRest">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.BreakStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ContinueStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.GotoStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ReturnStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ThrowStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TryStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CatchStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.FinallyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CheckedStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UncheckedStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UnsafeStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.LockStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UsingStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.FixedStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.LabeledStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.BlockStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ExpressionStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.YieldStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AddHandlerStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CallStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CaseStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CaseElseStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ElseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EndStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EraseStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ErrorStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ExitStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.MidAssignmentStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.OnErrorStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.RaiseEventStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.RedimStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.RemoveHandlerStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ResumeStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SelectStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.StopStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SyncLockStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.WithStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.WithStatementMember">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EmptyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ExpressionList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Expression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ConditionalExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AssignmentExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ConditionalOrExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ConditionalAndExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.InclusiveOrExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ExclusiveOrExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AndExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.NotExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EqualityExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.RelationalExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AsIsExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ShiftExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AdditiveExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.MultiplicativeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PrefixedUnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CastExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CastInvocationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CastInvocationTargetExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CastTargetExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PrimaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ArrayCreationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ObjectCreationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ArrayInitializerExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.BaseAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ThisAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.MemberAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PointerMemberAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ElementAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.InvocationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.CheckedExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.UncheckedExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeofExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SizeofExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ParenthesizedExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PostIncrementExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PostDecrementExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.DefaultExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.GenericExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AnonymousMethodExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.NullCoalescingExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.AddressofExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.GetTypeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.OptionStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EqualityOrAssignmentExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Extern">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.EnumBody">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeDeclaration">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.DeleteExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.InstanceOfExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.PrototypeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.TypeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.RegularExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Execute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ExecuteGlobal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.Randomize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.SetStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetNodeType.ImpExpression">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NETRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.NETRepository" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.NETRepository.Namespaces">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NETRepository.Objects">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NETRepository.Images">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NETRepository.AllowGlobalMembers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NETRepository.BaseClassType">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetQualifiedNode(QWhale.Syntax.ISyntaxNode,System.String,System.String,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetDeclaration(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetSameNodes(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetDeclaration(QWhale.Syntax.ISyntaxTree,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetChildNode(QWhale.Syntax.ISyntaxNodes,QWhale.Syntax.ISyntaxNode,System.String,System.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetChildNode(QWhale.Syntax.ISyntaxNodes,System.Collections.IList,QWhale.Syntax.ISyntaxNode,System.String,System.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetChildByName(QWhale.Syntax.ISyntaxNode,System.String,System.Drawing.Point,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNamespaceNode(QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeByName(QWhale.Syntax.ISyntaxNode,System.String,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetQualifiedType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetChildType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetChildType(System.Collections.IList,System.Drawing.Point,QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetBaseType(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetBaseType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsBlockNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsMethodNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsDeclarationNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsXmlCommentNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsInvocationNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetInvocationNode(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Int32@amp;,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetXmlCommentNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetDeclarationNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetMethodNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetBlockOrMethodNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetBlockNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindXmlNode(QWhale.Syntax.ISyntaxNode,System.String,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetXmlComment(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeQualifier(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeDataType(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeDataType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetValidNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeStaticScope(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsNodePartial(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindMember(System.String,System.Drawing.Point,QWhale.Syntax.ISyntaxNode,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetParameterType(System.Object,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeParameters(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillXmlNodeMembers(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMembers(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsEmbeddedDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillDeclarations(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindDeclarations(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.AddUnitMember(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMembers(QWhale.Syntax.IListMembers,System.Collections.IList,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindUnitMember(QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsScopeValid(QWhale.Syntax.StaticScope,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindDeclaration(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindDeclaration(System.Object,System.Collections.IList,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsDeclarationReference(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsReferenceType(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.CanFilter(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeName(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMember(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillNamespaceTypes(QWhale.Syntax.IListMembers,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillNamespaceTypes(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillNamespaceTypes(QWhale.Syntax.IListMembers,QWhale.Syntax.Parsers.INetNamespace,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMembers(QWhale.Syntax.IListMembers,QWhale.Syntax.Parsers.INetNamespace,QWhale.Syntax.ISyntaxNode,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMember(QWhale.Syntax.IListMembers,QWhale.Syntax.Parsers.INetNamespace)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMembers(QWhale.Syntax.IListMembers,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.DoFindDeclaration(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsUnaryExpressionNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetCastExpression(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetExpressionType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetExpressionType(System.Collections.IList,QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNamespace(System.String,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetObjectType(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetTypeByName(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetTypeByName(QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetElementAccessType(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.AddUnitNamespaces(QWhale.Syntax.ISyntaxNode,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetUsingName(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IndexOfNamespace(System.Collections.IList,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.AddNetNamespace(System.Collections.IList,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindUsingList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNamespaces(QWhale.Syntax.ISyntaxNode,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNamespaces(QWhale.Syntax.ISyntaxNode,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNamespaces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetExpressionType(System.Drawing.Point,QWhale.Syntax.ISyntaxNode,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetWithStatementExpression(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetMemberAccessType(QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.IsEnumTypeRegistered">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetEnumType(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetUsingType(QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetBlockNodeType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point@amp;,System.Boolean,System.Boolean,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetTypeOfNode(QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Boolean,System.Boolean,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetTypeOfNode(QWhale.Syntax.ISyntaxNode,System.String,System.Drawing.Point,System.String@amp;,System.Drawing.Point@amp;,System.Boolean,System.Boolean,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillSnippet(QWhale.Syntax.IListMembers,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillSnippets(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillGlobalObject(QWhale.Syntax.IListMembers,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillGlobalObjects(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillGlobalTypes(QWhale.Syntax.IListMembers,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.SkipGlobalMembers(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.DoFillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Collections.IList,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetNodeType(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetNodeType(System.String,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetSpecialMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetSpecialMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetRegisteredObject(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetMethodType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,System.Int32@amp;,System.Int32@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMethodType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,System.Int32@amp;,System.Int32@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,System.Int32,QWhale.Syntax.StaticScope)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,System.Int32,QWhale.Syntax.StaticScope)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.HasSnippetMembers(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.GetCodeSnippets(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetCodeSnippets(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.RegisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.UnregisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.RegisterObject(System.String,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.UnregisterObject(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.ClearNamespaces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.ClearObjects">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NETRepository+BoolEnum">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.NETRepository.BoolEnum.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NETRepository.BoolEnum.False">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NETRepository+NamespaceComparer">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.NamespaceComparer.#ctor(QWhale.Syntax.ICodeCompletionRepository)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.NETRepository.NamespaceComparer" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.NETRepository.NamespaceComparer.Compare(System.Object,System.Object)">
      <summary>Implements <see cref="M:System.Collections.IComparer.Compare(System.Object,System.Object)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NetSyntaxParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.NetSyntaxParser" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.NetSyntaxParser.XmlParser">
      <summary>Gets</summary>
    </member>
    <member name="QWhale.Syntax.Parsers.NetSyntaxParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetSyntaxParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetSyntaxParser.savePrevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetSyntaxParser.comments">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.NetSyntaxParser.reswordStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.FindXmlNode(QWhale.Syntax.ISyntaxNode,System.String,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetXmlComment(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetXmlDescription(QWhale.Syntax.ISyntaxNode,System.String,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.XmlToNetNodeType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseXmlComment(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ShiftPoint(System.Drawing.Point,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.AddXmlNode(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.UnregisterNamespace(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterObject(System.String,System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.UnregisterObject(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterType(System.String,System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterType(System.String,System.Type,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.UnregisterType(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterAssembly(System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterAssembly(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.UnregisterAssembly(System.Reflection.Assembly,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.UnregisterAssembly(System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterAllAssemblies">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RegisterDefaultAssemblies">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetLastChild(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetValidNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.SyntaxError(System.Drawing.Point,System.Drawing.Point,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.SyntaxError(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.BeforeDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.AfterDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ClearStack">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.FixupRegions(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.IsContentDivider(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ShouldOutlineCommentNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.FixupComments">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseUsingDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseUsingList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ParseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseXmlComment(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseUsingList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseUsing(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetBlockNode(QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseBlock(QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.IsContentDivider(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsContentDivider(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.SaveState">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.SaveState" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.RestoreState(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.RestoreState(System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.Reset">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.Reset" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ReparseBlock(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ResetCodeCompletionStopChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ResetAutoIndentChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ShouldSerializeCodeCompletionChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ShouldSerializeCodeCompletionStopChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetSyntaxParser.ShouldSerializeAutoIndentChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeAutoIndentChars" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.NetTypes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.NetTypes" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.NetTypes.Assemblies">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NetTypes.Types">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NetTypes.GlobalTypes">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.NetTypes.Namespaces">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.GetGenericName(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.GetTypeByName(System.String,System.Collections.IList,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.GetNamespaces(System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.GetGlobalTypes(System.Collections.IList,System.String,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.AddType(System.Type,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.RemoveType(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.AddNamespace(System.String,System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.RemoveNamespace(System.String,System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.IsSpecialType(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.AddAssembly(System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.NetTypes.RemoveAssembly(System.Reflection.Assembly)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.ReflectionRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.ReflectionRepository" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.ReflectionRepository.Types">
      <summary>Implements <see cref="P:QWhale.Syntax.Parsers.IReflectionRepository.Types" />.</summary>
    </member>
    <member name="QWhale.Syntax.Parsers.ReflectionRepository.Assemblies">
      <summary>Implements <see cref="P:QWhale.Syntax.Parsers.IReflectionRepository.Assemblies" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetBindingFlags(QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetDataType(System.Type,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetDataType(System.Type,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsSystemType(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetDataType(System.Type,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberType(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberDataType(System.Reflection.MemberInfo,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsMemberPrivate(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsSpecialName(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsPublicMember(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsPrivateMember(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberImageIndex(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetTypeQualifier(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberQualifier(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetParamQualifier(System.Reflection.ParameterInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberParameterInfos(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberParameters(System.Reflection.MemberInfo,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetElementAccessType(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FindMember(System.String,System.Drawing.Point,QWhale.Syntax.ISyntaxNode,System.String,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetParameterType(System.Object,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillTypeMembers(QWhale.Syntax.IListMembers,System.Type,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsRestrictedType(System.Type)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillTypeMembers(QWhale.Syntax.IListMembers,System.Type,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillTypeMembers(QWhale.Syntax.IListMembers,System.Reflection.MemberInfo[],System.Type,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillTypeMembers(QWhale.Syntax.IListMembers,System.Reflection.MemberInfo[],System.Type,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillMember(QWhale.Syntax.IListMembers,System.Reflection.MemberInfo,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DoFillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Collections.IList,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillDelegate(QWhale.Syntax.IListMembers,System.Type,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillGlobalTypes(QWhale.Syntax.IListMembers,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillInternalTypes(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillNamespaceTypes(QWhale.Syntax.IListMembers,QWhale.Syntax.Parsers.INetNamespace,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetTypeName(System.Type,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillNamespaceTypes(QWhale.Syntax.IListMembers,System.Collections.IList)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FindTypeDeclaration(System.Type,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FindNamespaceDeclaration(QWhale.Syntax.Parsers.INetNamespace,QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetExpressionType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FindDeclaration(System.Object,System.Collections.IList,System.Drawing.Point,System.String,QWhale.Syntax.StaticScope,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillCastExpressionMember(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,System.Object,System.String,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.CodeCompletionRepository.FillMember(QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetDescription(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.Object,System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FixupArrayType(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetTypeByName(QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.IsEnumTypeRegistered">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetEnumType(System.Object)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetNamespaces">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.FindAssembly(System.String,System.Reflection.Assembly@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetRegisteredType(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.GetTypeByName(System.String)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.Parsers.NETRepository.GetTypeByName(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterType(System.String,System.Type)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterType(System.String,System.Type)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterType(System.String,System.Type,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterType(System.String,System.Type,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.UnregisterType(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterType(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterAssembly(System.Reflection.Assembly)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAssembly(System.Reflection.Assembly)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.UnregisterAssembly(System.Reflection.Assembly,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterAssembly(System.Reflection.Assembly,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterAssembly(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAssembly(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.UnregisterAssembly(System.String,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.UnregisterAssembly(System.String,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterAllAssemblies">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterAllAssemblies" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RegisterDefaultAssemblies">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RegisterDefaultAssemblies" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.ClearAssemblies">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearAssemblies" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.ClearTypes">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.ClearTypes" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.RestrictTypeMembers(System.Type)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.RestrictTypeMembers(System.Type)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.AllowTypeMembers(System.Type)">
      <summary>Implements <see cref="M:QWhale.Syntax.Parsers.IReflectionRepository.AllowTypeMembers(System.Type)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.ReflectionRepository+DescriptionHelper">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.SystemAssemblyFolder">
      <summary>Gets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.Enabled">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.GetDescription(System.String,System.Type,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.GetDescription(System.Reflection.MemberInfo,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.GetDescription(System.Reflection.ParameterInfo)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.ReflectionRepository.DescriptionHelper.GetDescription(System.Reflection.MemberInfo)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.SqlLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Abort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Accept">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Access">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Account">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Action">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Add">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.All">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Alter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.And">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Any">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Array">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.As">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Asc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Assert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.At">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Audit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Authorization">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Avg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Begin">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Between">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Body">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.By">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cascade">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cashe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Char_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Check">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Close">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cluster">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Clusters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Colauth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Column">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Columns">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Commit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Compact">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Compress">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Connect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Connections">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Constant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Constraint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Count">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Crash">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Create">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Current">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cursor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cycle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Data_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Database">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Dba">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Debugoff">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Debugon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Declare">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Defferable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Deffered">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Definition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Delay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Delta">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Desc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Describe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Digits">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Dispose">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Distinct">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Drop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Elsif">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.End">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Entry">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Exception">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Exception_init">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Exclusive">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Exists">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Exit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Fetch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.File">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Foreign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Form">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.From">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Function">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Generic">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Goto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Grant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Group">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Groups">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Having">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Identfied">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Identified">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Immediate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Increment">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Index">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Index_Blist">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Indexes">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Index_None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Indicator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Initial">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Initially">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Inner">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Intersect">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Into">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Is">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Isolation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Join">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Key">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Level">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Like">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Limit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Limited">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Lock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Loop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Max">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Maxextents">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Min">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Minvalue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Mod">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Mode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Modify">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.No">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Noaudit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Nocompress">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Not">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Nowait">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Null">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Number">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Number_base">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Of">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Off">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Offline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.On">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Online">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Open">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Option">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Order">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Others">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Out">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Outer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Package">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Partition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Password">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Pctfree">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Pragma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Primary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Prior">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Privileges">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Procedure">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Raise">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Range">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Raw">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Record">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.References">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Release">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rem">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rename">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Replace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Resource">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Return">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Reverse">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Revoke">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rollback">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Row">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rowid">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rowlabel">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rownum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rows">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Rowtype">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Run">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Savepoint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Schema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Separate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Serializable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Session">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Share">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Show">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Shutdown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Size">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Space">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sql">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sqlcode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sqlerrm">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Start">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Statement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Status">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Stddev">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Subtype">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Successful">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Synonym">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Sysdate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Tabauth">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Table">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Tables">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Task">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Terminate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Then">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.To">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Transaction">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Trigger">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Type">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Uid">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Union">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Unique">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Unlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Update">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Usage">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Use">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.User">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Validate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Values">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Varchar2">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Variance">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.View">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Views">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.When">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Whenever">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Where">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.With">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Work">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Xor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Bit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Real">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Text">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Date">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Time">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Interval">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Float">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Bigint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Binary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Numeric">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Tinyint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Integer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Varchar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Smallint">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Varbinary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Timestamp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Longvarchar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Java_object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Longvarbinary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Tilde">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Bang">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Uxo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Turma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Carret">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Ampersant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Bitwise_or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Cav">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Interr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Dollar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Op_Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.SqlNodeType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Unit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Create">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Alter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Drop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Update">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Show">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Describe">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Grant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Revoke">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Commit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Compact">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Roolback">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Shutdown">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CreateTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CreateView">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CreateSchema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CreateUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CreateSequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AlterUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AlterTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropView">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropSchema">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropUser">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropSequence">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropTable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AddStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DropStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AlterStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PrimaryKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ForeignKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.CheckStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.UniqueStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.WhereStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.LimitStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.FromStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.HavingStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.OrderbyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.GroupbyStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DefaultStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DeleteStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.UpdateStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ReferenceStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.SetStatement">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.IdentifierList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ColumnList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PrivilegesList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.UserList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ArgumentList">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Expression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AdditiveExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.OrExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AndExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.MultiplicativeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.LikeExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.RelationalExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.EqualityExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PrimaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PrefixedUnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.UnaryExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.InvocationExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.MemberAccessExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ParenthesizedExpression">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.TableName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.TableAlias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.SchemaName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.VariableName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ColumnName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ColumnAlias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.ContraintName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.Attribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AccountAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PasswordAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.AutoCommitAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.IsolationLevelAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.TypeAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.PrimaryKeyAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.DatabaseObjectAttribute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlNodeType.TriggerAttribute">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.SqlParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.SqlParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.SqlParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.lexCommentEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.SqlParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.LexCommentEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.SyntaxError(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.Expected(QWhale.Syntax.Parsers.SqlLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.Expected(QWhale.Syntax.Parsers.SqlLexerToken,QWhale.Syntax.Parsers.SqlLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.Expected(QWhale.Syntax.Parsers.SqlLexerToken[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IsReswordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IsDatatypeToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IsDateOrIntervalToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseIdentifierList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSelectQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSelectColumnList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseFromStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseFromClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSelectTable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseGroupbyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseOrderbyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseOrderColumn">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseHavingStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateView">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateSchema">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateSequence">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateTable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCreateUser">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropUser">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropView">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropSequence">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropSchema">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDropTable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterTable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.IsNextQueryToken">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterCreateTable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterTableAdd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseColumnDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDefaultStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseConstraintDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParsePrimaryKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseForeignKeyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseReferenceStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUpdateDeleteStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseTriggeredAction">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUniqueStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCheckStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseColumnList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterTableDrop">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterTableAlter">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseAlterUser">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseInsertQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseOptionalColumnList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDeleteQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseWhereStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseLimitStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCompactQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUpdateQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSetStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseCommitQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseRollbackQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseShutdownQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseGrantQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseRevokeQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDatabaseObject(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUser(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUserList(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseSetQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseDescribeQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseShowQuery">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ClearStack">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.SqlRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.SqlRepository" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.SqlRepository.Tables">
      <summary>Gets</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FindTableByName(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FindTableAliasNode(QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FindTableNameNode(QWhale.Syntax.ISyntaxNode,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.GetBlockNode(QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FillTableFields(QWhale.Syntax.Parsers.TableItem,QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FillTables(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.GetMemberType(System.String,QWhale.Syntax.ISyntaxNode,System.String@amp;,System.Drawing.Point@amp;,System.Drawing.Point@amp;,QWhale.Syntax.StaticScope@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.SqlRepository.FillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionRepository.FillMembers(QWhale.Syntax.ISyntaxNode,System.Drawing.Point,QWhale.Syntax.IListMembers,System.Object,System.String,QWhale.Syntax.StaticScope,System.Int32@amp;)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.TableItem">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.TableItem.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.TableItem" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.TableItem.#ctor(System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.TableItem" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Parsers.TableItem.TableName">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.Parsers.TableItem.Fields">
      <summary>Gets</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.AddHandler">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.AddressOf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Alias">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.And">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.AndAlso">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Ansi">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.As">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Assembly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Auto">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ByRef">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Byte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ByVal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Call">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Catch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CBool">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CByte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CDate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CDbl">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CDec">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CInt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Class">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CLng">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CObj">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Const">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Continue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CShort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CSng">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CStr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.CType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Date">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Declare">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Delegate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Dim">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.DirectCast">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Each">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ElseIf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.End">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.EndIf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Enum">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Erase">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Error">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Event">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Exit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Finally">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Friend">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Function">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Get">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.GetType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.GoSub">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.GoTo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Handles">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Implements">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Imports">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Inherits">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Integer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Interface">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Is">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.IsFalse">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.IsTrue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Let">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Lib">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Like">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Loop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Me">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Mid">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Mod">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Module">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.MustInherit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.MustOverride">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.MyBase">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.MyClass">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Namespace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Next">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Not">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Nothing">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.NotInheritable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.NotOverridable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Of">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.On">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Operator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Option">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Optional">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.OrElse">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Overloads">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Overridable">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Overrides">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ParamArray">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Partial">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Preserve">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Property">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Protected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.RaiseEvent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ReadOnly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.ReDim">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Region">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.REM">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.RemoveHandler">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Resume">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Return">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Shadows">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Shared">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Short">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Single">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Static">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Step">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Stop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Structure">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Sub">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.SyncLock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Then">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Throw">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.To">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Try">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.TypeOf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Unicode">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Until">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Variant">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Wend">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.When">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.With">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.WithEvents">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.WriteOnly">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Xor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Open_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Close_brace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Semicolon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Colon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Pound">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.LineContinuation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Bang">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_integer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_single">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_string">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.IntDiv">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Carret">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_shift_left">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_shift_right">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_mult_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_div_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_intdiv_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_add_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_sub_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_shift_left_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_shift_right_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Op_exp_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.String_and_assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Short_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Long_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Decimal_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Date_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Character_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Xmlcomment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.Directive_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbListMember">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbListMember.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.VbListMember.#ctor(QWhale.Syntax.IListMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbListMember" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.VbListMember.UpdateParamText">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.UpdateParamText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbListMember.GetOwnDescription">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetOwnDescription" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbListMember.GetParamText(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMember.GetParamText(System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbListMembers">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbListMembers.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbListMembers" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.VbListMembers.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbParameterInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbParameterInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbParameterInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.VbParameterInfo.CreateListMember">
      <summary>Implements <see cref="M:QWhale.Syntax.IListMembers.CreateListMember" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.VbParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.reswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexDefineProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexXmlCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbParser.lexXmlCommentTagProc">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsKeywordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexHexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexOctNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexXmlComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexXmlCommentTag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.LexDefine">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsBlockEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.GetBlockToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.Expected(QWhale.Syntax.Parsers.VbLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.Expected(QWhale.Syntax.Parsers.VbLexerToken,QWhale.Syntax.Parsers.VbLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ShouldOutlineCommentNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsIdentifierToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRankSpecifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseRankSpecifiers(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseArraySizeInitializationModifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseArraySizeInitializationModifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsBuiltInType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTypeName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseType(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsBaseList(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsType(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseInherits(System.String@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImplements(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseUsingDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseUsingList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImportsList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImportDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImportDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImportsList(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseOptionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDeclarationEnd(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDeclaration(QWhale.Syntax.ISyntaxAttributes,QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTypeParameterConstraintsClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTypeParameterConstraintsClauses">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTypeParameterList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEnumDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEnumBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEnumMember">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsDeclarationToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsKnownMemberDeclaration(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEndBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseClassBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseKnownMemberDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDimDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseVariableMemberDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseVariableIdentifier(System.String@amp;,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseFieldDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Drawing.Point,System.String,QWhale.Syntax.ISyntaxNodes,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseLabelName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseVariableInitializer(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseArrayInitializerExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsFunctionToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxNode,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseHandlesClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseImplementsClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseOperatorDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDelegateDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseConstructorDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseConstructorDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMethodBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMethodBody(QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEventDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAttributeListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseAttributeModifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAttributeDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParsePositionalOrNamedParam">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParsePropertyDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParsePropertyDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsAccessor">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAccessor(QWhale.Syntax.Parsers.NetNodeType)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAccessorBody(QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseInheritsOrImplementsClause(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseParameterListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseParameterListDeclaration(QWhale.Syntax.Parsers.VbLexerToken,QWhale.Syntax.Parsers.VbLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsParameterModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseArgument(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDirective">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseShiftExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTypeofIsExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseGetTypeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseNewExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAddressofExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMeAccess(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMeAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBaseAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCastExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCastTargetExpression(QWhale.Syntax.ISyntaxNode@amp;,QWhale.Syntax.Parsers.VbLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDictionaryAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpressionList(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseConstantExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsComparisionOperator(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseComparisionExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseLocalDeclarationStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseWithStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.FindWithStatement(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseSyncLockStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRaiseEventStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseAddHandlerStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRemoveHandlerStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEventHandlerStatement(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseMidAssignmentStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCallStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseElseStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseElseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseSelectStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCaseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCaseClauses">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCaseClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseContinueStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseDoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseWhileOrUntil(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseForEachStatement(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseLoopControlVariable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseSimpleVariable(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseForIterator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseThrowOrReturnStatement(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseThrowStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseReturnStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseTryStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseCatchStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseFinallyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseErrorStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseOnErrorStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseResumeStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseGotoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExitStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStopOrEndStatement(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStopStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEndStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRedimStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseRedimClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseEraseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.TryParseLabeledStatement(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpressionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStatementExpression">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStatementTerminator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseStatementTerminator(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpressionBlockStatement(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpressionBlockStatementEnd(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseExpressionBlockStatement(System.Int32[],System.Int32,System.Int32,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlockStatement(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlockStatementEnd(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlockStatement(System.Int32[],System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlock(System.Int32[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsInvalidExpressionToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.IsInvalidBlockToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlock(System.Int32[],System.Boolean,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ParseBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.InitGlobalModules(QWhale.Syntax.Parsers.IReflectionRepository)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.CreateListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.CreateParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.SmartCapitalize(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.GetSingleLineComment">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.SmartFormatLine(System.Int32,System.String,System.Int16[])">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.SmartFormatLine(System.Int32,System.String,System.Int16[])" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.ShouldSerializeCodeCompletionChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbScriptLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Empty">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.False">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Nothing">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Null">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.True">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Mod">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Is">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Not">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.And">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Or">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Xor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Eqv">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Imp">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Function">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Sub">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Dim">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Const">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.ReDim">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Call">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Preserve">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Public">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Private">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Default">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Class">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Property">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.New">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Do">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Erase">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Execute">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.ExecuteGlobal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Exit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.For">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.If">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.On">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Option">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Randomize">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Select">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Set">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Stop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.While">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.With">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Then">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Else">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.ElseIf">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Error">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Resume">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.GoTo">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Get">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Let">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Next">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Case">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Wend">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Loop">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Until">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Each">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.In">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.To">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Step">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.ByVal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.ByRef">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Boolean">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Byte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Char">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Date">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Decimal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Double">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Integer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Long">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Object">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Short">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Single">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CBool">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CByte">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CChar">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CDate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CDbl">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CDec">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CInt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CLng">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CObj">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CShort">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CSng">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.CStr">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.End">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Open_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Close_parens">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Dot">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Colon">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Plus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Minus">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_ne">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_le">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_lt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_ge">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_gt">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Assign">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Op_and">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Star">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Div">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.IntDiv">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Exponent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.LineContinuation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Integer_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Float_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Double_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Character_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.String_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Identifier_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Comment_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Directive_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.Whitespace_Literal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbScriptParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbScriptParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.Parsers.VbScriptParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.savePrevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.reswords">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexSymbolProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexIdentifierProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.stateNormal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.VbScriptParser.reswordStyle">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.InitReswords">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsReswordToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexSymbol">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexIdentifier">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexHexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SkipTo(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SkipTo(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.Expected(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.Expected(QWhale.Syntax.Parsers.VbScriptLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.Expected(QWhale.Syntax.Parsers.VbScriptLexerToken,QWhale.Syntax.Parsers.VbScriptLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SyntaxError(System.Drawing.Point,System.Drawing.Point,System.String,System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SyntaxError(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SyntaxError">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SyntaxError(System.String)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.BeforeDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.AfterDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.InitGlobalModules(QWhale.Syntax.Parsers.IReflectionRepository)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.GetSingleLineComment">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ReparseBlock(QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.GetBlockNode(QWhale.Syntax.ISyntaxNode,System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.CreateParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.CreateListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SmartCapitalize(System.String,System.Int16[])">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ReparseBlock(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SmartFormatLine(System.Int32,System.String,System.Int16[])">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.SmartFormatLine(System.Int32,System.String,System.Int16[])" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.CreateRepository">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.CreateRepository" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ResetCodeCompletionStopChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ResetAutoIndentChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ResetSmartFormatChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ShouldSerializeCodeCompletionChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ShouldSerializeCodeCompletionStopChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ShouldSerializeSmartFormatChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ShouldSerializeAutoIndentChars">
      <summary>Overridden. See <see cref="M:QWhale.Syntax.SyntaxParser.ShouldSerializeAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseDeclarationEnd(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ClearStack">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseUnitBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseModifiers(QWhale.Syntax.ISyntaxAttributes@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseDefaultBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseClassBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseClassDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMethodDeclaration(QWhale.Syntax.ISyntaxNode,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParsePropertyDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseParameterListDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseParameterListDeclaration(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsParameterModifier(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseParameterDeclaration">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMethodBody(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParsePropertyBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseQualifiedIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseVariableIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.TryParseArraySizeInitializationModifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseArraySizeInitializationModifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsIdentifierToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseVariableDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Drawing.Point,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseFieldDeclaration(QWhale.Syntax.ISyntaxAttributes,System.Drawing.Point,System.String,QWhale.Syntax.ISyntaxNodes,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseVariableInitializer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseBlock(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseBlock">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseBlock(System.Int32[],System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatementList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatementTerminator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatementTerminator(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IdentifierExpected">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseIdentifier(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseTypeName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseBlockStatementEnd(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseBlockStatement(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExpressionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseEmbeddedStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseEmbeddedStatement(QWhale.Syntax.ISyntaxAttributes)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseCallStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseEraseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExecuteStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExitStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseElseStatement(System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseElseIfStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseOnErrorStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseGotoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseLabelName(System.String@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseOptionStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParsePropertyStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseRandomizeStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseSelectStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseCaseStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseCaseClauses">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseCaseClause">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseSetStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStopStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseWhileStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseWithStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExpressionBlockStatement(System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseDoStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.TryParseWhileOrUntil(System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseForStatement">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseLoopControlVariable">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseForEachStatement(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseForIterator">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.CreateParentNode(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatementExpression">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseStatementExpressionList">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.TryParseAssignmentExpression(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseInclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseExclusiveOrExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseAndExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseImpExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseEqualityExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseRelationalExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseAdditiveExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMultiplicativeExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParsePrefixedUnaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseSimpleExpression(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsInvalidExpressionToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsInvalidBlockToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.IsDeclarationToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseCastTargetExpression(QWhale.Syntax.ISyntaxNode@amp;,QWhale.Syntax.Parsers.VbScriptLexerToken)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseParenthesizedExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParsePrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.TryParsePostPrimaryExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseMemberAccess(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseInvocationExpression(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseNewExpression(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseArgumentList(QWhale.Syntax.ISyntaxNode@amp;,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.ParseArgument(QWhale.Syntax.ISyntaxNode@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.SaveState">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.SaveState" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptParser.RestoreState(System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.RestoreState(System.Boolean)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.VbScriptRepository">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.#ctor(System.Boolean,QWhale.Syntax.ISyntaxTree)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Parsers.VbScriptRepository" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.IsNodePartial(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.GetDeclaration(QWhale.Syntax.ISyntaxTree,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.AddUnitMember(QWhale.Syntax.IListMembers,QWhale.Syntax.ISyntaxNode,System.String,QWhale.Syntax.StaticScope)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.SkipGlobalMembers(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.Parsers.VbScriptRepository.HasSnippetMembers(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Parsers.XmlCommentType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.C">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Para">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.See">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Code">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Param">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Seealso">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Example">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Paramref">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Summary">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Exception">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Permission">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Value">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Include">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Remarks">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.List">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Parsers.XmlCommentType.Returns">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.QuickInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.QuickInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.QuickInfo" />		 class.	</summary></member>
    <member name="QWhale.Syntax.QuickInfo.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IQuickInfo.Text" />.</summary>
    </member>
    <member name="QWhale.Syntax.QuickInfo.XmlInfo">
      <summary>Overridden. See <see cref="P:QWhale.Syntax.CodeCompletionProvider.XmlInfo" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.QuickInfo.GetXmlType">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.QuickInfo.GetName(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetName(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.QuickInfo.GetText(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ICodeCompletionProvider.GetText(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.Schemes.LanguageParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.Schemes.LanguageParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.Schemes.LanguageParser" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.Schemes.LanguageParser.Language">
      <summary>Gets or sets</summary>
    </member>
    <member name="QWhale.Syntax.Schemes.LanguageParser.XmlScheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.XmlScheme" />.</summary>
    </member>
    <member name="QWhale.Syntax.Schemes.LanguageParser.Scheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.Scheme" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.Schemes.LanguageParser.ShouldSerializeXmlScheme">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.Schemes.Languages">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Assembler">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Batch">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.C">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Cs">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.CBuilder">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Delphi">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Dfm">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Html">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.HtmlScripts">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Il">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Ini">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Js">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.JScript">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Perl">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Python">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Sql">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.TclTk">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.UnixShell">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.VbNet">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.VbScript">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Xml">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.XmlScripts">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.Schemes.Languages.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.ShowingEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.ShowingEventArgs.#ctor(QWhale.Syntax.ICodeCompletionProvider)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.ShowingEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.ShowingEventArgs.Provider">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.ShowingEventArgs.NeedShow">
      <summary>
      </summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.SnippetRange">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SnippetRange.#ctor(System.Drawing.Point,System.Drawing.Point,System.String,System.String,System.Boolean)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SnippetRange" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.SnippetRange.Id">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.SnippetRange.Tooltip">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.SnippetRange.IsEditable">
      <summary>Gets or sets</summary>
    </member>
    <member name="T:QWhale.Syntax.SnippetType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.SnippetType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SnippetType.SurroundsWith">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SnippetType.Expansion">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SnippetType.Refactoring">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.StaticScope">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.StaticScope.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Static">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Instance">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Global">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Protected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.TypeName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Delegate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Method">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Property">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Field">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.ShortType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.StaticScope.Private">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.StringList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.StringList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.StringList" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.StringList.#ctor(System.IO.TextReader)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.StringList" />		 class.	</summary></member>
    <member name="QWhale.Syntax.StringList.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="QWhale.Syntax.StringList.Text">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.Text" />.</summary>
    </member>
    <member name="QWhale.Syntax.StringList.LineTerminator">
      <summary>Implements <see cref="P:QWhale.Syntax.IStringList.LineTerminator" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.SaveFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.SaveFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.SaveStream(System.IO.TextWriter)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.TextWriter)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.SaveStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.StringList.SaveStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IExport.SaveStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxAttribute">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxAttribute.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxAttribute" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxAttribute.#ctor(System.Drawing.Point,System.String,System.Object)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxAttribute" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxAttribute.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxAttribute.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxAttribute.Value">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxAttribute.Value" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxAttribute.Position">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxAttribute.Position" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxAttribute.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxAttributes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxAttributes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxAttributes" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxAttributes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxBuilderConsts">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxBuilderConsts.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxBuilderConsts" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.DlgSyntaxBuilderCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SyntaxSchemeEditorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SyntaxSchemeGeneralCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SyntaxSchemeStylesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SyntaxSchemeStatesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.GeneralCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StylesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StatesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.AuthorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SchemeNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.DescriptionCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.CopyrightCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StylePropertiesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StyleNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StyleDescriptionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StyleForeColorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StyleBackColorCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.FontStylesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BoldCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ItalicCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.UnderlineCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StrikeOutCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.PlainTextCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SampleCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StatePropertiesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StateNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StateDescriptionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.CaseSensitiveCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockPropertiesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockDescriptionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.LeaveStateCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockStyleCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockExpressionCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordSetPropertiesCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordSetNameCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordStyleCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordsCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.LoadCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SaveCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ClearCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.OKCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.CancelCaption_SyntaxBuilderDlg">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.SyntaxFormCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StyleText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.StateText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.BlockText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.ReswordSetText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.AddText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.EditText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.DeleteText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.NewReswordText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.NewExprText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.IncompleteLeaveState">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.IncompleteLeaveStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.IncompleteReswordStyle">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.CancelText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.CancelCaption">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.InvalidScheme">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxBuilderConsts.QueryInvalidScheme">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxConsts">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxConsts.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxConsts" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultLexSchemeVersion">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultTransparentColor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutlineText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.Description">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultNetSyntaxOptions">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DeclarationScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefinitionScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefinitionScopeEndExpected">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefinitionScopeEnd">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.BlockScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.SuppressReparsingScope">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutlineCommentText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutlineUsingText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutlineImportText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutlineImportsText">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.ClassDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.EnumDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.InterfaceDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.StructDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.TypeDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.NamespaceDataType">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.SummaryDescription">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.NameTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.ExpressionTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.TypeTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultNetCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.ExtendedNetCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultNetCodeCompletionStopChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultNetAutoIndentChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultCsCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultCsCodeCompletionStopChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultCsAutoIndentChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultCsSmartFormatChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultVbCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultBoldTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultBoldEndTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultBrTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultSnippetDelimiter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultSnippetPathSeparator">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultHintDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.DefaultCompletionDelay">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.XmlCommentStart">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.XmlVbCommentStart">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.Constructor">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.ElementAccess">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.PublicModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.PrivateModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.ProtectedModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.InternalModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.StaticModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.SharedModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.PartialModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.AbstractModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.VirtualModifier">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.RefParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxConsts.OutParameter">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxError">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxError.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxError" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxError.#ctor(System.Drawing.Point,System.String,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxError" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxError.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxError.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxError.Description">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxError.Description" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxError.Range">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxError.Range" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxError.Position">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxError.Position" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxError.Size">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxError.Size" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxError.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxErrorList">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxErrorList.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxErrorList" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxErrorList.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxErrorList.BlockDeleting(System.Drawing.Rectangle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxErrorList.Sort">
      <summary>Overridden. See <see cref="M:System.Collections.ArrayList.Sort" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxErrorList.FindError(System.Drawing.Point,System.Boolean,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxErrors">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxErrors.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxErrors" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxErrors.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxNode">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxNode.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxNode" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxNode.#ctor(System.Drawing.Point,System.String)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxNode" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxNode.#ctor(System.Drawing.Point,System.String,System.Int32)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxNode" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.SyntaxNode.#ctor(System.Drawing.Point,System.String,System.Int32,QWhale.Syntax.SyntaxNodeOptions)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxNode" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxNode.Parent">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Parent" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Root">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Root" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Range">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Range" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Position">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Position" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Size">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Size" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Name">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Name" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.NodeType">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.NodeType" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Childs">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Childs" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Attributes">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Attributes" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Errors">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Errors" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.ChildList">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.ChildList" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.AttributeList">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.AttributeList" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.ErrorList">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.ErrorList" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.HasChildren">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.HasChildren" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.HasAttributes">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.HasAttributes" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.HasErrors">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.HasErrors" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Options">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Options" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.ChildCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.ChildCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.AttributeCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.AttributeCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.ErrorCount">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.ErrorCount" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Level">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Level" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxNode.Index">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxNode.Index" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.Finalize">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.FindLast(System.Object,System.Int32@amp;,System.Collections.IComparer)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.Clear">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddChild(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddChild(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.InsertChild(QWhale.Syntax.ISyntaxNode,System.Collections.IComparer)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.InsertChild(QWhale.Syntax.ISyntaxNode,System.Collections.IComparer)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddChild">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddChild" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddChildren(QWhale.Syntax.ISyntaxNodes)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddChildren(QWhale.Syntax.ISyntaxNodes)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddAttribute(QWhale.Syntax.ISyntaxAttribute)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddAttribute">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddAttribute" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddAttributes(QWhale.Syntax.ISyntaxAttributes)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddAttributes(QWhale.Syntax.ISyntaxAttributes)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddError(QWhale.Syntax.ISyntaxError)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddError(QWhale.Syntax.ISyntaxError)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddError">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddError" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.AddErrors(QWhale.Syntax.ISyntaxErrors)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.AddErrors(QWhale.Syntax.ISyntaxErrors)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.Sort(System.Collections.IComparer)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.Sort(System.Collections.IComparer)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.FindNode(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.FindNode(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.FindNode(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.FindNode(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.FindNode(System.Object,System.Collections.IComparer)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.FindNode(System.Object,System.Collections.IComparer)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.FindAttribute(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.FindAttribute(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxNode.GetIndent(System.Int32,System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxNode.GetIndent(System.Int32,System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxNodeOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.Indentation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.BackIndentation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.KeepIndentation">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.Outlining">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxNodeOptions.CodeCompletion">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxNodes">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxNodes.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxNodes" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxNodes.Item">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxOptions">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.SyntaxOptions.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.Outline">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.SmartIndent">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.CodeCompletion">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.SyntaxErrors">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.ReparseOnLineChange">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.QuickInfoTips">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxOptions.AutoComplete">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxParser" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxParser.Options">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.Options" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.SyntaxTree">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.SyntaxTree" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.CaseSensitive">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CaseSensitive" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.UseScheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.UseScheme" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.CompletionRepository">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CompletionRepository" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.CodeSnippets">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CodeSnippets" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.CodeCompletionChars">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CodeCompletionChars" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.CodeCompletionStopChars">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.CodeCompletionStopChars" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.SmartFormatChars">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.SmartFormatChars" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.AutoIndentChars">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxParser.AutoIndentChars" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxParser.XmlScheme">
      <summary>Implements <see cref="P:QWhale.Syntax.ILexer.XmlScheme" />.</summary>
    </member>
    <member name="E:QWhale.Syntax.SyntaxParser.TextReparsed">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.SyntaxParser.lineNodeComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxParser.pointNodeComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxParser.nodeComparer">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.SyntaxParser.listMemberComparer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.AddStyle(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.FontStyle,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.AddStyle(System.String,System.Drawing.Color,System.Drawing.FontStyle,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.AddStyle(System.String,System.Drawing.Color,System.Drawing.FontStyle)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.AddStyle(System.String,System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.InitCopyright">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.CurChar">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LexSpace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LexIdent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LexNum">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.StateChanged">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.RegisterLexerProc(System.Int32,QWhale.Syntax.LexerProc)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.RegisterLexerProc(System.Int32,System.Char[],QWhale.Syntax.LexerProc)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.RegisterLexerProc(System.Int32,System.Char,QWhale.Syntax.LexerProc)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.RegisterLexerProc(System.Int32,System.Char,System.Char,QWhale.Syntax.LexerProc)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ParseText(System.Int32,System.Int32,System.String,System.Int32@amp;,System.Int32@amp;,System.Int32@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int32@amp;,System.Int32@amp;,System.Int32@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ParseText(System.Int32,System.Int32,System.String,System.Int16[]@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ILexer.ParseText(System.Int32,System.Int32,System.String,System.Int16[]@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.BeforeLoad">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.AfterLoad">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LoadFile(System.String)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LoadFile(System.String,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadFile(System.String,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LoadStream(System.IO.TextReader)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.TextReader)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LoadStream(System.IO.Stream)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.LoadStream(System.IO.Stream,System.Text.Encoding)">
      <summary>Implements <see cref="M:QWhale.Syntax.IImport.LoadStream(System.IO.Stream,System.Text.Encoding)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.Outline(System.Collections.IList,QWhale.Syntax.ISyntaxNode,System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.FindMember(System.String,QWhale.Syntax.IListMembers,System.Int32@amp;)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetSyntaxErrors(System.Collections.IList,QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.CreateParameterInfo">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.CreateListMembers">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.SortMembers(QWhale.Syntax.IListMembers)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.Outline(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.Outline(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetSmartIndent(System.Int32,System.Boolean)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSmartIndent(System.Int32,System.Boolean)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.SmartFormatLine(System.Int32,System.String,System.Int16[])">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.SmartFormatLine(System.Int32,System.String,System.Int16[])" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.CreateRepository">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetCompletionType(QWhale.Syntax.CodeCompletionArgs)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ProcessAutoComplete(System.Drawing.Point,System.String@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.CodeCompletion(System.String,System.Drawing.Point,QWhale.Syntax.CodeCompletionArgs)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.CodeCompletion(System.String,System.Drawing.Point,QWhale.Syntax.CodeCompletionArgs)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetSyntaxErrors(System.Collections.IList)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSyntaxErrors(System.Collections.IList)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetSingleLineComment">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetSingleLineComment" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.Reset">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.Reset" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetBlock(System.Drawing.Point,System.Drawing.Point@amp;)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsDeclaration(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetNodeAt(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.GetNodeAt(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.FindDeclaration(System.String,System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.FindDeclaration(System.String,System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.FindReferences(QWhale.Syntax.ISyntaxNode,QWhale.Syntax.ISyntaxNodes)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ReparseBlock(System.Drawing.Point)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ReparseBlock(System.Drawing.Point,QWhale.Syntax.ISyntaxNode@amp;,QWhale.Syntax.CodeCompletionType)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseBlock(System.Drawing.Point,QWhale.Syntax.ISyntaxNode@amp;,QWhale.Syntax.CodeCompletionType)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.GetNodeForCodeCompletion(System.Drawing.Point)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.IsContentDivider(System.Int32)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.IsContentDivider(System.Int32)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ResetCodeCompletionChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ResetCodeCompletionStopChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetCodeCompletionStopChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ResetAutoIndentChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetAutoIndentChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ResetSmartFormatChars">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetSmartFormatChars" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ShouldSerializeCodeCompletionStopChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ShouldSerializeSmartFormatChars">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxParser.ShouldSerializeAutoIndentChars">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.SyntaxTree">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.SyntaxTree.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.SyntaxTree" />		 class.	</summary></member>
    <member name="QWhale.Syntax.SyntaxTree.Root">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxTree.Root" />.</summary>
    </member>
    <member name="QWhale.Syntax.SyntaxTree.Current">
      <summary>Implements <see cref="P:QWhale.Syntax.ISyntaxTree.Current" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.BlockDeleting(System.Drawing.Rectangle)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.BlockDeleting(System.Drawing.Rectangle)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Syntax.UpdateReason)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.PositionChanged(System.Int32,System.Int32,System.Int32,System.Int32,QWhale.Syntax.UpdateReason)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.Push(QWhale.Syntax.ISyntaxNode)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.Push(QWhale.Syntax.ISyntaxNode)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.Pop">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.Pop" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.Sort(System.Collections.IComparer)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.Sort(System.Collections.IComparer)" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.Clear">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.Clear" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.SyntaxTree.FindNode(System.Object,System.Collections.IComparer)">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxTree.FindNode(System.Object,System.Collections.IComparer)" />.</summary>
    </member>
    <member name="">
</member>
    <member name="T:QWhale.Syntax.TextParsedEventArgs">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.TextParsedEventArgs.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.TextParsedEventArgs" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.TextParsedEventArgs.String">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.TextParsedEventArgs.ColorData">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.UpdateReason">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.UpdateReason.Navigate">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.Insert">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.Delete">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.Break">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.UnBreak">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.DeleteBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.InsertBlock">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.UpdateReason.Other">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlCodeSnippetMembersInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetMembersInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlCodeSnippetMembersInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetMembersInfo.#ctor(QWhale.Syntax.CodeSnippetMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlCodeSnippetMembersInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.XmlCodeSnippetMembersInfo.CodeSnippetMembers">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetMembersInfo.FixupReferences(QWhale.Syntax.CodeSnippetMembers)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlCodeSnippetsInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetsInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlCodeSnippetsInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetsInfo.#ctor(QWhale.Syntax.CodeSnippets)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlCodeSnippetsInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.XmlCodeSnippetsInfo.CodeSnippets">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCodeSnippetsInfo.FixupReferences(QWhale.Syntax.CodeSnippets)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlCommentParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlCommentParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlCommentParser" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlCommentParser.ResetLine(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCommentParser.ShiftAttribute(QWhale.Syntax.ISyntaxAttribute)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCommentParser.ShiftError(QWhale.Syntax.ISyntaxError)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCommentParser.ShiftNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCommentParser.Reset">
      <summary>Implements <see cref="M:QWhale.Syntax.IParser.Reset" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlCommentParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlHelper">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlHelper.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlHelper" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlHelper.SerializeColor(System.Drawing.Color)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlHelper.DeserializeColor(System.String)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlLexerInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlLexerInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlLexerInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlLexerInfo.#ctor(QWhale.Syntax.Lexer)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlLexerInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.XmlLexerInfo.Scheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlLexerInfo.LexScheme">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlLexerInfo.DefaultState">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlLexerInfo.Load">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlLexerInfo.FixupReferences(QWhale.Syntax.Lexer)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlLexerToken">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.XmlLexerToken.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.WhiteSpace">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.Body">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.OpenTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.CloseTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.OpenEndTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.CloseEndTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.Equal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.TagName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.ParamName">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.ParamValue">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlLexerToken.Comment">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlListMembersInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlListMembersInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlListMembersInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlListMembersInfo.#ctor(QWhale.Syntax.ListMembers)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlListMembersInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.XmlListMembersInfo.ShowHints">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlListMembersInfo.ShowQualifiers">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlListMembersInfo.ShowResults">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlListMembersInfo.ShowParams">
      <summary>Gets or sets</summary>
    </member>
    <member name="P:QWhale.Syntax.XmlListMembersInfo.Members">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlListMembersInfo.FixupReferences(QWhale.Syntax.ListMembers)">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlNodeType">
	<summary>
		
	</summary>
</member>
    <member name="F:QWhale.Syntax.XmlNodeType.None">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlUnit">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlParameter">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlParameters">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlBody">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlNodeType.XmlComment">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlParser">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlParser.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlParser" />		 class.	</summary></member>
    <member name="F:QWhale.Syntax.XmlParser.lexWhitespaceProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexTagProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexEqualProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexStringProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexNameProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexBodyProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexParamProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexStringParamProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexParamNumberProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexCommentProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.lexCommentEndProc">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.prevPosition">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.stateNormal">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.stateTag">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.stateParam">
      <summary>
      </summary>
    </member>
    <member name="F:QWhale.Syntax.XmlParser.stateComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.InitLanguage">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.InitStyles">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.InitLexer">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.GetLexerStyle(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexCommentEnd">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexWhitespace">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexTag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexEqual">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexString">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexStringParam">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexParam">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexParamNumber">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexIdent">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.LexName">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ReparseText">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ReparseText" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ResetOptions">
      <summary>Implements <see cref="M:QWhale.Syntax.ISyntaxParser.ResetOptions" />.</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.IsComment(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.IsValidToken(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseComment">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.MoveNext">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.AddNode(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.SkipTagBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseTagBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseTag(QWhale.Syntax.ISyntaxNode)">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseTag">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseBody">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseParams">
      <summary>
      </summary>
    </member>
    <member name="M:QWhale.Syntax.XmlParser.ParseUnit">
      <summary>
      </summary>
    </member>
    <member name="T:QWhale.Syntax.XmlQuickInfo">
	<summary>
		
	</summary>
</member>
    <member name="M:QWhale.Syntax.XmlQuickInfo.#ctor">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlQuickInfo" />		 class.	</summary></member>
    <member name="M:QWhale.Syntax.XmlQuickInfo.#ctor(QWhale.Syntax.QuickInfo)">	<summary>		Initializes a new instance of the		<see cref="T:QWhale.Syntax.XmlQuickInfo" />		 class.	</summary></member>
    <member name="P:QWhale.Syntax.XmlQuickInfo.Text">
      <summary>Gets or sets</summary>
    </member>
    <member name="M:QWhale.Syntax.XmlQuickInfo.FixupReferences(QWhale.Syntax.QuickInfo)">
      <summary>
      </summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.Bookmark">
      <summary>Represents bookmark.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.Bookmark.PageIndex">
      <summary>Gets a specified index of page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.Bookmark.CrossIndex">
      <summary>Gets an index of a page that was added when the vertical space was not enough.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.Bookmark.PageNumber">
      <summary>Gets a page number.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.Bookmark.#ctor(PerpetuumSoft.Reporting.DOM.Page,System.Int32,System.Double,System.Int32,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Rendering.Bookmark" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.Bookmark.UsedHeight">
      <summary>Gets the occupied space of a page vertically.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ExceptionMode">
      <summary>Enumerates exception handling modes.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Rendering.ExceptionMode.Ignore">
      <summary>Ignore all exceptions.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Rendering.ExceptionMode.Warning">
      <summary>Warning on exception.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Rendering.ExceptionMode.Fail">
      <summary>Fail on exception.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.IRenderSite">
      <summary>Provides common interface for report render clients.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ShowError(System.Exception)">
      <summary>Shows the error information.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ShowProgress(System.String,System.String)">
      <summary>Shows the progress indicator tool.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ProgressEnd">
      <summary>Ends progress indication.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Rendering.IRenderSite.CancelRender">
      <summary>Occurs when rendering is canceled by the client.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.ProgressStart">
      <summary>Starts progress indication.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.DocumentCompleted(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Performs any actions after completing rendering of the specified document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.HandleException(System.Exception)">
      <summary>Handles Exception.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.HandleRenderingException(System.Exception)">
      <summary>Returns the "true" value if the Exception is required to be handled. </summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IRenderSite.NotifyCancelRendering">
      <summary>Notifies about the rendering cancel.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.IResolveSubReport">
      <summary>Provides functionality for supporting reports with subreports.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetSubReportTemplate(System.String)">
      <summary>Returns subreport template by it name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.IResolveSubReport.GetAvailableTemplateNames">
      <summary>Gets names of available templates</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.PageInfo">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.RenderEngine">
      <summary>Manages the report rendering process.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.IsClearPage">
      <summary>Gets and sets whether the currently rendered page is empty.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.RenderPage(PerpetuumSoft.Reporting.DOM.Page)">
      <exclude>
      </exclude>
      <summary>Renders report page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.UsedWidth">
      <summary>Gets the amount of used page width.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.UsedHeight">
      <summary>Gets the amount of used page height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.CancelRender">
      <summary>Cancels rendering.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Rendering.RenderEngine.GetReportParameter">
      <summary>Occurs when report rendering to get temtlate parameteres.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.Dispose">
      <summary>Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.NewCrossPage">
      <summary>Forces a new page while rendering a cross report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.InitColumnState(System.Int32,System.Int32,System.Double)">
      <summary>Initializes column state.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ColumnNumber">
      <summary>Gets and sets the currently rendered column number.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.Now">
      <summary>Gets the date and time when the rendering began.</summary>
    </member>
	<member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.IsSecondPass">
      <summary>Gets whether the currently performed pass is the second pass.</summary> 
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ColumnStart">
      <summary>Gets and sets the vertical coordinate of the columns section.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.TemplatePage">
      <summary>Gets the current Page in the Template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.RememberPosition">
      <exclude>
      </exclude>
      <summary>Restores position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.LineNumber">
      <summary>Gets the line number in the currently rendered band.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.FreeWidth">
      <summary>Gets the amount of remaining free page width.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.FreeHeight">
      <summary>Gets the amount of remaining free page height.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.StartRender(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Starts the rendering process.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.PageNumber">
      <summary>Gets and sets the number of currently rendered page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.RenderDocument(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Renders the document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ColumnDX">
      <summary>Gets and sets the space beetween the page left margin and the left side of current column.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.Caret">
      <summary>Gets and sets the current position on the page being rendered.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.#ctor(PerpetuumSoft.Reporting.Rendering.IRenderSite,PerpetuumSoft.Reporting.Rendering.IResolveSubReport)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Rendering.RenderEngine" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ProductionPage">
      <summary>Gets the current page in the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.PageCount">
      <summary>Gets the count of pages in the final document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.Handle(System.Exception)">
      <summary>Handles exception.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.PageRenderArea">
      <summary>Gets and sets a rectangle defining the remaining free space available on the page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.CheckCancel">
      <summary>Checks if rendering was canceled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.NewColumn">
      <summary>Forces a new column.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.GetCurrentGroup">
      <summary>Get the current group</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.IsClearColumn">
      <summary>Gets and sets whether the current column is empty.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.Site">
      <summary>Gets the IRenderSite associates with the RenderEngine.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.Parameters">
      <summary>Gets parameters collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ScriptInstance">
      <summary>Gets the generated script object instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.RestorePosition(PerpetuumSoft.Reporting.Rendering.Bookmark)">
      <summary>Restores engine position.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.#ctor(PerpetuumSoft.Reporting.Rendering.IRenderSite,PerpetuumSoft.Reporting.Rendering.IResolveSubReport,PerpetuumSoft.Reporting.Components.IResolveDataSource)">
      <exclude>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Rendering.RenderEngine" /> class.</exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.ResetCross">
      <summary>Resets cross rendering state.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.DataNavigationManager">
      <summary>Gets DataNavigationManager associated with this RenderEngine.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.GetGraphics">
      <summary>Returns a sample Graphics object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.Objects">
      <summary>Gets and sets the data sources collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.GetRunningTotal(System.String)">
      <summary>Gets running total by its name</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ProductionDocument">
      <summary>Gets the final document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.TemplateDocument">
      <summary>Gets the document template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.NewPage">
      <summary>Forces a new page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.IsDoublePass">
      <summary>[deprecated] Use IsSecondPass instead</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ColumnsGap">
      <summary>Gets and sets the space beetween the columns.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.RenderEngine.ColumnsCount">
      <summary>Gets and sets the current count of columns.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.RenderEngine.GetTotal(System.String)">
      <summary>Gets total value by the field</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ReportScriptBase">
      <summary>Base class for classes containing user scripts.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.Engine">
      <summary>Gets the associated RenderEngine.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.Group">
      <summary>Get group</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.GetData(System.String)">
      <summary>Returns data corresponding to specified data member.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.DataObjects">
      <summary>Gets the collection of associated data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.GetRunningTotal(System.String)">
      <summary>Gets running total by its name</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.GetParameter(System.String)">
      <summary>Returns parameter by specific name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.PageCount">
      <summary>Gets the count of pages in the document.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.ColumnNumber">
      <summary>Gets the number of the current column.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.Now">
      <summary>Gets the date and time when the rendering began.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.PageNumber">
      <summary>Gets the number of the current page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.#ctor(PerpetuumSoft.Reporting.DOM.Document,PerpetuumSoft.Reporting.Components.ObjectPointerCollection,PerpetuumSoft.Reporting.Rendering.RenderEngine)">
      <summary>Initializes a new instance of the ReportBase class with the specified container.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.Document">
      <summary>Gets the template of the currently rendered document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ReportScriptBase.GetTotal(System.String)">
      <summary>Gets total value by the field</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ScriptException">
      <summary>Represents a script generation exception.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptException.#ctor(System.CodeDom.Compiler.CompilerResults)">
      <summary>Initializes a new instance of the ScriptException class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Rendering.ScriptException" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ScriptException.CompilerResults">
      <summary>Gets the compiler result associated with the ScriptException.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ScriptGenerator">
      <summary>Generate and compile the script for the document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.WriteScript(System.IO.TextWriter)">
      <summary>Writes the generated script to the specified TextWriter.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.ReportScriptBaseType">
      <summary>Gets or sets the type used as a basic one for the dynamically generated type of the document template scripts</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.ScriptAssembly">
      <summary>Gets the assembly that contains the compiled script.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.GenerateAccessFieldExpression(System.String,System.String)">
      <summary>Generates a string that contains the expression for access to the specified field in the data source bound to the specified band.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.CreateScriptInstance(PerpetuumSoft.Reporting.Components.ObjectPointerCollection,PerpetuumSoft.Reporting.Rendering.RenderEngine)">
      <summary>Returns a new instance of the generated script class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.ScriptDOM">
      <summary>Gets generated CodeCompileUnit of the CodeDOM.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.GenerateScript">
      <summary>Performs script generation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.#ctor(PerpetuumSoft.Reporting.DOM.Document,System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Rendering.ScriptGenerator" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.CompileScript">
      <summary>Performs script compilation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.GetLinePragma(PerpetuumSoft.Reporting.DOM.ReportComponent,System.String)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.#ctor(PerpetuumSoft.Reporting.DOM.Document)">
      <summary>Initializes a new instance of the ScriptGenerator class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ScriptGenerator.ErrorInfo">
      <exclude>
      </exclude>
      <summary>Represents data on the error in report scripts.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ScriptInfo">
      <summary>Represents the source code of a script.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection">
      <summary>Represents a collection of scripts.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection.Remove(PerpetuumSoft.Reporting.Rendering.ScriptInfo)">
      <summary>Removes the specified script from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection.Add(PerpetuumSoft.Reporting.Rendering.ScriptInfo)">
      <summary>Adds a new script to the collecton.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection.Item(System.Int32)">
      <summary>Gets the script at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection.#ctor">
      <summary>Creates a new instance of ScriptInfoCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Rendering.ScriptInfoCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Rendering.ScriptInfo)">
      <summary>Inserts a new script at the specified index.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.ReportingExceptionBuilder">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.FindEventArgs">
      <summary>Provides data for the Find events.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.FindEventArgs.FindTextArgument">
      <summary>Gets and sets the search text.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.FindTextArgument)">
      <summary>Initializes a new instance of FindEventArgs.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.FindEventHandler">
      <summary>Represents the method that will handle the Find events.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.FindForm">
      <summary>A dialog window for searching the text in the document</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.FindForm" /> class.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.View.FindForm.Find">
      <summary>Is raised if the required text is found</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindForm.#ctor(PerpetuumSoft.Reporting.DOM.FindTextArgument,PerpetuumSoft.Reporting.View.FindEventHandler)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.FindForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindForm.FindText(System.Boolean)">
      <summary>Searches the text</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.FindForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.MouseMode">
      <summary>Modes of the user interaction.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.MouseMode.ZoomOut">
      <summary>Zoom out mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.MouseMode.WindowZoom">
      <summary>Window zoom mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.MouseMode.ZoomIn">
      <summary>Zoom in mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.MouseMode.Pan">
      <summary>Pan mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.MouseMode.DynamicZoom">
      <summary>Dynamic zoom mode.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.PageNumberControl">
      <summary>A dialog window for searching page number</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.PageNumberControl" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberControl.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.PageNumberControl.Maximum">
      <summary>Gets or sets maximum page number value</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.PageNumberControl.PageNumber">
      <summary>Gets or sets page number</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberControl.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.PageNumberForm">
      <summary>A dialog window for searching page number</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberForm.SetParams(System.Int32,System.Int32)">
      <summary>Sets page number value</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.PageNumberForm" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.PageNumberForm.PageNumber">
      <summary>Gets or sets page number</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PageNumberForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.PreviewForm">
      <summary>Defines the default form for reports preview.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PreviewForm.OnResize(System.EventArgs)">
      <summary>Raises the Resize event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PreviewForm.#ctor(PerpetuumSoft.Reporting.Components.IReportSource)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.PreviewForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PreviewForm.#ctor">
      <summary>Initializes a new instance of PreviewForm.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.PreviewForm.ReportViewer">
      <summary>Gets the report viewer contained by the PreviewForm.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PreviewForm.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.PreviewForm.ShowMenu">
      <summary>Gets and sets if menu will be shown.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.PreviewForm.OnLoad(System.EventArgs)">
      <exclude>
      </exclude>
      <summary>Raises the Load event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ReportViewer">
      <summary>Summary description for Viewer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowOpen">
      <summary>Gets and sets whether the Open toolbutton should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowFind">
      <summary>Gets and sets whether the Find toolbutton should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowScale">
      <summary>Gets and sets whether the Zoom toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.ExportReport">
      <summary>Runs the ExportReport dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.StartFindText(System.Object,PerpetuumSoft.Reporting.View.FindEventArgs)">
      <summary>Finds the first occurrence of the specified text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.PageIndex">
      <summary>Gets ans sets the number of the displayed page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.SaveReport">
      <summary>Runs the SaveReport dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowContent">
      <summary>Gets and sets whether the Content toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.View.ReportViewer.ViewObjectDoubleClick">
      <summary>Occurs when the object is double-clicked.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowStatusBar">
      <summary>Gets and sets whether the Status Bar should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.ShowCustomZoomDialog">
      <summary>Shows zoom dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.ShowGotoPageDialog">
      <summary>Shows pages dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.LoadReport">
      <summary>Runs the LoadReport dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowToolBar">
      <summary>Gets and sets whether the ToolBar should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.LastPage">
      <summary>Goes to the last page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowStatusBarGrip">
      <summary>Gets and sets whether the Status Bar Grip should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ViewMode">
      <summary>Gets and sets view mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowDesigner">
      <summary>Gets and sets whether the Designer toolbutton should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowSave">
      <summary>Gets and sets whether the Save toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.MoveBackward">
      <summary>Moves to the previous position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.About">
      <summary>Gets the copyright string.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.ChangeReport">
      <summary>Runs designer for the final rendered report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.OnDocumentLoaded(System.EventArgs)">
      <summary>Called when a document is loaded.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.Zoom">
      <summary>Gets and sets zoom for the report viewer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.MouseMode">
      <summary>Gets ansd sets mouse interaction mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.PreviousPage">
      <summary>Goes to the previous page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.OnLoad(System.EventArgs)">
      <summary>'Performs additional custom processes when loading report viewer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.StringRegKey">
      <summary>Gets or sets <see cref="T:System.String" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.FindNextText">
      <summary>Finds the next occurence of the current search string.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.Actions">
      <summary>Gets collection of all actions of the ReportViewer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowRefresh">
      <summary>Gets and sets whether the Refresh toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.RefreshReport">
      <summary>Refreshes the report document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.#ctor">
      <summary>Creates new instance of the ReportViewer class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowNavigator">
      <summary>Gets and sets whether the Forward and Backward toolbuttons should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.ResetContextMenu">
      <summary>Resets comtextual menu.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.FindText">
      <summary>Runs the Find Text dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.NextPage">
      <summary>Goes to the next page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.SetCurrentPage(System.Int32)">
      <summary>Switches preview to the specified page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowPageNavigator">
      <summary>Gets and sets whether the Page Navigation buttons should be visible.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.Document">
      <summary>Gets current document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.FirstPage">
      <summary>Goes to the first page.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.View.ReportViewer.ViewObjectClick">
      <summary>Occurs when the object is clicked.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.Source">
      <summary>Gets and sets the source for the report document.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.OnViewObjectClick(PerpetuumSoft.Reporting.View.ReportViewEventArgs)">
      <summary>Raises OnViewObjectClick event.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.View.ReportViewer.DocumentLoaded">
      <summary>Occurs after document load.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowPrint">
      <summary>Gets and sets whether the Print toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.OnViewObjectDoubleClick(PerpetuumSoft.Reporting.View.ReportViewEventArgs)">
      <summary>Raises OnViewObjectDoubleClick event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.PrintReport">
      <summary>Runs the PrintReport dialog.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewer.ShowExport">
      <summary>Gets and sets whether the Export toolbutton should be visible.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.MoveForward">
      <summary>Moves to the next position.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.SetNewZoom(PerpetuumSoft.Reporting.View.Zoom)">
      <summary>Sets new zoom</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewer.SetContextMenu(System.Windows.Forms.ContextMenu)">
      <summary>Sets contextual menu in the ReportViewer</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ReportViewEventArgs">
      <summary>Provides data for the ReportViewer's events.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewEventArgs.Handled">
      <summary>Gets or sets if evant is handled.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ReportViewEventArgs.Control">
      <summary>Gets the associated report control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ReportViewEventArgs.#ctor(PerpetuumSoft.Reporting.DOM.ReportControl)">
      <summary>Initializes a new instance of the ReportViewEventArgs class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ReportViewEventHandler">
      <summary>Represents the method that will handle the Report Viewer's events.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ViewMode">
      <summary>Viewer modes.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.ViewMode.ContinuedPage">
      <summary>Continued page view mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.ViewMode.SinglePage">
      <summary>Single page view mode.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.Zoom">
      <summary>Incapsulates viewer zoom properties.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.Zoom.#ctor(PerpetuumSoft.Reporting.View.ZoomMode,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.Zoom" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.Zoom.Mode">
      <summary>Gets zooming mode for the current Zoom struct.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.Zoom.Scale">
      <summary>Gets scale value for the current Zoom struct.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.Zoom.#ctor(PerpetuumSoft.Reporting.View.ZoomMode)">
      <summary>Creates new instance of the Zoom struct with the specified mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.Zoom.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.Zoom" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ZoomForm">
      <summary>A dialog window for assigning zoom</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ZoomForm.OnLoad(System.EventArgs)">
      <summary>Raises the Load event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ZoomForm.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.View.ZoomForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.View.ZoomForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.View.ZoomForm.ZoomScale">
      <summary>Gets or sets zoom</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.View.ZoomMode">
      <summary>Zooming mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.ZoomMode.WholePage">
      <summary>Whole page mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.ZoomMode.PageWidth">
      <summary>Page width mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.View.ZoomMode.Scale">
      <summary>Custom scale mode.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Windows.Forms.Action">
      <summary>Provides uniform mechanism for binding menu and toobar items with corresponding actions.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.ShowTextInToolBar">
      <summary>Gets and sets whether text should be shown in ToolBar items.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Text">
      <summary>Gets and sets action's text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Shortcut">
      <summary>Gets and sets action's ShortCut.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Windows.Forms.Action.Executing">
      <summary>Occurs before action is executed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Checked">
      <summary>Gets and sets if binded control is checked.</summary>
    </member>
    <member name="E:PerpetuumSoft.Reporting.Windows.Forms.Action.Execute">
      <summary>Occurs when action is executed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.ExecuteAction">
      <summary>Executes action.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.#ctor">
      <summary>Creates new instance of Action class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Enabled">
      <summary>Gets and sets if binded control is enabled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.#ctor(PerpetuumSoft.Reporting.Windows.Forms.ActionCollection,System.String,System.String,System.String,System.Boolean,System.EventHandler)">
      <summary>Creates new instance of Action class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.Unbind(PerpetuumSoft.Reporting.Windows.Forms.ActionBind)">
      <summary>Unbinds this action with ActionBind object.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.Bind(PerpetuumSoft.Reporting.Windows.Forms.ActionBind)">
      <summary>Binds this action with ActionBind object.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.ToolTip">
      <summary>Gets and sets action's tooltip.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.#ctor(PerpetuumSoft.Reporting.Windows.Forms.ActionCollection,System.String,System.String,System.String,System.Boolean,System.EventHandler,System.Windows.Forms.Shortcut)">
      <summary>Creates new instance of Action class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.Unbind">
      <summary>Unbinds this action with all ActionBind objects.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Tag">
      <summary>Gets or sets the object that contains data about the action.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Name">
      <summary>Gets and sets name of Action.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.UnbindControl(System.Object)">
      <summary>Unbind control from action.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.Action.BindControl(System.Object)">
      <summary>Binds control to action.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.Action.Visible">
      <summary>Gets and sets if binded control is visible.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Windows.Forms.Action.ExecutingEventHandler">
      <summary>Represents the method that will handle the executing event of Action.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Windows.Forms.ActionBind">
      <summary>Represents instance, that sets correspondence beetwen Action and Control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.SetComponent(System.Object)">
      <summary>Sets new control.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.Action">
      <summary>Gets assigned Action.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.Component">
      <summary>Gets assigned Control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.Bind">
      <summary>When overriden in the derived classes binds control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.Unbind">
      <summary>When overriden in the derived classes unbinds control.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionBind.Update">
      <summary>Synchronizes Action and Control states.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection">
      <summary>Summary description for ActionCollection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.AddRange(PerpetuumSoft.Reporting.Windows.Forms.Action[])">
      <summary>Adds the specified array of actions to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Item(System.Int32)">
      <summary>Gets a action from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Add(PerpetuumSoft.Reporting.Windows.Forms.Action)">
      <summary>Adds the specified action to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Item(System.String)">
      <summary>Gets the action with specified name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Contains(PerpetuumSoft.Reporting.Windows.Forms.Action)">
      <summary>Returns whether the specified action exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Windows.Forms.Action)">
      <summary>Inserts the specified action to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.Remove(PerpetuumSoft.Reporting.Windows.Forms.Action)">
      <summary>Removes the specified action from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.#ctor">
      <summary>Creates a new instance of ActionCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ActionCollection.IndexOf(PerpetuumSoft.Reporting.Windows.Forms.Action)">
      <summary>Returns the specified actionэы index in the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Windows.Forms.ExecutingEventArgs">
      <summary>Provides data fo executing event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Windows.Forms.ExecutingEventArgs.Handled">
      <summary>Gets and sets whether action is already handled.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Windows.Forms.ExecutingEventArgs.#ctor">
      <summary>Creates a new instance of ExecutingEventArgs class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.BlankReportWizard">
      <summary>Creates blank report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.BlankReportWizard.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Shows wizard dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.BlankReportWizard.InternalBuildTemplate">
      <summary>Performs actual template generation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.BlankReportWizard.#ctor">
      <summary>Creates a new instance of BlankReportWizard class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.BlankReportWizard.ToString">
      <summary>Converts object to its string representation.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.CommonWizard">
      <summary>Incapsulates common wizard behavior.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.CreateReportTitle">
      <summary>Creates report title.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.ScriptLanguage">
      <summary>Gets or sets script language.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.PageNumberAlign">
      <summary>Gets or sets page number align mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.Y">
      <summary>Current position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.PageNumberPosition">
      <summary>Gets or sets page number position.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.AddBand(PerpetuumSoft.Reporting.DOM.BandBase,System.Double)">
      <summary>Adds a band to a template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.PageOrientation">
      <summary>Gets or sets page orientation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.CreatePageFooter">
      <summary>Creates page footer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.MeasureUnit">
      <summary>Gets or sets measure units.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.InsertTitle">
      <summary>Gets or sets if report title should be inserted in template.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.PaperKind">
      <summary>Gets or sets paper kind.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.CreatePageHeader">
      <summary>Creates page header.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.CustomPageSize">
      <summary>Get or sets custom page size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.Step">
      <summary>Gets step.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Shows wizard dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.CreateDataBands">
      <summary>Creates data sections.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.ReportTitle">
      <summary>Gets or sets report title.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.StyleSheet">
      <summary>Gets or sets template stylesheet.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.Gap">
      <summary>Gets gap.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.CommonWizard.Page">
      <summary>Currently generated page.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.#ctor">
      <summary>Creates a new instance of CommonWizard class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizard.InternalBuildTemplate">
      <summary>Perform actual template generation.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.CommonWizardForm">
      <summary>A dialog window for specifying common wizard settings</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizardForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.CommonWizardForm.#ctor(PerpetuumSoft.Reporting.Wizards.WizardBase,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Wizards.CommonWizardForm" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.DataLayoutType">
      <summary>Fields layout.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.DataLayoutType.List">
      <summary>List layout.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.DataLayoutType.Card">
      <summary>Card layout.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.DataWizardInfo">
      <summary>Incapsulates data section properties.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.DataSource">
      <summary>Gets or sets data source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.Fields">
      <summary>Gets displayed fiels collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.Groups">
      <summary>Gets groups collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.NestedSections">
      <summary>Gets nested data sections collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.#ctor">
      <summary>Creates a new instance of DataWizardInfo class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfo.LayoutType">
      <summary>Gets or sets layout type.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection">
      <summary>Defines a collection of DataWizardInfo in the wizard.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Wizards.DataWizardInfo)">
      <summary>Inserts the specified DataWizardInfo to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.Remove(PerpetuumSoft.Reporting.Wizards.DataWizardInfo)">
      <summary>Removes the specified DataWizardInfo from the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.Item(System.Int32)">
      <summary>Gets a DataWizardInfo from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.Contains(PerpetuumSoft.Reporting.Wizards.DataWizardInfo)">
      <summary>Returns whether the specified DataWizardInfo exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.#ctor">
      <summary>Creates a new instance of DataWizardInfoCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.IndexOf(PerpetuumSoft.Reporting.Wizards.DataWizardInfo)">
      <summary>Returns the specified DataWizardInfoэы index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.AddRange(PerpetuumSoft.Reporting.Wizards.DataWizardInfo[])">
      <summary>Adds the specified array of DataWizardInfos to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.DataWizardInfoCollection.Add(PerpetuumSoft.Reporting.Wizards.DataWizardInfo)">
      <summary>Adds the specified DataWizardInfo to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo">
      <summary>Incapsulates displayed field properties.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo.#ctor">
      <summary>Creates a new instance of FieldWizardInfo class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo.AggregateType">
      <summary>Gets or sets column aggregate type.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo.Width">
      <summary>Gets or sets column relative width.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo.DataMember">
      <summary>Gets or sets data member.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.FieldWizardInfo.Title">
      <summary>Gets or sets column title.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection">
      <summary>Defines a collection of FieldWizardInfo in the report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Wizards.FieldWizardInfo)">
      <summary>Inserts the specified field info to the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.IndexOf(PerpetuumSoft.Reporting.Wizards.FieldWizardInfo)">
      <summary>Returns the specified field infoэы index in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.Contains(PerpetuumSoft.Reporting.Wizards.FieldWizardInfo)">
      <summary>Returns whether the specified field info exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.AddRange(PerpetuumSoft.Reporting.Wizards.FieldWizardInfo[])">
      <summary>Adds the specified array of field infos to the collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.Item(System.Int32)">
      <summary>Gets a field info from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.#ctor">
      <summary>Creates a new instance of FieldWizardInfoCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.Remove(PerpetuumSoft.Reporting.Wizards.FieldWizardInfo)">
      <summary>Removes the specified field info from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.FieldWizardInfoCollection.Add(PerpetuumSoft.Reporting.Wizards.FieldWizardInfo)">
      <summary>Adds the specified field info to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.GroupWizardInfo">
      <summary>Incapsulates groupping settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfo.#ctor">
      <summary>Creates a new instance of GroupWizardInfo class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.GroupWizardInfo.GroupExpression">
      <summary>Gets or sets group expression.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfo.GetResultExpression">
      <summary>Return group expression.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.GroupWizardInfo.DataMember">
      <summary>Gets or sets group data member.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection">
      <summary>Defines a collection of data groups in the report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.Contains(PerpetuumSoft.Reporting.Wizards.GroupWizardInfo)">
      <summary>Returns whether the specified group exists in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.AddRange(PerpetuumSoft.Reporting.Wizards.GroupWizardInfo[])">
      <summary>Adds the specified array of groups to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.Add(PerpetuumSoft.Reporting.Wizards.GroupWizardInfo)">
      <summary>Adds the specified group to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.Insert(System.Int32,PerpetuumSoft.Reporting.Wizards.GroupWizardInfo)">
      <summary>Inserts the specified group to the collection at the specified index.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.Item(System.Int32)">
      <summary>Gets a group from the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.#ctor">
      <summary>Creates a new instance of GroupWizardInfoCollection class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.Remove(PerpetuumSoft.Reporting.Wizards.GroupWizardInfo)">
      <summary>Removes the specified group from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.GroupWizardInfoCollection.IndexOf(PerpetuumSoft.Reporting.Wizards.GroupWizardInfo)">
      <summary>Returns the specified groupэы index in the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.PageNumberAlign">
      <summary>Page numbers align.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberAlign.Center">
      <summary>At center.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberAlign.Left">
      <summary>At left.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberAlign.Right">
      <summary>At right.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.PageNumberPosition">
      <summary>Page numbers position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberPosition.Header">
      <summary>Show in header.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberPosition.Footer">
      <summary>Show in footer.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberPosition.Both">
      <summary>Show in header and footer.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.PageNumberPosition.None">
      <summary>Do not show.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard">
      <summary>Pivot table wizard. Creates report templates with pivot table.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.ShowRepeatText">
      <summary>Gets or sets a value indicating whether the endurable text will be displayed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.CreateDataBands">
      <summary>Creates data sections.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.NestedFields">
      <summary>Gets or sets a collection of data source fields which are used as the nested source.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.AutoRowHeight">
      <summary>Gets or sets row heidth aligment mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.PivotTableDataSource">
      <summary>Gets or sets pivot table data source.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Reporting.Wizards.WizardBase.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.Layout">
      <summary>Gets or sets pivot table settings.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.CreateReportTitle">
      <summary>Creates report title.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.TableCaption">
      <summary>Gets or sets pivot table caption.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.RowHeight">
      <summary>Gets or sets default row height.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.AutoColumnWidth">
      <summary>Gets or sets a value indicating whether the column width will be aligned by cell content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.ShowTableCaption">
      <summary>Gets or sets a value indicating whether the pivot table caption will be displayed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.DimensionOnEveryPage">
      <summary>Gets or sets the value indicating whether dimension cells will be printed on every page.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard.ShowSingleFact">
      <summary>Gets or sets whether a single fact caption should be visible.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm">
      <summary>A dialog window for assigning settings of the pivote table wizard</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm.Wizard">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm.Rds">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Reporting.Designer.IReportDesignerService" /></summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)">
      <summary>Raises the FormClosed event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm.#ctor(PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizard,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.PivotTableWizard.PivotTableWizardForm.Dispose(System.Boolean)">
      <summary>The Dispose Finalize pattern ensures that resources are released when the object is no longer needed</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.StandardWizard">
      <summary>Standard wizard. Creates templates for all common reports types.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.StandardWizard.ColumnsGap">
      <summary>Gets or sets column Gap.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.StandardWizard.DataSections">
      <summary>Gets collection of data sections in report.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.StandardWizard.#ctor">
      <summary>Creates a new instance of StandardWizard class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.StandardWizard.ColumnsCount">
      <summary>Gets or sets columns count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.StandardWizard.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>Shows wizard dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.StandardWizard.InternalBuildTemplate">
      <summary>Performs actual template creation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.StandardWizard.CreateDataBands">
      <summary>Creates data sections.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.WizardAggregateType">
      <summary>Aggregate type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Skewness">
      <summary>Skewness</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Count">
      <summary>Count.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Variance">
      <summary>Variance</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Kurtosis">
      <summary>Kurtosis</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.StandardDeviation">
      <summary>Standard deviation</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Sum">
      <summary>Sum.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.EstimateOfStandardDeviation">
      <summary>Estimate of standard deviation</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Median">
      <summary>Median</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Max">
      <summary>Maximum.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.EstimateOfVariance">
      <summary>Estimate of variance</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Avg">
      <summary>Average.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.Min">
      <summary>Minimum.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardAggregateType.None">
      <summary>None.</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.WizardBase">
      <summary>Base class for the Report Sharp-Shooter wizards.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.BuildTemplate">
      <summary>Builds template.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.InternalBuildTemplate">
      <summary>When overriden in the derived class performs actual template creation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.Register">
      <summary>Registers the controls library.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.RegisterWizardType(System.Type)">
      <summary>Adds the specified control type to the registered controls list.</summary>
    </member>
    <member name="F:PerpetuumSoft.Reporting.Wizards.WizardBase.WizardTypes">
      <summary>Collection of all registered wizard types.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.CreateWizard(System.Type)">
      <summary>Creates wizard instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.ShowDialog(System.Windows.Forms.Form,PerpetuumSoft.Reporting.Designer.IReportDesignerService)">
      <summary>When overriden in the derived class shows wizard settings dialog.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardBase.PrepareName(System.String)">
      <summary>Prepare name</summary>
    </member>
    <member name="T:PerpetuumSoft.Reporting.Wizards.WizardNameAttribute">
      <summary>Assigns name to the wizard type.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardNameAttribute.GetWizardName(System.Type)">
      <summary>Gets the name for the given wizards type.</summary>
    </member>
    <member name="P:PerpetuumSoft.Reporting.Wizards.WizardNameAttribute.Name">
      <summary>Gets or sets wizard name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Reporting.Wizards.WizardNameAttribute.#ctor(System.String)">
      <summary>Creates new instance of the WizardNameAttribute.</summary>
    </member>
  </members>
</doc>