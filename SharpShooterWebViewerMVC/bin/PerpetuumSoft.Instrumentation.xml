<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>PerpetuumSoft.Instrumentation</name>
  </assembly>
  <members>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Align">
      <summary>Enumerates alignment types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Align.Center">
      <summary>Specifies alignment of the instrument's center.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Align.Near">
      <summary>Specifies the near alignment.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Align.Far">
      <summary>Specifies the far alignment.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.AlignmentMode">
      <summary>Enumerates alignment mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.AlignmentMode.Center">
      <summary>Specifies the far alignment.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.AlignmentMode.Far">
      <summary>Specifies the center alignment.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.AlignmentMode.Near">
      <summary>Specifies the near alignment.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Arc">
      <summary>Represents the arc.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Arc.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Arc.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Arc.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Arc" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ArcBase">
      <summary>Represents the base class for arc elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ArcBase.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ArcBase.StartAngle">
      <summary>Gets or sets angle in degrees measured clockwise from the x-axis to the starting point of the arc.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ArcBase.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Draws element's contents, drawing is determined in the derived classes.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ArcBase.SweepAngle">
      <summary>Gets or sets angle in degrees measured clockwise from the startAngle parameter to ending point of the arc.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Bevel">
      <summary>Basic class for all types represetning bevels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Bevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)">
      <summary>Paints a bevel.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Bevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Gets a rectangle bounding the area around which a bevel is drawn.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.BevelStyle">
      <summary>Defines the kind of bevel.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.FrameRaised">
      <summary>Raised Frame.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.FrameLowered">
      <summary>Lowered Frame.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.Flat">
      <summary>Flat Flat-style bevel appearance.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.Raised">
      <summary>3D Raised style bevel.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.Double">
      <summary>Double width black bevel.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.Single">
      <summary>Single width black bevel.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.None">
      <summary>No bevel.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.DoubleRaised">
      <summary>3D Raised style bevel with double width.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.Lowered">
      <summary>3D Lowered style bevel.  </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.BevelStyle.DoubleLowered">
      <summary>3D Lowered style bevel with double width.  </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CalculableAttribute">
      <summary>Marks the properties that can be bound to an expression.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CalculableAttribute.IsCalculable">
      <summary>Gets whether the property supports expression.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CalculableAttribute.Match(System.Object)">
      <summary>Overridden. See <see cref="M:System.Attribute.Match(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CalculableAttribute.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.CalculableAttribute" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CalculableAttribute.Yes">
      <summary>Gets predefined instance of <see cref="T:PerpetuumSoft.Instrumentation.Model.CalculableAttribute" />  where IsCalculable property set to true.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CalculableAttribute.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.CalculableAttribute" /> class with the specified bindability attribute.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CapStyle">
      <summary>Enumerates cap styles.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.CapStyle.Flat">
      <summary>Specifies the flat cap style.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.CapStyle.Rounded">
      <summary>Specifies the rounded cap style.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CategoryTypeCollection">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Circle">
      <summary>Represents the circle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Circle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Circle" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Circle.Radius">
      <summary>Gets or sets radius of the circle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Circle.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Circle.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Circle.Center">
      <summary>Gets or sets center of the circle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Circle.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CircularNotches">
      <summary>Represents the notches located circular.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CircularNotches.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.NotchesStyle">
      <summary>Gets or sets the style of the notches.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.DarkColor">
      <summary>Gets or sets the dark color of the notches.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.LightColor">
      <summary>Gets or sets the light color of the notches.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CircularNotches.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CircularNotches.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Stroke,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CircularNotches.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.Count">
      <summary>Gets or sets the count of the notches.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularNotches.Length">
      <summary>Gets or sets the length of the notches.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CircularNotches.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.CircularNotches" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CircularShape">
      <summary>Represents a figure that is set by the center and size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularShape.Angle">
      <summary>Gets or sets the angle by clockwize of the shape.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularShape.Radius">
      <summary>Gets or sets the radius of the shape.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CircularShape.Center">
      <summary>Gets or sets the center of the shape.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Composite">
      <summary>Base class for all composite elements in the Instrumentation Model Kit.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.CanMoveBack(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Determines whether the elements can move to back.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.MoveForward(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Moves elements on the one position to forward.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.GetByName(System.String)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetByName(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Composite" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.BringToFront(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Sends the elements to front.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Composite.PerpetuumSoft#Framework#Model#ICompositeElement#Elements">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Model.ICompositeElement.Elements" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.ChildElementAdded(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>This method is called when the child element is added.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.MoveBackward(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Moves the elements on the one position to backward.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.ChildElementRemoved(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>This method is called when the child element is removed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.Calculate">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.Calculate" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Composite.Elements">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Model.ICompositeElement.Elements" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.PutToBack(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Sends the elements to back.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.CanMoveForward(PerpetuumSoft.Instrumentation.Model.ElementCollection)">
      <summary>Determines whether the elements can move to forward.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Composite.Dispose(System.Boolean)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute">
      <summary>Marks property that should be control point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute.UseInMoveOperation">
      <summary>Gets whether the point will be used in move operations.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute.#ctor(PerpetuumSoft.Instrumentation.Model.PointMode,System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute" /> class with specific parameters. Parameters indicate point mode and whether the point will be used in move operations.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute.DependsOn">
      <summary>Gets or sets properties' names which depend on this control point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ControlPointAttribute.PointMode">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.PointMode" /> that indicates point mode.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CustomBevel">
      <summary>Represents bevel with wide opportunities in customization.  </summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.ShadowSize">
      <summary>Gets or sets размер эфекта тени.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomBevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Bevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomBevel.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.DownOffset">
      <summary>Gets or sets the bevel inner effect offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.UpOffset">
      <summary>Gets or sets the bevel outer effect offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.BevelShadow">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> which sets radiuses for outer angles rounding.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.Padding">
      <summary>Gets or sets the inner bounds padding.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.InnerRadiuses">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> which sets radiuses for inner angles rounding.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.InnerStroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> which is used during the inner bevel lines drawing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.Stroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> which is used during the outer bevel lines drawing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.Margins">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Margins" /> which sets margins.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.Radiuses">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> which sets radiuses for outer angles rounding.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomBevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Bevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomBevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.CustomBevel" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomBevel.Fill">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> используеммый при отрисовки фона.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.CustomLabels">
      <summary>Represents Text labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomLabels.GetValueByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetValueByIndex(System.Int32)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.CustomLabels.Labels">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItemCollection" /> of label values. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomLabels.GetLabelsCount">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetLabelsCount" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomLabels.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.CustomLabels" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.CustomLabels.GetObjectByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetObjectByIndex(System.Int32)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ArcBaseDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.CircleDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.CircularNotchesDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.CircularShapeDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.CompositeDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.FrameDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.GuideDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentationElementDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentationNewTool">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentationPickTool">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentationSelectionDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentationSelectTool">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.InstrumentDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.IStyleService">
	<exclude>
		
	</exclude>
</member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.JointDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.LabelDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.LinearLevelDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.LineElementDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.PointDescriptor">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.PointType">
      <summary>Represents point types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Design.PointType.Frozen">
      <summary>Frozen point type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Design.PointType.Linked">
      <summary>Linked point type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Design.PointType.Free">
      <summary>Free point type.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.PolygonDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.RangedLevelDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.RectangleElementDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.RingSectorDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ScaleDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ScaleElementDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ScaleLabelsBaseDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ScaleMarksDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.ScaleTitleDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SliderDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueConverterBase">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueMaxLimitConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueMinLimitConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueOriginConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SmartValueStepConverter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SpecificRecangleDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.SpringDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.StarDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.StyleService">
	<exclude>
		
	</exclude>
</member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Design.TankDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase">
      <summary>Defines base class for Trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Calculate">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.Calculate" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Smooth">
      <summary>Gets or sets value that indicates whether smoothing will be applied.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.RecalculatePosition">
      <summary>Recalculates Trajectory position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Margins">
      <summary>Gets and sets Trajectory margins.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Style">
      <summary>Gets or sets name of the used style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.GetOutsideSize">
      <summary>Returns outside size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Stroke">
      <summary>Gets or sets the Stroke object used to trace.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.Fill">
      <summary>Gets or sets the Fill object used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.GetInsideSize">
      <summary>Returns inside size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.StartDistance">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ITrajectory.StartDistance" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.PercentToPoint(System.Double,System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PercentToPoint(System.Double,System.Double)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer">
      <summary>Represents object using for scale coloring.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer.GetColor(System.Double)">
      <summary>Returns color by the given value.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection">
      <summary>Represents color section.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.Color">
      <summary>Gets or sets the color of this section.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.#ctor(System.Drawing.Color,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.Portion">
      <summary>Gets or sets color section portion.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection.System#ICloneable#Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection">
      <summary>Represents the collection of <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection" /> objects.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Raise InsertComplete event.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.CollectionChanged">
      <summary>Occurs after changed collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.Add(PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Raise RemoveComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.Remove(PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.AddRange(PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection[])">
      <summary>Add array of <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection} objects into collection." /></summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.IndexOf(PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.OnInsert(System.Int32,System.Object)">
      <summary>Raise Insert event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.Contains(PerpetuumSoft.Instrumentation.Model.Drawing.ColorSection)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.OnValidate(System.Object)">
      <summary>Raise Validate event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection.CollectionChangedEventHandler">
      <summary>Represents method which calls after collection changing.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses">
      <summary>Represents parameters for rectangles corner rounding.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Parse(System.String,System.Globalization.NumberStyles)">
      <summary>Parses the specified string and returns an  <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> .</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Parses the specified string and returns an  <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> .</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.IFormatProvider)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.IFormatProvider)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.LeftTop">
      <summary>Gets or sets rounding radius for the top left corner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Parse(System.String)">
      <summary>Parses the specified string and returns an <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> .</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.RightTop">
      <summary>Gets or sets rounding radius for the top right corner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.#ctor(System.Double,System.Double,System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.String)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.RightBottom">
      <summary>Gets or sets rounding radius for the bottom left corner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Empty">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> which sets missing rounding radiuses for the corners.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ConvertUnits(PerpetuumSoft.Framework.Drawing.Unit,PerpetuumSoft.Framework.Drawing.Unit)">
      <summary>Parses the specified string and returns an  <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> .</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.LeftBottom">
      <summary>Gets or sets rounding radius for the bottom right corner.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.GetHashCode">
      <summary>Overridden. See <see cref="M:System.Object.GetHashCode" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Equals(System.Object)">
      <summary>Overridden. See <see cref="M:System.Object.Equals(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.String,System.IFormatProvider)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.ToString(System.String,System.IFormatProvider)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.IsEmpty">
      <summary>Gets a value showing that rounding radiuses are not set.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses.Parse(System.String,System.IFormatProvider)">
      <summary>Parses the specified string and returns an  <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.CornerRadiuses" /> .</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.InstrumentationCursors">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.SectionsColorizer">
      <summary>Represents colorizer section.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.SectionsColorizer.ColorSections">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection" /> - a collection of the sections colors.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.SectionsColorizer.GetColor(System.Double)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer.GetColor(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.SectionsColorizer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.SectionsColorizer" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Drawing.SingleColorColorizer">
      <summary>Represent single color for <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.SingleColorColorizer.GetColor(System.Double)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer.GetColor(System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Drawing.SingleColorColorizer.Color">
      <summary>Gets or sets the color used for painting.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Drawing.SingleColorColorizer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.SingleColorColorizer" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Effect3D">
      <summary>Enumerates 3d effects.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Effect3D.Flat">
      <summary>Specifies the flat effect.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Effect3D.Raised">
      <summary>Specifies the raised effect.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Effect3D.Lowered">
      <summary>Specifies the lowered effect.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Element">
      <summary>Base class for all elements in the Instrumentation Model Kit library.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#Runtime#IActiveElement#DoMouseEnter(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.Runtime.IActiveElement.DoMouseEnter(PerpetuumSoft.Framework.Model.MouseArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetFunction(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetFunction(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnMouseUp(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Instrumentation.Model.Element.MouseUp" /> event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Dispose(System.Boolean)">
      <summary>Releases the unmanaged resources used by the Element and optionally releases the managed resources.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Events">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Paint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.Paint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.ShouldSerializeStroke">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Smooth">
      <summary>Gets or sets value that indicates whether smooth will be used.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#Runtime#IActiveElement#DoMouseLeave(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.Runtime.IActiveElement.DoMouseLeave(PerpetuumSoft.Framework.Model.MouseArguments)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Element.MouseMove">
      <summary>Occurs when the mouse pointer is moved over the element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnMouseLeave(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Instrumentation.Model.Element.MouseLeave" /> event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Performs element drawing.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Element.MouseLeave">
      <summary>Occurs when the mouse pointer leaves the element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Finalize">
      <summary>Overridden. Releases unmanaged resources and performs other cleanup operations before the Element is reclaimed by garbage collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Returns the elements that are placed at the given point.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetStyle">
      <summary>Returns the style by name.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Element.MouseDown">
      <summary>Occurs when the mouse pointer is over the element and a mouse button is pressed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.ResetFill">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#IElement#Parent">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Model.IElement.Parent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Calculate">
      <summary>Calculates the expressions and sets the result to the corresponded properties.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnFillChanged">
      <summary>Executes if the fill was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.RecalculateAll">
      <summary>Gets or sets value that indicates whether expressions will be recalculate for all elemnts or for of these elements only.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Style">
      <summary>Gets or sets the name of the used style.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Element.MouseEnter">
      <summary>Occurs when the mouse pointer enters the element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.ResetStroke">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnMouseEnter(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Instrumentation.Model.Element.MouseEnter" /> event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Parent">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Model.IElement.Parent" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Performs element's drawing with specific fill and stroke.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Instrument">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.Instrument" />, which contains this element.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Element.ControlTypes">
      <summary>Types of the register's elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetStyle(System.String)">
      <summary>Returns the style by the name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnMouseDown(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Instrumentation.Model.Element.MouseDown" /> event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Recalculate">
      <summary>Recalculates the expressions.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.RegisterType(System.String,System.Type)">
      <summary>Registers the element's type.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Visible">
      <summary>Gets or sets a value indicating whether the element is displayed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnMouseMove(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raises the <see cref="E:PerpetuumSoft.Instrumentation.Model.Element.MouseMove" /> event.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Element.MouseUp">
      <summary>Occurs when the mouse pointer is over the element and a mouse button is released.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Invalidate">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.Invalidate" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.BreakEventsBubbling">
      <summary>Gets or sets value that indicates whether events will be passed to parent.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnStyleChanged">
      <summary>Executes if the style was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Active">
      <summary>Gets or sets value that indicates whether events will be passed to this element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Name">
      <summary>Gets or sets the element's name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.AddElement(System.String,System.Type)">
      <summary>Registers the element type for the use in the designer tool box.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#Runtime#IActiveElement#DoMouseMove(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.Runtime.IActiveElement.DoMouseMove(PerpetuumSoft.Framework.Model.MouseArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#Runtime#IActiveElement#DoMouseDown(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.Runtime.IActiveElement.DoMouseDown(PerpetuumSoft.Framework.Model.MouseArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnParentChanged">
      <summary>Is executed if the parent was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.SetValue(System.String,System.String,System.Object)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Invalidate(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.Invalidate(PerpetuumSoft.Framework.Drawing.VectorRectangle)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.PerpetuumSoft#Framework#Model#Runtime#IActiveElement#DoMouseUp(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.Runtime.IActiveElement.DoMouseUp(PerpetuumSoft.Framework.Model.MouseArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Stroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> object that is used to trace.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnStrokeChanged">
      <summary>Is executeв if the stroke was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.ShouldSerializeFill">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.Dispose">
      <summary>Releases all resources used by the Element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetByName(System.String)">
      <summary>Returns the element by the name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Fill">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.GetValue(System.String,System.String)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.OnVisibleChanged">
      <summary>Is executed if the visibility was changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Element.Expressions">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.ExpressionBindingCollection" /> expressions that are used by this element.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Element.CategoryType">
      <summary>Describes a registered type element.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Element.CategoryType.Type">
      <summary>Gets type of element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.CategoryType.#ctor(System.String,System.Type)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Element.CategoryType" /> class with specific parameters. Parameters set name of element category and element type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Element.CategoryType.CategoryName">
      <summary>Gets name of element category.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.Element.CategoryType.Priority">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Element.CategoryType.#ctor(System.String,System.Type,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Element.CategoryType" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ElementCollection">
      <summary>Represents the collection of the elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new element into the collection instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ElementCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.PerpetuumSoft#Framework#Model#IElementList#Remove(PerpetuumSoft.Framework.Model.IElement)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElementList.Remove(PerpetuumSoft.Framework.Model.IElement)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.IndexOf(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Overloaded. Returns the zero-based index of the first occurrence of an element in the collection or in a portion of it.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new element into the collection instance.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.ElementCollection.ElementRemoved">
      <summary>Occurs after the element was removed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.AddRange(PerpetuumSoft.Instrumentation.Model.Element[])">
      <summary>Adds the elements to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Inserts an element into the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.Add(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Adds an element to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.Remove(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Removes the first occurrence of an element from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an element from the collection instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.Contains(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Determines whether an element is in the collection.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.ElementCollection.ElementAdded">
      <summary>Occurs after the element was added.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ElementCollection.Item(System.Int32)">
      <summary>Gets or sets the element at the specified index. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ElementCollection.PerpetuumSoft#Framework#Model#IElementList#Item(System.Int32)">
      <summary>Implements <see cref="P:PerpetuumSoft.Framework.Model.IElementList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ElementCollection.PerpetuumSoft#Framework#Model#IElementList#Add(PerpetuumSoft.Framework.Model.IElement)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElementList.Add(PerpetuumSoft.Framework.Model.IElement)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ElementCollection.CollectionChanged">
      <summary>Represents the method that will handle the ElementAdded and ElementRemoved.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ElementPainter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ElementPainter.LinearLevelPainter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ElementPainter.TankPainter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Ellipse">
      <summary>Represents the ellipse.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ellipse.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ellipse.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Ellipse" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ellipse.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.EllipseBevel">
      <summary>Represents the ellipse bevel.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.Margins">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Margins" /> which sets margins.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.EllipseBevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Gets or sets the bevel outer effect offset.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.EllipseBevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.EllipseBevel" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.DrawingStyle">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.EllipseBevelDrawingStyle" /> which represents the bevel drawing style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.EllipseBevel.Clone">
      <summary>Gets or sets the bevel inner effect offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.UpOffset">
      <summary>Gets or sets the bevel outer effect offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.Stroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> which is used during the lines drawing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.BevelShadow">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Shadow" /> which sets the bevel shadow effect.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.EllipseBevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)">
      <summary>Represents bevel with wide opportunities in customization.  </summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.DownOffset">
      <summary>Gets or sets the bevel inner effect offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.EllipseBevel.Fill">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> which is used during the background drawing.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.EllipseBevelDrawingStyle">
      <summary>Enumerates the ellipse bevel drawing effect types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.EllipseBevelDrawingStyle.Sharp">
      <summary>Defines the sharp gradation.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.EllipseBevelDrawingStyle.Smooth">
      <summary>Defines the smooth gradation.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ExpressionBinding">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ExpressionBindingCollection">
      <exclude>
      </exclude>
    </member>
    <member name="">
</member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Frame">
      <summary>Represents the frame.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Frame.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.BevelStyle">
      <summary>Gets or sets the style of frame.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.LightColor">
      <summary>Gets or sets the light color of the frame.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.OuterColor">
      <summary>Gets or sets outer color of the frame.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.DarkColor">
      <summary>Gets or sets the dark color of the frame.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.InternalBounds">
      <summary>Gets the internal bounds of the frame.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Frame.InnerColor">
      <summary>Gets or sets inner color of the frame.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Frame.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Frame" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Gear">
      <summary>Represents Gear.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Gear.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Gear.DimensionsRatio">
      <summary>Gets or sets dimensions ratio.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Gear.Count">
      <summary>Gets or sets count of edges.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Gear.Depth">
      <summary>Gets or sets size of an edge.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Gear.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Gear" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Gear.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Gear.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Group">
      <summary>Represents the container for the group objects.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Group.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Group.Style">
      <summary>Gets or sets name of the used style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Group.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Group.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Group" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Group.Smooth">
      <summary>Gets or sets value that indicates whether smoothing will be applied.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Guide">
      <summary>Represents the linear trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.ChildElementRemoved(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Composite.ChildElementRemoved(PerpetuumSoft.Instrumentation.Model.Element)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Guide.EndPoint">
      <summary>Gets or sets the end point of the trajectory.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Guide.StartDistance">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ITrajectory.StartDistance" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Guide.Align">
      <summary>Gets or sets alignment.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.RecalculatePosition">
      <summary>Overridden. See <see cref="'M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.RecalculatePosition" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.ChildElementAdded(PerpetuumSoft.Instrumentation.Model.Element)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Composite.ChildElementAdded(PerpetuumSoft.Instrumentation.Model.Element)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.PercentToPoint(System.Double,System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PercentToPoint(System.Double,System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Guide.StartPoint">
      <summary>Gets or sets the begin point of the trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.PercentToPoint(PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector,System.Double,System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Guide" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PercentToPoint(System.Double,System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Guide.GuideDirection">
      <summary>Gets or sets guide direction.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Guide.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.GuideDirection">
      <summary>Enumerates the trajectory directions type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.GuideDirection.RightToLeft">
      <summary>Specifies direction from right to left.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.GuideDirection.LeftToRight">
      <summary>Specifies direction from left to right.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.GuideDirection.BottomToTop">
      <summary>Specifies direction from bottom to left.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.GuideDirection.TopToBottom">
      <summary>Specifies direction from top to bottom.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.GuideDirection.Free">
      <summary>Specifies the arbitrary direction.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Highlight">
      <summary>Represents Highlight for dial instruments.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Highlight.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Highlight.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Highlight.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Highlight" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Highlight.SweepAngle">
      <summary>Gets or sets sweep angle.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Highlight.K">
      <summary>Gets or sets coefficient assigning Highlight concavity.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Highlight.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.IDataContext">
      <summary>Defines methods for data provision.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IDataContext.GetDataListNames">
      <summary>Returns names of all available data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IDataContext.GetDataList(System.String)">
      <summary>Returns data object by its name.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.IDataReceiver">
      <summary>Defines a method for data reciving.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IDataReceiver.DataSourceChanged">
      <summary>Is executed if the data source was changed.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ILinkedSupported">
      <summary>Defines a method to bind the element to trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ILinkedSupported.GetRadius(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Returns distance between the given point and trajectory.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ImageCollection">
      <summary>Represents the collection of the images.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.Add(PerpetuumSoft.Instrumentation.Model.ImageWrap)">
      <summary>Adds an image to the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.IndexOf(PerpetuumSoft.Instrumentation.Model.ImageWrap)">
      <summary>Overloaded. Returns the zero-based index of the first occurrence of an image in the collection or in a portion of it.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ImageCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Model.ImageWrap)">
      <summary>Inserts an image into the collection at the specified index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.Remove(PerpetuumSoft.Instrumentation.Model.ImageWrap)">
      <summary>Removes the first occurrence of an image from the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after removing an image from the collection instance.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.ImageCollection.ImageWrapChanged">
      <summary>Occurs when collection was changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Performs additional custom processes after inserting a new image into the collection instance.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.Contains(PerpetuumSoft.Instrumentation.Model.ImageWrap)">
      <summary>Determines whether an image is in the collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.OnValidate(System.Object)">
      <summary>Performs additional custom processes when validating a value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.OnInsert(System.Int32,System.Object)">
      <summary>Performs additional custom processes before inserting a new image into the collection instance.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ImageCollection.Item(System.Int32)">
      <summary>Gets or sets the image at the specified index. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageCollection.AddRange(PerpetuumSoft.Instrumentation.Model.ImageWrap[])">
      <summary>Adds the images to the collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ImageCollection.CollectionChanged">
      <summary>Represents the method that will handle the ImageAdded and ImageRemoved.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ImageWrap">
      <summary>Represents the wrap for the image.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageWrap.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ImageWrap" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageWrap.#ctor(System.Drawing.Bitmap)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ImageWrap" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ImageWrap.Image">
      <summary>Gets or sets image.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ImageWrap.Dispose">
      <summary>Implements <see cref="M:System.IDisposable.Dispose" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Instrument">
      <summary>Represents the instrument.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.ShowGrid">
      <summary>Gets and sets whether the grid should be displayed in the design mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given filename with given <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetElementAt(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateImage(System.Int32,System.Int32)">
      <summary>Creates image with a given size.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateEmptyInstrument">
      <summary>Creates new empty instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Int32,System.Int32,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to a file with given name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.MeasureUnit">
      <summary>Gets and sets the measure unit for the instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Int32)">
      <summary>Saves instrument as JPEG image into given filename with given jpegQuality.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Focused">
      <summary>Gets or sets whether the instrument has the focus.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Parameters">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetStyle(System.String)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetStyle(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given stream with given resolution and <see cref="T:PerpetuumSoft.Framework.Drawing.Model.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Invalidate(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.Invalidate(PerpetuumSoft.Framework.Drawing.VectorRectangle)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetFunction(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetFunction(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.DataContext">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.IDataContext" /> object for data provide. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Instrument" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Read(System.IO.Stream)">
      <summary>Deserializes instrument from the given stream.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Single,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given filename with given resolution, scale and jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Write(System.String)">
      <summary>Serializes instrument into given filename.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given stream with given resolution and jpegQuality.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Styles">
      <summary>Gets the collection of styles.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Single,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given stream with given resolution, scale and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.SnapToGrid">
      <summary>Gets and sets whether objects should be snapped to grid in the design mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Enabled">
      <summary>Gets or sets whether the instrument handles the mouse events.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Int32,System.Int32,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given stream with given size, scale and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateImage(System.Single)">
      <summary>Creates image with a given resolution.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Invalidate">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.Invalidate" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Write(System.IO.Stream)">
      <summary>Serializes instrument into given stream.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Int32,System.Int32,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given filename with given size, scale and jpegQuality.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.BreakEventsBubbling">
      <summary>Gets or sets value that indicates whether events will be passed to parent.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SetParameterValue(System.String,System.Object)">
      <summary>Sets value of the instrument parameter by its name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Size">
      <summary>Gets or sets the instrument size.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.EndUpdate">
      <summary>Completes the group operations, where Invalidate method was called once for whole group.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetParameterValue(System.String)">
      <summary>Returns value of the instrument parameter by its name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.CustomFunctions">
      <summary>Gets collection of user defined functions to use in expressions specially set for this instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateImage(System.Int32,System.Int32,System.Single)">
      <summary>Creates image with a given size and scale.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Int32,System.Int32,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given stream with given size, scale and jpegQuality.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Bevel">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.Bevel" /> which sets the drawing style of the bevel around the instrument. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateImage(System.Single,System.Single)">
      <summary>Creates image with a given resolution and scale.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.GridStep">
      <summary>Gets or sets the step of the grid in the design mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Int32,System.Int32,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to a file with given name with given height, width and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Single,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given stream with given resolution, scale and jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.GetDockingBounds">
      <summary>Gets rectangular area in which the inner content will be located.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Smooth">
      <summary>Gets or sets value that indicates whether smoothing will be applied.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given filename with given resolution and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateInstrumentDesignerForm">
      <summary>Creates specific instrument designer.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.Instrument.Invalidated">
      <summary>Occurs after the element's display requires redrawing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Int32)">
      <summary>Saves instrument as JPEG image into given stream with given jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.CreateImage">
      <summary>Creates image.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given stream with given size, scale and <see cref="T:PerpetuumSoft.Farmework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.BeginUpdate">
      <summary>Starts the group operations, where Invalidate method will be called once for the whole group.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Int32,System.Int32,System.Int32)">
      <summary>Saves instrument as JPEG image into given stream with given size and jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.ResetDataSources">
      <summary>Resets selected data sources.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.Bounds">
      <summary>Gets the bounds of the instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Single,System.Single,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given filename with given resolution, scale and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.Read(System.String)">
      <summary>Deserializes instrument from the given filename.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Single,System.Int32)">
      <summary>Saves instrument as JPEG image into given filename with given resolution and jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>Saves instrument as JPEG image into given filename with given size and jpegQuality.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Instrument.SaveAsImage(System.IO.Stream,System.Int32,System.Int32,PerpetuumSoft.Framework.Drawing.PictureFormat)">
      <summary>Saves instrument as image to the given filename with given size and <see cref="T:PerpetuumSoft.Framework.Drawing.PictureFormat" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Instrument.IsFixed">
      <summary>Gets or sets the value which indicates that the instrument size is not changed. </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.IScale">
      <summary>Main interface for scale.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.ValueToPercent(System.Double)">
      <summary>Converts value to percentage.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.ValueToPoint(System.Double,System.Double)">
      <summary>Converts value to point.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.GetDiscreteValuesCount">
      <summary>Returnы count of discrete values.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.PercentToValue(System.Double)">
      <summary>Converts percentage to value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.ToRealValue(System.Double)">
      <summary>Returns source data value by its scale value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.PointToValue(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Converts point to value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.Minimum">
      <summary>Gets or sets minimum value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.IsDiscrete">
      <summary>Gets value indicating that this scale is discrete.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.Colorizer">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer" /> object that is used for scale elements colouring.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.Maximum">
      <summary>Gets or sets maximum value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.GetDiscreteValue(System.Int32)">
      <summary>Returnы discrete value by index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScale.FromRealValue(System.Object)">
      <summary>Returns scale value by source data value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.IsLogarithmic">
      <summary>Gets the value which indicates that the scale is logarithmic.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScale.LogBase">
      <summary>Gets the value which indicates base of the logarithm.  </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.IScaleElement">
      <summary>Represents the element that can be located on the scale.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.ResetMeasure">
      <summary>Recalculates scale elements position.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScaleElement.Dock">
      <summary>Gets dock in relation to the scale.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScaleElement.Padding">
      <summary>Gets indent from the scale.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.IScaleElement.Visible">
      <summary>Gets the element's visisbility.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize">
      <summary>Returns size of the area occupied by the scale elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.SetStartDistance(System.Double)">
      <summary>Sets default distance of the scale elements in relation to the scale.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ISlider">
      <summary>Main interface for slider.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ISlider.MinLimit">
      <summary>Gets minimum value limit.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ISlider.MaxLimit">
      <summary>Gets maximum value limit.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ISlider.Value">
      <summary>Gets element value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ISlider.GetPosition(System.Double)">
      <summary>Returns position by specific radius.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ITrajectory">
      <summary>Represents the trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PercentToPoint(System.Double,System.Double)">
      <summary>Returns point that corresponds given percent and distance to trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Returns percent that corresponds to given point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ITrajectory.StartDistance">
      <summary>Gets start distance in relation to trajectory.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Joint">
      <summary>Represents the Joint.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.RecalculatePosition">
      <summary>Overridden. See <see cref="'M:PerpetuumSoft.Instrumentation.Model.DockableTrajectoryBase.RecalculatePosition" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.Dock">
      <summary>Gets or sets docking of this element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.Center">
      <summary>Gets or sets center of joint element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.StartDistance">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ITrajectory.StartDistance" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.StartAngle">
      <summary>Gets or sets start angle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PointToPercent(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.TotalAngle">
      <summary>Gets or sets total angle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Joint" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Joint.Radius">
      <summary>Gets or sets radius of joint element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.PercentToPoint(System.Double,System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ITrajectory.PercentToPoint(System.Double,System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Joint.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.JointDocking">
      <summary>Enumerates joint docking types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.Center">
      <summary>Specifies docking center.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.RightBottom">
      <summary>Sets docking to right bottom.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.Top">
      <summary>Sets docking to top.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.Bottom">
      <summary>Sets docking to bottom.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.LeftTop">
      <summary>Sets docking to left top.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.LeftBottom">
      <summary>Sets docking to left bottom.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.Left">
      <summary>Sets docking to left.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.RightTop">
      <summary>Sets docking to right top.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.Right">
      <summary>Sets docking to right.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.JointDocking.None">
      <summary>Specifes docking absence.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Label">
      <summary>Represents the Label.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.ShouldSerializeFont">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Label" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Label.Text">
      <summary>Gets or sets label text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Label.Font">
      <summary>Gets or sets label font.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.ResetFont">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Label.TextAlign">
      <summary>Gets or sets label text alignment.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.ShouldSerializeMargins">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Label.ResetMargins">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Label.Margins">
      <summary>Gets or sets element matgins.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.LabelPosition">
      <summary>Enumerates the label position types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.LabelPosition.Near">
      <summary>Specifies the near position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.LabelPosition.Far">
      <summary>Specifies the far position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.LabelPosition.Center">
      <summary>Specifies the center position.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.LevelBase">
      <summary>Reperesents base class for level elements.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LevelBase.EndColor">
      <summary>Gets or sets color used in the end point of the level gradient fill.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LevelBase.StartColor">
      <summary>Gets or sets color used in the start point of the level gradient fill.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LevelBase.Colors">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.ColorSectionCollection" />, reperesenting colors used in the level gradient fill.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LevelBase.SetStartDistance(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.SetStartDistance(System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LevelBase.DivisionsStroke">
      <summary>Gets or sets stroke used for darwing divisions.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LevelBase.Divisions">
      <summary>Gets or sets divisions count.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Line">
      <summary>Represents the Line.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Line.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Line.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Line.Fill">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Line.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Line" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Line.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.LinearLevel">
      <summary>Represents Linear level.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearLevel.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.StartCap">
      <summary>Gets or sets style of a cap in the start point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.ShowAsThermometer">
      <summary>Gets or sets value, indicating it the element will be drawn in the form of a thermometer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.Effect3D">
      <summary>Gets or sets values, indicating use of 3d effects.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.Width">
      <summary>Gets or sets width of the level elemets.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.EndCap">
      <summary>Gets or sets style of a cap in the end point.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearLevel.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearLevel.PocketRadius">
      <summary>Gets or sets the thermometer pocket radius.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearLevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.LinearLevel" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearLevel.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.LinearNotches">
      <summary>Represents Linear notches.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.Fill">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.Width">
      <summary>Gets or sets linear nothes width.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.Count">
      <summary>Gets or sets linear notches count.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.DarkColor">
      <summary>Gets or sets linear notches dark color.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.Stroke">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.LightColor">
      <summary>Gets or sets linear notches light color.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearNotches.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearNotches.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearNotches.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearNotches.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.LinearNotches" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LinearNotches.NotchesStyle">
      <summary>Gets or sets notches style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LinearNotches.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Stroke,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.LineElement">
      <summary>Represents the basic class for line elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LineElement.IsIncludePoint(PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Returns the value indicating whether an element includes a point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LineElement.EndPoint">
      <summary>Gets or sets the end point of the element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.LineElement.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.LineElement.StartPoint">
      <summary>Gets or sets the begin point of the element.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Needle">
      <summary>Represents the Needle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Needle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Needle" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Needle.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Needle.ShowMode">
      <summary>Gets or sets view mode of an element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Needle.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Needle.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Needle.NeedlePoints">
      <summary>Gets collection of needle points.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Needle.StartWidth">
      <summary>Gets or sets width of the begin needle side.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Needle.EndWidth">
      <summary>Gets or sets width of the end needle side.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.NeedlePoint">
      <summary>Represents the needle point.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePoint.#ctor(System.Double,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.NeedlePoint" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.NeedlePoint.Portion">
      <summary>Gets or sets needle point portion.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePoint.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.NeedlePoint" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.NeedlePoint.Width">
      <summary>Gets or sets needle point width.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection">
      <summary>Represents collection of <see cref="T:PerpetuumSoft.Instrumentation.Model.NeedlePoint" /> objects.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.IndexOf(PerpetuumSoft.Instrumentation.Model.NeedlePoint)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.Contains(PerpetuumSoft.Instrumentation.Model.NeedlePoint)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.OnValidate(System.Object)">
      <summary>Raise Validate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.AddRange(PerpetuumSoft.Instrumentation.Model.NeedlePoint[])">
      <summary>Add array of <see cref="T:PerpetuumSoft.Instrumentation.Model.NeedlePoint" /> objects into collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection" /> class.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.CollectionChanged">
      <summary>Occurs after collection changing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.Remove(PerpetuumSoft.Instrumentation.Model.NeedlePoint)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Raise RemoveComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Raise InsertComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Model.NeedlePoint)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.OnInsert(System.Int32,System.Object)">
      <summary>Raise Insert event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.Add(PerpetuumSoft.Instrumentation.Model.NeedlePoint)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.NeedlePointCollection.CollectionChangedEventHandler">
      <summary>Represents method which calls after collection changing.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.NotchesStyle">
      <summary>Represents notches styles.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.NotchesStyle.Raised">
      <summary>Raised notches.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.NotchesStyle.Lowered">
      <summary>Lowered notches.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.NotchesStyle.Flat">
      <summary>Flat notches.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.NumericLabels">
      <summary>Represents the Numeric labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.NumericLabels.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.NumericLabels" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.NumericLabels.NumbersFormat">
      <summary>Gets or sets format of numeric labels values.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Parameter">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ParameterCollection">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Picture">
      <summary>Represents the Picture.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Picture.Image">
      <summary>Gets or sets <see cref="T:System.Drawing.Image" /> of Picture element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Picture.ResetImage">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Picture.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Picture" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Picture.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Picture.ShouldSerializeImage">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Picture.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Picture.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Picture.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.PictureSet">
      <summary>Represents the set of pictures.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.PictureSet.Images">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.ImageCollection" /> of Element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.PictureSet.Style">
      <summary>Gets or sets name of the used style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.PictureSet.Dispose(System.Boolean)">
      <summary>Clean up any resources being used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.PictureSet.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.PictureSet.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.PictureSet" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.PictureSet.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.PictureSet.ImageIndex">
      <summary>Gets or sets index of the current image.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.PictureSet.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Pie">
      <summary>Represents the Pie.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Pie.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Pie.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Pie" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.PointMode">
      <summary>Represents the control point mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.Move">
      <summary>Intended for element moving.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.Rotate">
      <summary>Intended for element rotating.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.SizeWE">
      <summary>The two-headed horizontal (west/east) element sizing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.SizeNWSE">
      <summary>The two-headed diagonal (northwest/southeast) element sizing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.RotatePoint">
      <summary>Intended for change an angular property of the element. </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.SizeNS">
      <summary>The two-headed vertical (north/south) element sizing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.SizeNESW">
      <summary>The two-headed diagonal (northeast/southwest) element sizing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.PointMode.MovePoint">
      <summary>Intended for change a linear property of the element. </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Polygon">
      <summary>Represents the Poligon.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Polygon.Sides">
      <summary>Gets or sets element sides count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Polygon.GetVertex">
      <summary>Returns vertexes of the poligon element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Polygon.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Polygon" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Polygon.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Polygon.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Polygon.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.RangedLevel">
      <summary>Represents level with ranged width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.RangedLevel" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RangedLevel.StartWidth">
      <summary>Gets or sets start width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RangedLevel.AlignmentMode">
      <summary>Gets or sets alignment mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RangedLevel.Colorizer">
      <summary>Gets object used for scale coloring.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RangedLevel.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RangedLevel.EndWidth">
      <summary>Gets or sets end width.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Rectangle">
      <summary>Represents the Rectangle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Rectangle.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Rectangle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Rectangle" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.RectangleBevelDrawingStyle">
      <summary>Enumerates the rectangular bevel drawing effect types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.RectangleBevelDrawingStyle.Smooth">
      <summary>Defines the smooth gradation effect. </summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.RectangleBevelDrawingStyle.Sharp">
      <summary>Defines the sharp gradation effect.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.RectangleElement">
      <summary>Represents a rectangle element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Draws element's contents, drawing is determined in the derived classes.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RectangleElement.Angle">
      <summary>Angle in degrees measured clockwise from the x-axis of the rectangle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.Dispose(System.Boolean)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.Dispose(System.Boolean)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.OnBoundsChanged">
      <summary>This method is called when bounds are changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.RingSector">
      <summary>Represents the Ring sector.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RingSector.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.RingSector" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RingSector.InternalRadius">
      <summary>Gets or sets internal radius of element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RingSector.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RingSector.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.RoundedRectangle">
      <summary>Represents rectangle with rounded angles.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RoundedRectangle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.RoundedRectangle" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.RoundedRectangle.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.RoundedRectangle.Radius">
      <summary>Gets or sets radius of angles.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Scale">
      <summary>Represents the Scale.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Colorizer">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.Colorizer" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Maximum">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.Maximum" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Minimum">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.Minimum" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetDiscreteValuesCount">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.GetDiscreteValuesCount" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.IsDiscrete">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.IsDiscrete" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Scale" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.ValueToPercent(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.ValueToPercent(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.FromRealValue(System.Object)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.FromRealValue(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.PercentToValue(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.PercentToValue(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.ToRealValue(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.ToRealValue(System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetDiscreteValue(System.Int32)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.GetDiscreteValue(System.Int32)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Reverse">
      <summary>Gets or sets <see cref="T:System.Boolean" /></summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Trajectory">
      <summary>Gets scale trajectory.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.ValueToPoint(System.Double,System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.ValueToPoint(System.Double,System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Style">
      <summary>Gets or sets name of the used style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Scale.Smooth">
      <summary>Gets or sets value that indicates whether smoothing will be applied.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.PointToValue(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScale.PointToValue(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.Calculate">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.Calculate*]." /></summary>
    </member>
    <member name="PerpetuumSoft.Instrumentation.Model.Scale.IsLogarithmic">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.IsLogarithmic" />.</summary>
    </member>
    <member name="PerpetuumSoft.Instrumentation.Model.Scale.LogBase">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScale.LogBase" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetMajorValuesCount(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue,PerpetuumSoft.Instrumentation.Model.SmartValue,System.Int32,System.Int32,System.Boolean)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetStartValue(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetRoundValuesStep(PerpetuumSoft.Instrumentation.Model.IScale,System.Int32)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetMajorValues(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue,PerpetuumSoft.Instrumentation.Model.SmartValue,System.Int32,System.Int32,System.Boolean)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Scale.GetMinorValues(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue,PerpetuumSoft.Instrumentation.Model.SmartValue,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleDocking">
      <summary>Enumerates the scale docking type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleDocking.Outside">
      <summary>Specifies the outside scale docing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleDocking.Inside">
      <summary>Specifies the inside scale docing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleDocking.Center">
      <summary>Specifies the center scale docing.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleDocking.None">
      <summary>Specifies that the scale docking is not defined.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleElement">
      <summary>Represents basic class for scale elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.ResetMeasure">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.ResetMeasure" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.ResetColorizer">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.OnParentChanged">
      <summary>Is called when the Parent property is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Padding">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScaleElement.Padding" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.MaxLimit">
      <summary>Gets or sets maximum value limit.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Distance">
      <summary>Gets or sets distance.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Origin">
      <summary>Gets or sets scale start point that is used during scale elements allocation.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Scale">
      <summary>Gets a scale where an element is located.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.GetStartValue(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue,System.Double)">
      <summary>Returns start value with specific parameters.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Dock">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.IScaleElement.Dock" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.Colorizer">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.Drawing.Colorizer" /> for element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.GetColor(System.Double)">
      <summary>Returns the color by the given value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.GetRoundLabelsStep(System.Double,System.Double,System.Int32)">
      <exclude>
      </exclude>
      <summary>Gets step between scale labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.OnStyleChanged">
      <summary>Is called when the Style property is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleElement.MinLimit">
      <summary>Gets or sets minimum value limit.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.ShouldSerializeColorizer">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.IsPaint(PerpetuumSoft.Instrumentation.Model.IScale,PerpetuumSoft.Instrumentation.Model.SmartValue,PerpetuumSoft.Instrumentation.Model.SmartValue,System.Double)">
      <summary>Returns value, indicating whether element is drawn at the specified scale value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.SetStartDistance(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.SetStartDistance(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.GetStartValue(System.Double)">
      <summary>Returns start value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.IsPaint(System.Double)">
      <summary>Returns a value that shows whether it is needed to draw a scale element by the specified value on the scale. </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleElement.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleKind">
      <summary>Enumerates scale types.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleKind.ExcludeMinimum">
      <summary>Specifies scale with excluded maximum value.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleKind.IncludeBoth">
      <summary>Specifies scale with excluded maximum and minimum values.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ScaleKind.ExcludeMaximum">
      <summary>Specifies scale with excluded minimum value.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleLabels">
      <summary>Represents Scale labels.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabels.Divisions">
      <summary>Gets or sets divisions count, will be used if the Step property is set to Auto.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabels.UseRoundValues">
      <summary>Gets or sets value that indicates if label values will be round.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.GetObjectByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetObjectByIndex(System.Int32)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabels.Step">
      <summary>Gets or sets interval between labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ScaleLabels" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.GetLabelsCount">
      <summary>Return labels count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.GetValueByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetValueByIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabels.GetLabel(System.Int32)">
      <summary>Returns label text.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase">
      <summary>Represents the base class for scale labels.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.TextAlignment">
      <summary>Gets or sets text alignment.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.OddLabelsDistance">
      <summary>Gets or sets distance foк odd labels.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.Formula">
      <summary>Gets or sets expression used for calculating labels value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.PaintLabel(PerpetuumSoft.Framework.Drawing.GraphicStream,System.String,System.Double,PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Vector,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Draws a scale mark.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.ShouldSerializeFont">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.Format">
      <summary>Gets and sets text format for the labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetObjectByIndex(System.Int32)">
      <summary>Returns scale mark value by its index.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.OnParentChanged">
      <summary>Raises the OnParentChanged event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetValueByIndex(System.Int32)">
      <summary>Returns scale mark value by its index.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.Size">
      <summary>Gets element size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.ShowSuperposableLabels">
      <summary>Gets or sets value that indicates whether superposable labels will be shown.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.Font">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.FontDescriptor" /> of the element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetTextLabel(System.Object)">
      <summary>Returns label text by the assigned value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.TextAngle">
      <summary>Gets or sets text angle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.OnVisibleChanged">
      <summary>Is called when element's visibility is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.ItemMargins">
      <summary>Gets or sets item margins.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.ResetMeasure">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.ResetMeasure" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.ResetFont">
      <exclude>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> which is used during the outer bevel lines drawing.</exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.TextRotationMode">
      <summary>Gets or sets text rotation mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.Position">
      <summary>Gets or sets label position mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.SetStartDistance(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.SetStartDistance(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetLabelsCount">
      <summary>Return labels count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.NeedPaint(System.Double)">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleMarks">
      <summary>Represents marks on the scale.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ScaleMarks" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarks.MarksSize">
      <summary>Gets or sets size of marks.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarks.RotationMode">
      <summary>Gets or sets rotation mode.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarks.SubMarksSize">
      <summary>Gets or sets size of sub marks.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarks.MarksAngle">
      <summary>Gets or sets tilt angle of maks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarks.Shape">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.ShapeBase" /> object, used for marks shape drawing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.PaintMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,System.Double,PerpetuumSoft.Framework.Drawing.Fill,System.Double,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>Draws marks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.GetWidth">
      <summary>Returns marks width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.GetSubWidth">
      <summary>Returns sub marks width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarks.PaintSubMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>Paints sub marks. </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase">
      <summary>Represents the base class for scale marks.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.SubTicksPosition">
      <summary>Gets or sets the subticks position relative to the base trajectory.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.Divisions">
      <summary>Gets or sets divisions count.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.UseRoundValues">
      <summary>Gets or sets value that indicates if the marks will correspond to round values.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.UseDescreteValues">
      <summary>Gets or sets value, indicating whether discrete values are used.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.Step">
      <summary>Gets or sets interval between marks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.GetWidth">
      <summary>Returns marks width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.GetSubWidth">
      <summary>Returns sub marks width.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.GetSubTicksInternalRadius">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.PaintMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,System.Double,PerpetuumSoft.Framework.Drawing.Fill,System.Double,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>Paints marks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.NeedPaint(System.Double)">
      <summary>Returns value, indicating whehter mark is painted.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.SubDivisions">
      <summary>Gets or sets sub divisions count.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleMarksBase.PaintSubMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>
      </summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ScaleTitle">
      <summary>Represents title of a scale.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleTitle.GetObjectByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetObjectByIndex(System.Int32)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ScaleTitle.Text">
      <summary>Gets or sets text, displayed in this title.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleTitle.GetValueByIndex(System.Int32)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetValueByIndex(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleTitle.GetLabelsCount">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.ScaleLabelsBase.GetLabelsCount" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ScaleTitle.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.ScaleTitle" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ShowMode">
      <summary>Showing modes for <see cref="T:PerpetuumSoft.Instrumentation.Model.Needle" /> element.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ShowMode.ShowBoth">
      <summary>ShowBoth mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ShowMode.ShowLeft">
      <summary>ShowLeft mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.ShowMode.ShowRigth">
      <summary>ShowRight mode.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement">
      <summary>Represents the simple rectangle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.OnBoundsChanged">
      <summary>Is called when bounds of a rectangle are chaged.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.Bounds">
      <summary>Bound of the rectangle.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.Center">
      <summary>Gets or sets the center of the rectangle.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SimpleRectangleElement.Size">
      <summary>Gets or sets size of the rectangle.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Slider">
      <summary>Represents the Slider.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.OnMouseMove(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raise the MouseMove event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.OnMouseEnter(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raise the MouseEnter event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.OnMouseUp(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raise the MouseUp event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.GetPosition(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ISlider.GetPosition(System.Double)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Slider" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.OnMouseLeave(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raise the MouseLeave event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Slider.OnMouseDown(PerpetuumSoft.Framework.Model.MouseArguments)">
      <summary>Raise the MouseDown event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.SliderBase">
      <summary>Represents the basic class for slider elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.RoundValue(System.Double)">
      <summary>Returns the number nearest the specified value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.MaxLimit">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ISlider.MaxLimit" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.OnValueChanged(PerpetuumSoft.Framework.Model.PropertyEventArgs)">
      <summary>Raise the ValueChanget event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Hot">
      <summary>Gets the value indicating whether mouse cursode is over element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.GetRadius(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ILinkedSupported.GetRadius(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.SetPressed(System.Boolean)">
      <summary>Sets <see cref="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Pressed" /> property.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.MinLimit">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ISlider.MinLimit" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Scale">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Model.IScale" /> object of SliderBase element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Smooth">
      <summary>Gets or sets value that indicates whether smoothing will be applied.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Pressed">
      <summary>Gets the value indicating whether mouse button was pressed.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.SliderBase.ValueChanged">
      <summary>Occurs after slider value changing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.SetDragged(System.Boolean)">
      <summary>Sets <see cref="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Dragged" /> property.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Value">
      <summary>Implements <see cref="P:PerpetuumSoft.Instrumentation.Model.ISlider.Value" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.GetObject(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetObject(System.String)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Stroke">
      <summary>Gets or sets the Stroke object that is used to trace.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Dragged">
      <summary>Gets the value indicating whether element is dragged.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.GetFunction(System.String)">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Expressions.IExpressionSite.GetFunction(System.String)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.SetHot(System.Boolean)">
      <summary>Sets <see cref="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Hot" /> property.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.GetPosition(System.Double)">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.ISlider.GetPosition(System.Double)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Style">
      <summary>Gets or sets name of the used style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SliderBase.OnParentChanged">
      <summary>Is called when the Parent property is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Step">
      <summary>Gets or sets step of SliderBase element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SliderBase.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.SmartValue">
      <summary>Represents data type with the ability to assign absolute values, relative values in percentage and a specific Auto value, specifying the need to automatically calculate value, subject to the use context.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.#ctor(PerpetuumSoft.Instrumentation.Model.SmartValueKind,System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.SmartValue" /> class with parameter for initializing the Kind and Value prioperties.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <summary>Creates SmartValue by its string representation, with the use of NumberStyle and FormatProvider.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.GetHashCode">
      <summary>Overridden. See <see cref="M:System.Object.GetHashCode" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SmartValue.Value">
      <summary>Gets value.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SmartValue.Auto">
      <summary>Gets Auto SmartValue.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.Parse(System.String)">
      <summary>Creates SmartValue by its string representation.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.#ctor(System.Double)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.SmartValue" /> class with parameter for initializing the Value property.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.Equals(System.Object)">
      <summary>Overridden. See <see cref="M:System.Object.Equals(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.#ctor(PerpetuumSoft.Instrumentation.Model.SmartValueKind)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.SmartValue" /> class with parameter for initializing the Kind prioperty.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.ToString(System.IFormatProvider)">
      <summary>Returns text, representing this SmartValue.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.Clone">
      <summary>Creates a clone of this SmartValue.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.System#IFormattable#ToString(System.String,System.IFormatProvider)">
      <summary>Implements <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.SmartValue.Kind">
      <summary>Gets kind of value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.SmartValue.Parse(System.String,System.IFormatProvider)">
      <summary>Creates SmartValue by its string representation, with the use of FormatProvider for reading values.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.SmartValueKind">
      <summary>Enumerates the smart value type.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SmartValueKind.Percent">
      <summary>Specifies SmartValue in percentage.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SmartValueKind.Auto">
      <summary>Specifies that the SmartValue is auto. I.e. value will be calculated automatically subject to the use context.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SmartValueKind.Constant">
      <summary>Specifies constant SmartValue.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Specialized.Design.DigitalTextDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Specialized.Design.DigitsDesigner">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText">
      <summary>Represents the text displayed with digital display effect.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.SegmentSize">
      <summary>Gets or sets the symbol segment size.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.Font">
      <summary>Gets or sets font used during the text display.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.SegmentSpaces">
      <summary>Gets or sets space between segments.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.InactiveColor">
      <summary>Gets or sets the color for the inactive display segments.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.DigitalBackgroundVisible">
      <summary>Gets or sets a value showing if background should be displayed with the digital display effect.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Draws the element content.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.TextVerticalOffset">
      <summary>Gets or sets the text vertical offset.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.ActiveColor">
      <summary>Gets or sets the color for the active display segments.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.Text">
      <summary>Gets or sets the displayed text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.DigitalText.TextHorizontalOffset">
      <summary>Gets or sets the text horizontal offset.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Specialized.Digits">
      <summary>Represents the Digits.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.ActiveColor">
      <summary>Gets or sets digits active color.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.DigitWidth">
      <summary>Gets or sets digit width.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.DigitSpace">
      <summary>Gets or sets digit space.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.InactiveColor">
      <summary>Gets or sets digits inactive color.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.Text">
      <summary>Gets or sets digits text.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.SegmentThickness">
      <summary>Gets or sets segment thickness.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.SegmentSpace">
      <summary>Gets or sets digit segment space.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Specialized.Digits" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Digits.DigitHeight">
      <summary>Gets or sets digits height.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer">
      <summary>Represents the Odometer.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.Font">
      <summary>Gets or sets font that is used for the text display.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.FirstDigitBackFill">
      <summary>Gets or sets back <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> for first odometer element digit.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.Value">
      <summary>Gets or sets odometer value.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.ForeFill">
      <summary>Gets or sets fore <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> for ododmeter element.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.ShouldSerializeFont">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.RectangleElement.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.ResetFont">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.BackFill">
      <summary>Gets or sets back <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> for dodmeter element.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Specialized.Odometer.FirstDigitForeFill">
      <summary>Gets or sets fore <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> fo first odometer element digit.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Spring">
      <summary>Represents the Spring.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Spring.Amplitude">
      <summary>Gets or sets spring coils amplitude.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Spring.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Spring.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Spring" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Spring.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Spring.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Spring.CoilsCount">
      <summary>Gets or sets coils count.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.StandardBevel">
      <summary>Represents simple rectangular bevel.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.Margins">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Margins" /> which sets margins.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.DownOffset">
      <summary>Gets or sets the bevel inner effect offset.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.StandardBevel.Clone">
      <summary>Implements <see cref="M:System.ICloneable.Clone" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.StandardBevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Bevel.GetDockingBounds(PerpetuumSoft.Framework.Drawing.VectorRectangle)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.DrawingStyle">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.RectangleBevelDrawingStyle" /> which represents the bevel drawing style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.Fill">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> which is used during the background drawing.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.BevelShadow">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Shadow" /> which sets the bevel shadow effect.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.Stroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> which is used during the lines drawing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.StandardBevel.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.StandardBevel" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.CornerRadius">
      <summary>Gets or sets corner radius.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.StandardBevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Bevel.Paint(PerpetuumSoft.Framework.Drawing.VectorRectangle,PerpetuumSoft.Framework.Drawing.GraphicStream)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.StandardBevel.UpOffset">
      <summary>Gets or sets the bevel outer effect offset.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Star">
      <summary>Represents the Star.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Star.InternalRadius">
      <summary>Gets or sets star internal radius.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Star.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Star" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Star.GetVertex">
      <summary>Returns vertexes of the star element.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.SubTicksPosition">
      <summary>Represents SubTicks positions.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SubTicksPosition.Far">
      <summary>Far position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SubTicksPosition.Near">
      <summary>Near position.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.SubTicksPosition.Center">
      <summary>Center position.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Tank">
      <summary>Determines the tank element, visualizes value in the form of level.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Tank.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.OnPaint(PerpetuumSoft.Framework.Model.PaintArguments)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.TankWidth">
      <summary>Gets or sets width of the tank wall.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.TankColor">
      <summary>Gets or sets the color of the tank.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.Effect3D">
      <summary>Gets or sets 3d effects mode.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.LiquidColor">
      <summary>Gets or sets liquid color in this tank.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.Depth">
      <summary>Gets or sets depth of the tank.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.Width">
      <summary>Gets or sets width of the thank.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Tank.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Tank" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Tank.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Tank.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Tank.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TextItem">
      <summary>Represents the text using in text labels elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItem.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItem" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.TextItem.Text">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItem" /> object value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItem.ToString">
      <summary>Overridden. See <see cref="M:System.Object.ToString" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.TextItem.Value">
      <summary>Gets or sets value of text item.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItem.#ctor(PerpetuumSoft.Instrumentation.Model.SmartValue,System.String)">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItem" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TextItemCollection">
      <summary>Represents the collection of <see cref="T:PerpetuumSoft.Instrumentation.Madel.TextItem" /> elements.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.OnValidate(System.Object)">
      <summary>Raise Validate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Model.TextItem)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.TextItemCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Raise RemoveComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.Remove(PerpetuumSoft.Instrumentation.Model.TextItem)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.Contains(PerpetuumSoft.Instrumentation.Model.TextItem)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Model.TextItemCollection.CollectionChanged">
      <summary>Occurs after changed collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.AddRange(PerpetuumSoft.Instrumentation.Model.TextItem[])">
      <summary>Add array of <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItem" /> objects into collection.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.TextItemCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Raise InsertComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.OnInsert(System.Int32,System.Object)">
      <summary>Raise Insert event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.IndexOf(PerpetuumSoft.Instrumentation.Model.TextItem)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextItemCollection.Add(PerpetuumSoft.Instrumentation.Model.TextItem)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TextItemCollection.CollectionChangedEventHandler">
      <summary>Represents method which was call after <see cref="T:PerpetuunSoft.Instrumentation.Model.TextItemCollection" /> change.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TextLabels">
      <summary>Represent Text labels.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TextLabels.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.TextLabels" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TextRotationMode">
      <summary>Represents the text rotation mode.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.TextRotationMode.Screen">
      <summary>Rotation relative to screen.</summary>
    </member>
    <member name="F:PerpetuumSoft.Instrumentation.Model.TextRotationMode.Scale">
      <summary>Rotation relative to scale.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.Ticks">
      <summary>Represents the Ticks.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Ticks.Fill">
      <summary>Gets or sets the Fill object that is used to paint over.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.GetWidth">
      <summary>Returns width of marks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.GetSize">
      <summary>Implements <see cref="M:PerpetuumSoft.Instrumentation.Model.IScaleElement.GetSize" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.GetSubWidth">
      <summary>Returns width of sub marks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.Calculate">
      <summary>Overridden. See<see cref="M:PerpetuumSoft.Instrumentation.Model.Ticks.Calculate" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.PaintMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,System.Double,PerpetuumSoft.Framework.Drawing.Fill,System.Double,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>Paints marks.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Ticks.Length">
      <summary>Gets or sets ticks length.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.Ticks.SubLength">
      <summary>Gets or sets length of the scale sub-ticks.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Model.Ticks" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.GetBoundedBox">
      <summary>Implements <see cref="M:PerpetuumSoft.Framework.Model.IElement.GetBoundedBox" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.Ticks.PaintSubMark(PerpetuumSoft.Framework.Drawing.GraphicStream,System.Double,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke,System.Boolean)">
      <summary>Paints sub ticks.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.TruncatedEllipse">
      <summary>Represents the TruncaredEllipse.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TruncatedEllipse.DrawContent(PerpetuumSoft.Framework.Model.PaintArguments,PerpetuumSoft.Framework.Drawing.Fill,PerpetuumSoft.Framework.Drawing.Stroke)">
      <summary>Draws the element content.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TruncatedEllipse.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)">
      <summary>Overridden. See <see cref="M:PerpetuumSoft.Instrumentation.Model.Element.GetHitTest(PerpetuumSoft.Framework.Drawing.Vector)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.TruncatedEllipse.#ctor">
      <summary>Initializes a new instance of the  <see cref="T:PerpetuumSoft.Instrumentation.Model.TruncatedEllipse" />.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Model.ValuePresenterScaleElement">
      <summary>Represents base class for scale elements, representing data value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ValuePresenterScaleElement.GetSmartValue(PerpetuumSoft.Instrumentation.Model.SmartValue,System.Double)">
      <summary>Returns value by SmartValue amd calculated value for the Auto case. </summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Model.ValuePresenterScaleElement.Value">
      <summary>Gets or sets represented value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ValuePresenterScaleElement.GetMaxValue">
      <summary>Return maximim value from represented values.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Model.ValuePresenterScaleElement.GetMinValue">
      <summary>Returns minimum value from represented values.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Styles.Style">
      <summary>Represent style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.Style.Fill">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Fill" /> object that is used to paint over.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.Style.Stroke">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.Stroke" /> object that is used to trace.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.Style.Name">
      <summary>Gets or sets style name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.Style.Font">
      <summary>Gets or sets <see cref="T:PerpetuumSoft.Framework.Drawing.FontDescriptor" /> for the style.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.Style.Image">
      <summary>Gets or sets <see cref="T:System.Drawing.Image" /> object for the style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.Style.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Styles.Style" /> class.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Styles.StyleCollection">
      <summary>Represent collection of <see cref="'T:PerpetuumSoft.Instrumentation.Styles.Style" /> objects.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Styles.StyleCollection.StyleRemoved">
      <summary>Occurs after removed style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Insert(System.Int32,PerpetuumSoft.Instrumentation.Styles.Style)">
      <summary>Implements <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.AddRange(PerpetuumSoft.Instrumentation.Styles.Style[])">
      <summary>Add array of <see cref="T:PerpetuumSoft.Instrumentation.Styles.Style" /> objects into collection.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Item(System.Int32)">
      <summary>Implements <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Item(System.String)">
      <summary>Gets <see cref="T:PerpetuumSoft.Instrumentation.Styles.Style" /> by specific name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.OnInsertComplete(System.Int32,System.Object)">
      <summary>Raise InsertComplete event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.OnValidate(System.Object)">
      <summary>Raise Validate event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Remove(PerpetuumSoft.Instrumentation.Styles.Style)">
      <summary>Implements <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Contains(PerpetuumSoft.Instrumentation.Styles.Style)">
      <summary>Implements <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.OnInsert(System.Int32,System.Object)">
      <summary>Raise Insert event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.IndexOf(PerpetuumSoft.Instrumentation.Styles.Style)">
      <summary>Implements <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Styles.StyleCollection.StyleAdded">
      <summary>Occurs after added style.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.Add(PerpetuumSoft.Instrumentation.Styles.Style)">
      <summary>Implements <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.#ctor">
      <summary>Initializes a new instance of the <see cref="T:PerpetuumSoft.Instrumentation.Styles.StyleCollection" /> class.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Styles.StyleCollection.OnRemoveComplete(System.Int32,System.Object)">
      <summary>Raise RemoveComplete event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Styles.StyleCollection.CollectionChanged">
      <summary>Represents method wich called after changing collection.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.DesignerForm">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.DesignerForm+MergablePropertyValue">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.InstrumentationDesignerService">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.InstrumentView">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.IWizard">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.TreeViewControl">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Design.WizardForm">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget">
      <summary>Represents a special Widget control, providing additional abilities of work with slider instruments.  </summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.OnValueChanged(System.EventArgs)">
      <summary>Raises the ValueChanged event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.Increment">
      <summary>Gets or sets the value change step.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.SliderName">
      <summary>Gets or sets active slider name.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.MainSlider">
      <summary>Gets active slider.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.Maximum">
      <summary>Gets or sets minimum value active slider can possess.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.Value">
      <summary>Gets or sets active slider value.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.OnInstrumentLoad(System.EventArgs)">
      <summary>Raises the InstrumentLoad event.</summary>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.ValueChanged">
      <summary>Occurs when value is changed.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.Minimum">
      <summary>Gets or sets maximum value active slider can possess.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.IsInputKey(System.Windows.Forms.Keys)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.#ctor">
      <summary>Gets or sets active slider name.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.IndicatorWidget.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>'Raises the KeyDown event.</summary>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.InstrumentationLicenseProvider">
      <exclude>
      </exclude>
    </member>
    <member name="T:PerpetuumSoft.Instrumentation.Windows.Forms.Widget">
      <summary>Represents a control for displaying instruments.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetDefaultProperty">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetComponentName">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetClassName">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.#ctor">
      <summary>Creates a new instant of the <see cref="T:PerpetuumSoft.Instrumentation.Windows.Forms.Widget" /> class.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.About">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetEditor(System.Type)">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetEvents(System.Attribute[])">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnMouseLeave(System.EventArgs)">
      <summary>Raises the MouseLeave event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetProperties(System.Attribute[])">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.System#ComponentModel#ICustomTypeDescriptor#GetProperties">
      <exclude>
      </exclude>
      <summary>Implements <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetProperties" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetConverter">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetDefaultEvent">
      <exclude>
      </exclude>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetElementAt(System.Int32,System.Int32)">
      <summary>Returns the element that belongs to the instrument and is located in the point with specified coordinates.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>Raises the OnPaint event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnSizeChanged(System.EventArgs)">
      <summary>Occurs when size is changed.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetElementAt(System.Drawing.Point)">
      <summary>Returns the element that belongs to the instrument and is located in the specified point.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.ZoomScale">
      <summary>Gets or sets zoom for displaying the instrument.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnGotFocus(System.EventArgs)">
      <summary>Raises the GotFocus event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnEnabledChanged(System.EventArgs)">
      <summary>Raises the EnableChanged event.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.InstrumentationStream">
      <summary>Gets or sets the instrument serialized to a string.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.StringRegKey">
      <exclude>
      </exclude>
    </member>
    <member name="E:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.InstrumentLoad">
      <summary>Occurs when the instrument is loaded.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.InvalidateInterval">
      <summary>Gets or sets interval for the instrument re-drawing.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnLostFocus(System.EventArgs)">
      <summary>Raises the LostFocus event.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.GetAttributes">
      <exclude>
      </exclude>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.Instrument">
      <summary>Gets or sets the instrument.</summary>
    </member>
    <member name="P:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.HideFocusRectangle">
      <summary>Gets or sets value that determines if rectangle border will be hidden, when the Widget gets focus.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.System#ComponentModel#ICustomTypeDescriptor#GetEvents">
      <exclude>
      </exclude>
      <summary>Implements <see cref="M:System.ComponentModel.ICustomTypeDescriptor.GetEvents" />.</summary>
    </member>
    <member name="M:PerpetuumSoft.Instrumentation.Windows.Forms.Widget.OnInstrumentLoad(System.EventArgs)">
      <summary>Raises the InstrumentLoad event.</summary>
    </member>
  </members>
</doc>